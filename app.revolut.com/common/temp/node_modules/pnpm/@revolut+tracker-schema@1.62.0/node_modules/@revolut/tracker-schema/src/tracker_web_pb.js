// source: tracker_web.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = window;

var google_protobuf_timestamp_pb = require('google-protobuf/google/protobuf/timestamp_pb.js');
goog.object.extend(proto, google_protobuf_timestamp_pb);
var tracker_common_pb = require('./tracker_common_pb.js');
goog.object.extend(proto, tracker_common_pb);
var options_pb = require('./options_pb.js');
goog.object.extend(proto, options_pb);
goog.exportSymbol('proto.revolut.tracking.COAWebEvent', null, global);
goog.exportSymbol('proto.revolut.tracking.COAWebEvent.Action', null, global);
goog.exportSymbol('proto.revolut.tracking.COAWebEvent.Category', null, global);
goog.exportSymbol('proto.revolut.tracking.COAWebEventBusiness', null, global);
goog.exportSymbol('proto.revolut.tracking.COAWebEventBusiness.Action', null, global);
goog.exportSymbol('proto.revolut.tracking.COAWebEventBusiness.Category', null, global);
goog.exportSymbol('proto.revolut.tracking.WebDevice', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.revolut.tracking.COAWebEvent = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.revolut.tracking.COAWebEvent, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.revolut.tracking.COAWebEvent.displayName = 'proto.revolut.tracking.COAWebEvent';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.revolut.tracking.COAWebEventBusiness = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.revolut.tracking.COAWebEventBusiness, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.revolut.tracking.COAWebEventBusiness.displayName = 'proto.revolut.tracking.COAWebEventBusiness';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.revolut.tracking.WebDevice = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.revolut.tracking.WebDevice, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.revolut.tracking.WebDevice.displayName = 'proto.revolut.tracking.WebDevice';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.revolut.tracking.COAWebEvent.prototype.toObject = function(opt_includeInstance) {
  return proto.revolut.tracking.COAWebEvent.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.revolut.tracking.COAWebEvent} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.revolut.tracking.COAWebEvent.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    serverTimestampOffsetMicros: jspb.Message.getFieldWithDefault(msg, 3, 0),
    category: jspb.Message.getFieldWithDefault(msg, 4, 0),
    object: jspb.Message.getFieldWithDefault(msg, 5, ""),
    action: jspb.Message.getFieldWithDefault(msg, 6, 0),
    user: (f = msg.getUser()) && tracker_common_pb.User.toObject(includeInstance, f),
    geo: (f = msg.getGeo()) && tracker_common_pb.Geo.toObject(includeInstance, f),
    app: (f = msg.getApp()) && tracker_common_pb.App.toObject(includeInstance, f),
    featureFlagsMap: (f = msg.getFeatureFlagsMap()) ? f.toObject(includeInstance, undefined) : [],
    paramsMap: (f = msg.getParamsMap()) ? f.toObject(includeInstance, undefined) : [],
    version: jspb.Message.getFieldWithDefault(msg, 13, 0),
    previousEventId: jspb.Message.getFieldWithDefault(msg, 14, ""),
    serverTimestamp: (f = msg.getServerTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    device: (f = msg.getDevice()) && proto.revolut.tracking.WebDevice.toObject(includeInstance, f),
    sessionId: jspb.Message.getFieldWithDefault(msg, 17, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.revolut.tracking.COAWebEvent}
 */
proto.revolut.tracking.COAWebEvent.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.revolut.tracking.COAWebEvent;
  return proto.revolut.tracking.COAWebEvent.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.revolut.tracking.COAWebEvent} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.revolut.tracking.COAWebEvent}
 */
proto.revolut.tracking.COAWebEvent.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setServerTimestampOffsetMicros(value);
      break;
    case 4:
      var value = /** @type {!proto.revolut.tracking.COAWebEvent.Category} */ (reader.readEnum());
      msg.setCategory(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setObject(value);
      break;
    case 6:
      var value = /** @type {!proto.revolut.tracking.COAWebEvent.Action} */ (reader.readEnum());
      msg.setAction(value);
      break;
    case 7:
      var value = new tracker_common_pb.User;
      reader.readMessage(value,tracker_common_pb.User.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    case 8:
      var value = new tracker_common_pb.Geo;
      reader.readMessage(value,tracker_common_pb.Geo.deserializeBinaryFromReader);
      msg.setGeo(value);
      break;
    case 9:
      var value = new tracker_common_pb.App;
      reader.readMessage(value,tracker_common_pb.App.deserializeBinaryFromReader);
      msg.setApp(value);
      break;
    case 11:
      var value = msg.getFeatureFlagsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 12:
      var value = msg.getParamsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVersion(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreviousEventId(value);
      break;
    case 15:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setServerTimestamp(value);
      break;
    case 16:
      var value = new proto.revolut.tracking.WebDevice;
      reader.readMessage(value,proto.revolut.tracking.WebDevice.deserializeBinaryFromReader);
      msg.setDevice(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.revolut.tracking.COAWebEvent.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.revolut.tracking.COAWebEvent.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.revolut.tracking.COAWebEvent} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.revolut.tracking.COAWebEvent.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getServerTimestampOffsetMicros();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getCategory();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getObject();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAction();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      tracker_common_pb.User.serializeBinaryToWriter
    );
  }
  f = message.getGeo();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      tracker_common_pb.Geo.serializeBinaryToWriter
    );
  }
  f = message.getApp();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      tracker_common_pb.App.serializeBinaryToWriter
    );
  }
  f = message.getFeatureFlagsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(11, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getParamsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(12, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeUint32(
      13,
      f
    );
  }
  f = message.getPreviousEventId();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getServerTimestamp();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDevice();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.revolut.tracking.WebDevice.serializeBinaryToWriter
    );
  }
  f = message.getSessionId();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.revolut.tracking.COAWebEvent.Category = {
  CategoryUnspecified: 0,
  Account: 1,
  AddressBookSyncing: 2,
  Android: 3,
  Authentication: 4,
  BankBeneficiary: 5,
  Budgeting: 6,
  Card: 7,
  CardOrder: 8,
  Communication: 9,
  Compliance: 10,
  Concierge: 11,
  Contact: 12,
  Credit: 13,
  Crypto: 14,
  Currencies: 15,
  CX: 16,
  Dashboard: 17,
  DeviceInsurance: 18,
  DirectDebit: 19,
  Donations: 20,
  External: 21,
  FAQ: 22,
  General: 23,
  GooglePayConfirm: 24,
  Group: 25,
  Insurance: 26,
  MoneyBox: 27,
  NearMe: 28,
  NewsBanners: 29,
  NotificationCentre: 30,
  Offers: 31,
  PaymentLink: 32,
  Payments: 33,
  Pockets: 34,
  Profile: 35,
  PromoCode: 36,
  RecurringPayment: 37,
  Referrals: 38,
  RequestMoney: 39,
  RevUser: 40,
  Scanner: 41,
  ScheduledPayment: 42,
  SendMoney: 43,
  Settings: 44,
  SourceOfWealth: 45,
  SplitBill: 46,
  Subscription: 47,
  Support: 48,
  Survey: 49,
  TopUp: 50,
  Trading: 51,
  Transaction: 52,
  Troubleshooter: 53,
  Vaults: 54,
  WaitingList: 55,
  Wealth: 56,
  Lounges: 57,
  Device: 58,
  Perks: 59,
  PushNotifications: 60,
  Privacy: 61,
  AccountSwitcher: 62,
  PlanDowngrade: 63,
  PlanDetails: 64,
  Goals: 65,
  Onboarding: 66,
  LastCryptoWeek: 67,
  CryptoAccount: 68,
  Junior: 69,
  CardVerification: 70,
  TransactionVerification: 71,
  SmartDelay: 72,
  Home: 73,
  HomeAccounts: 74,
  AccountDetails: 75,
  TransactionDetails: 76,
  WatchApp: 77,
  Address: 78,
  Insights: 79,
  OpenBanking: 80,
  PayBill: 81,
  BillAccounts: 82,
  GroupBills: 83,
  LinkedAccounts: 84,
  Inbox: 85,
  Stories: 86,
  Articles: 87,
  BusinessReferrals: 88,
  GlobalSearch: 89,
  Commodities: 90,
  Tracker: 91,
  Marketplace: 92,
  PlanUpgrade: 93,
  HomeFeed: 94,
  Favourites: 95,
  Gifting: 96,
  CreditCard: 97,
  CreditOnboarding: 98,
  BuabOnboarding: 99,
  FxOrders: 100,
  PhoneRecovery: 101,
  PasscodeRecovery: 102
};

/**
 * @enum {number}
 */
proto.revolut.tracking.COAWebEvent.Action = {
  action_unspecified: 0,
  aborted: 1,
  accepted: 2,
  activated: 3,
  added: 4,
  adjusted: 5,
  allowed: 6,
  amount_defined: 7,
  approved: 8,
  attempted: 9,
  cancelled: 10,
  captured: 11,
  cleared: 12,
  clicked: 13,
  closed: 14,
  complete: 15,
  completed: 16,
  confirmed: 17,
  copied: 18,
  created: 19,
  deactivated: 20,
  declined: 21,
  deleted: 22,
  denied: 23,
  disabled: 24,
  edited: 25,
  enabled: 26,
  entered: 27,
  failed: 28,
  fallback: 29,
  filtered: 30,
  handled: 31,
  hidden: 32,
  hidden_by_default: 33,
  invited: 34,
  loaded: 35,
  logged_in: 36,
  not_received: 37,
  occured: 38,
  opened: 39,
  ordered: 40,
  rejected: 41,
  reminded: 42,
  removed: 43,
  reordered: 44,
  requested: 45,
  responded: 46,
  retried: 47,
  selected: 48,
  set: 49,
  shared: 50,
  shown: 51,
  skipped: 52,
  started: 53,
  succeeded: 54,
  swiped: 55,
  unapproved: 56,
  upgraded: 57,
  uploaded: 58,
  viewed: 59,
  visibility_changed: 60,
  received: 61,
  A_started: 62,
  B_started: 63,
  A_succeeded: 64,
  B_succeeded: 65,
  A_cancelled: 66,
  B_cancelled: 67,
  A_failed: 68,
  B_failed: 69,
  returned: 70,
  paused: 71,
  unavailable: 72,
  reported: 73
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.revolut.tracking.COAWebEvent.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.revolut.tracking.COAWebEvent} returns this
 */
proto.revolut.tracking.COAWebEvent.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp timestamp = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.revolut.tracking.COAWebEvent.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.revolut.tracking.COAWebEvent} returns this
*/
proto.revolut.tracking.COAWebEvent.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.revolut.tracking.COAWebEvent} returns this
 */
proto.revolut.tracking.COAWebEvent.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.revolut.tracking.COAWebEvent.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 server_timestamp_offset_micros = 3;
 * @return {number}
 */
proto.revolut.tracking.COAWebEvent.prototype.getServerTimestampOffsetMicros = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.revolut.tracking.COAWebEvent} returns this
 */
proto.revolut.tracking.COAWebEvent.prototype.setServerTimestampOffsetMicros = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional Category category = 4;
 * @return {!proto.revolut.tracking.COAWebEvent.Category}
 */
proto.revolut.tracking.COAWebEvent.prototype.getCategory = function() {
  return /** @type {!proto.revolut.tracking.COAWebEvent.Category} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.revolut.tracking.COAWebEvent.Category} value
 * @return {!proto.revolut.tracking.COAWebEvent} returns this
 */
proto.revolut.tracking.COAWebEvent.prototype.setCategory = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional string object = 5;
 * @return {string}
 */
proto.revolut.tracking.COAWebEvent.prototype.getObject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.revolut.tracking.COAWebEvent} returns this
 */
proto.revolut.tracking.COAWebEvent.prototype.setObject = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional Action action = 6;
 * @return {!proto.revolut.tracking.COAWebEvent.Action}
 */
proto.revolut.tracking.COAWebEvent.prototype.getAction = function() {
  return /** @type {!proto.revolut.tracking.COAWebEvent.Action} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.revolut.tracking.COAWebEvent.Action} value
 * @return {!proto.revolut.tracking.COAWebEvent} returns this
 */
proto.revolut.tracking.COAWebEvent.prototype.setAction = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional common.User user = 7;
 * @return {?proto.revolut.tracking.common.User}
 */
proto.revolut.tracking.COAWebEvent.prototype.getUser = function() {
  return /** @type{?proto.revolut.tracking.common.User} */ (
    jspb.Message.getWrapperField(this, tracker_common_pb.User, 7));
};


/**
 * @param {?proto.revolut.tracking.common.User|undefined} value
 * @return {!proto.revolut.tracking.COAWebEvent} returns this
*/
proto.revolut.tracking.COAWebEvent.prototype.setUser = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.revolut.tracking.COAWebEvent} returns this
 */
proto.revolut.tracking.COAWebEvent.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.revolut.tracking.COAWebEvent.prototype.hasUser = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional common.Geo geo = 8;
 * @return {?proto.revolut.tracking.common.Geo}
 */
proto.revolut.tracking.COAWebEvent.prototype.getGeo = function() {
  return /** @type{?proto.revolut.tracking.common.Geo} */ (
    jspb.Message.getWrapperField(this, tracker_common_pb.Geo, 8));
};


/**
 * @param {?proto.revolut.tracking.common.Geo|undefined} value
 * @return {!proto.revolut.tracking.COAWebEvent} returns this
*/
proto.revolut.tracking.COAWebEvent.prototype.setGeo = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.revolut.tracking.COAWebEvent} returns this
 */
proto.revolut.tracking.COAWebEvent.prototype.clearGeo = function() {
  return this.setGeo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.revolut.tracking.COAWebEvent.prototype.hasGeo = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional common.App app = 9;
 * @return {?proto.revolut.tracking.common.App}
 */
proto.revolut.tracking.COAWebEvent.prototype.getApp = function() {
  return /** @type{?proto.revolut.tracking.common.App} */ (
    jspb.Message.getWrapperField(this, tracker_common_pb.App, 9));
};


/**
 * @param {?proto.revolut.tracking.common.App|undefined} value
 * @return {!proto.revolut.tracking.COAWebEvent} returns this
*/
proto.revolut.tracking.COAWebEvent.prototype.setApp = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.revolut.tracking.COAWebEvent} returns this
 */
proto.revolut.tracking.COAWebEvent.prototype.clearApp = function() {
  return this.setApp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.revolut.tracking.COAWebEvent.prototype.hasApp = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * map<string, string> feature_flags = 11;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.revolut.tracking.COAWebEvent.prototype.getFeatureFlagsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 11, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.revolut.tracking.COAWebEvent} returns this
 */
proto.revolut.tracking.COAWebEvent.prototype.clearFeatureFlagsMap = function() {
  this.getFeatureFlagsMap().clear();
  return this;};


/**
 * map<string, string> params = 12;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.revolut.tracking.COAWebEvent.prototype.getParamsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 12, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.revolut.tracking.COAWebEvent} returns this
 */
proto.revolut.tracking.COAWebEvent.prototype.clearParamsMap = function() {
  this.getParamsMap().clear();
  return this;};


/**
 * optional uint32 version = 13;
 * @return {number}
 */
proto.revolut.tracking.COAWebEvent.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.revolut.tracking.COAWebEvent} returns this
 */
proto.revolut.tracking.COAWebEvent.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional string previous_event_id = 14;
 * @return {string}
 */
proto.revolut.tracking.COAWebEvent.prototype.getPreviousEventId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.revolut.tracking.COAWebEvent} returns this
 */
proto.revolut.tracking.COAWebEvent.prototype.setPreviousEventId = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional google.protobuf.Timestamp server_timestamp = 15;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.revolut.tracking.COAWebEvent.prototype.getServerTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 15));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.revolut.tracking.COAWebEvent} returns this
*/
proto.revolut.tracking.COAWebEvent.prototype.setServerTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.revolut.tracking.COAWebEvent} returns this
 */
proto.revolut.tracking.COAWebEvent.prototype.clearServerTimestamp = function() {
  return this.setServerTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.revolut.tracking.COAWebEvent.prototype.hasServerTimestamp = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional WebDevice device = 16;
 * @return {?proto.revolut.tracking.WebDevice}
 */
proto.revolut.tracking.COAWebEvent.prototype.getDevice = function() {
  return /** @type{?proto.revolut.tracking.WebDevice} */ (
    jspb.Message.getWrapperField(this, proto.revolut.tracking.WebDevice, 16));
};


/**
 * @param {?proto.revolut.tracking.WebDevice|undefined} value
 * @return {!proto.revolut.tracking.COAWebEvent} returns this
*/
proto.revolut.tracking.COAWebEvent.prototype.setDevice = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.revolut.tracking.COAWebEvent} returns this
 */
proto.revolut.tracking.COAWebEvent.prototype.clearDevice = function() {
  return this.setDevice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.revolut.tracking.COAWebEvent.prototype.hasDevice = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional string session_id = 17;
 * @return {string}
 */
proto.revolut.tracking.COAWebEvent.prototype.getSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.revolut.tracking.COAWebEvent} returns this
 */
proto.revolut.tracking.COAWebEvent.prototype.setSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.revolut.tracking.COAWebEventBusiness.prototype.toObject = function(opt_includeInstance) {
  return proto.revolut.tracking.COAWebEventBusiness.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.revolut.tracking.COAWebEventBusiness} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.revolut.tracking.COAWebEventBusiness.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getFieldWithDefault(msg, 1, ""),
    timestamp: (f = msg.getTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    serverTimestampOffsetMicros: jspb.Message.getFieldWithDefault(msg, 3, 0),
    category: jspb.Message.getFieldWithDefault(msg, 4, 0),
    object: jspb.Message.getFieldWithDefault(msg, 5, ""),
    action: jspb.Message.getFieldWithDefault(msg, 6, 0),
    user: (f = msg.getUser()) && tracker_common_pb.User.toObject(includeInstance, f),
    geo: (f = msg.getGeo()) && tracker_common_pb.Geo.toObject(includeInstance, f),
    app: (f = msg.getApp()) && tracker_common_pb.App.toObject(includeInstance, f),
    featureFlagsMap: (f = msg.getFeatureFlagsMap()) ? f.toObject(includeInstance, undefined) : [],
    paramsMap: (f = msg.getParamsMap()) ? f.toObject(includeInstance, undefined) : [],
    version: jspb.Message.getFieldWithDefault(msg, 13, 0),
    previousEventId: jspb.Message.getFieldWithDefault(msg, 14, ""),
    serverTimestamp: (f = msg.getServerTimestamp()) && google_protobuf_timestamp_pb.Timestamp.toObject(includeInstance, f),
    device: (f = msg.getDevice()) && proto.revolut.tracking.WebDevice.toObject(includeInstance, f),
    sessionId: jspb.Message.getFieldWithDefault(msg, 17, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.revolut.tracking.COAWebEventBusiness}
 */
proto.revolut.tracking.COAWebEventBusiness.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.revolut.tracking.COAWebEventBusiness;
  return proto.revolut.tracking.COAWebEventBusiness.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.revolut.tracking.COAWebEventBusiness} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.revolut.tracking.COAWebEventBusiness}
 */
proto.revolut.tracking.COAWebEventBusiness.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    case 2:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setTimestamp(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setServerTimestampOffsetMicros(value);
      break;
    case 4:
      var value = /** @type {!proto.revolut.tracking.COAWebEventBusiness.Category} */ (reader.readEnum());
      msg.setCategory(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setObject(value);
      break;
    case 6:
      var value = /** @type {!proto.revolut.tracking.COAWebEventBusiness.Action} */ (reader.readEnum());
      msg.setAction(value);
      break;
    case 7:
      var value = new tracker_common_pb.User;
      reader.readMessage(value,tracker_common_pb.User.deserializeBinaryFromReader);
      msg.setUser(value);
      break;
    case 8:
      var value = new tracker_common_pb.Geo;
      reader.readMessage(value,tracker_common_pb.Geo.deserializeBinaryFromReader);
      msg.setGeo(value);
      break;
    case 9:
      var value = new tracker_common_pb.App;
      reader.readMessage(value,tracker_common_pb.App.deserializeBinaryFromReader);
      msg.setApp(value);
      break;
    case 11:
      var value = msg.getFeatureFlagsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 12:
      var value = msg.getParamsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readString, jspb.BinaryReader.prototype.readString, null, "", "");
         });
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVersion(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setPreviousEventId(value);
      break;
    case 15:
      var value = new google_protobuf_timestamp_pb.Timestamp;
      reader.readMessage(value,google_protobuf_timestamp_pb.Timestamp.deserializeBinaryFromReader);
      msg.setServerTimestamp(value);
      break;
    case 16:
      var value = new proto.revolut.tracking.WebDevice;
      reader.readMessage(value,proto.revolut.tracking.WebDevice.deserializeBinaryFromReader);
      msg.setDevice(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setSessionId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.revolut.tracking.COAWebEventBusiness.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.revolut.tracking.COAWebEventBusiness.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.revolut.tracking.COAWebEventBusiness} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.revolut.tracking.COAWebEventBusiness.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getId();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getTimestamp();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getServerTimestampOffsetMicros();
  if (f !== 0) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = message.getCategory();
  if (f !== 0.0) {
    writer.writeEnum(
      4,
      f
    );
  }
  f = message.getObject();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getAction();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getUser();
  if (f != null) {
    writer.writeMessage(
      7,
      f,
      tracker_common_pb.User.serializeBinaryToWriter
    );
  }
  f = message.getGeo();
  if (f != null) {
    writer.writeMessage(
      8,
      f,
      tracker_common_pb.Geo.serializeBinaryToWriter
    );
  }
  f = message.getApp();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      tracker_common_pb.App.serializeBinaryToWriter
    );
  }
  f = message.getFeatureFlagsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(11, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getParamsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(12, writer, jspb.BinaryWriter.prototype.writeString, jspb.BinaryWriter.prototype.writeString);
  }
  f = message.getVersion();
  if (f !== 0) {
    writer.writeUint32(
      13,
      f
    );
  }
  f = message.getPreviousEventId();
  if (f.length > 0) {
    writer.writeString(
      14,
      f
    );
  }
  f = message.getServerTimestamp();
  if (f != null) {
    writer.writeMessage(
      15,
      f,
      google_protobuf_timestamp_pb.Timestamp.serializeBinaryToWriter
    );
  }
  f = message.getDevice();
  if (f != null) {
    writer.writeMessage(
      16,
      f,
      proto.revolut.tracking.WebDevice.serializeBinaryToWriter
    );
  }
  f = message.getSessionId();
  if (f.length > 0) {
    writer.writeString(
      17,
      f
    );
  }
};


/**
 * @enum {number}
 */
proto.revolut.tracking.COAWebEventBusiness.Category = {
  CategoryUnspecified: 0,
  CardsOrdering: 1,
  SignUpUser: 2,
  SignUpLinkBusiness: 3,
  SignUpLinkRetail: 4,
  SignUpBusiness: 5,
  PaymentsHome: 6,
  PaymentsCounterparty: 7,
  PaymentsSendFunds: 8,
  PaymentsExchange: 9,
  PaymentsSendFundsBulk: 10,
  PaymentsApprovalB: 11,
  PaymentsApproval: 12,
  PaymentsFailed: 13,
  AccountsHome: 14,
  AccountsTopup: 15,
  HedgingHome: 16,
  HedgingContract: 17,
  ExpensesHome: 18,
  MerchantStories: 19,
  MerchantPromo: 20,
  MerchantAccountApplication: 21,
  MerchantHome: 22,
  PerksHome: 23,
  PlansNews: 24,
  PlansUpgrade: 25,
  FreeTrialGrow: 26,
  Chat: 27,
  HelpCentre: 28,
  TransactionInfo: 29,
  AccountTermination: 30,
  NPS: 31,
  Settings: 32,
  CardsHome: 33,
  CardsLink: 34,
  Referrals: 35,
  Notifications: 36,
  MerchantRequestPayment: 37,
  SignIn: 38,
  Stories: 39,
  OnboardingWaitlist: 40,
  OnboardingKYB: 41,
  OnboardingSignUp: 42,
  PageView: 43,
  MainMenu: 44,
  Integrations: 45,
  Subscriptions: 46,
  Payroll: 47,
  AddAccount: 48,
  Dashboard: 49,
  AppLaunch: 50,
  Invoices: 51,
  Rates: 52,
  RateUs: 53,
  Search: 54,
  RewardDetails: 55,
  Overview: 56,
  PointsHome: 57,
  PointsChallengeDetails: 58,
  Tracker: 59,
  Vouchers: 60,
  Team: 61,
  Error: 62,
  PayrollPeople: 63,
  PayrollPayruns: 64,
  PayrollSchedules: 65,
  LandingPage: 1000,
  PartnerPage: 1001,
  SignUpDeveloper: 1002,
  SignUpMerchantApi: 1003,
  SignUpBusinessApi: 1004,
  PortalApplications: 1005
};

/**
 * @enum {number}
 */
proto.revolut.tracking.COAWebEventBusiness.Action = {
  action_unspecified: 0,
  clicked: 1,
  opened: 2,
  closed: 3,
  added: 4,
  edited: 5,
  completed: 6,
  succeeded: 7,
  failed: 8,
  filtered: 9,
  started: 10,
  dropped: 11,
  shown: 12,
  rendered: 13,
  set: 14,
  paused: 15,
  drag_started: 16,
  drag_ended: 17
};

/**
 * optional string id = 1;
 * @return {string}
 */
proto.revolut.tracking.COAWebEventBusiness.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.revolut.tracking.COAWebEventBusiness} returns this
 */
proto.revolut.tracking.COAWebEventBusiness.prototype.setId = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional google.protobuf.Timestamp timestamp = 2;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.revolut.tracking.COAWebEventBusiness.prototype.getTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 2));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.revolut.tracking.COAWebEventBusiness} returns this
*/
proto.revolut.tracking.COAWebEventBusiness.prototype.setTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 2, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.revolut.tracking.COAWebEventBusiness} returns this
 */
proto.revolut.tracking.COAWebEventBusiness.prototype.clearTimestamp = function() {
  return this.setTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.revolut.tracking.COAWebEventBusiness.prototype.hasTimestamp = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 server_timestamp_offset_micros = 3;
 * @return {number}
 */
proto.revolut.tracking.COAWebEventBusiness.prototype.getServerTimestampOffsetMicros = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {number} value
 * @return {!proto.revolut.tracking.COAWebEventBusiness} returns this
 */
proto.revolut.tracking.COAWebEventBusiness.prototype.setServerTimestampOffsetMicros = function(value) {
  return jspb.Message.setProto3IntField(this, 3, value);
};


/**
 * optional Category category = 4;
 * @return {!proto.revolut.tracking.COAWebEventBusiness.Category}
 */
proto.revolut.tracking.COAWebEventBusiness.prototype.getCategory = function() {
  return /** @type {!proto.revolut.tracking.COAWebEventBusiness.Category} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/**
 * @param {!proto.revolut.tracking.COAWebEventBusiness.Category} value
 * @return {!proto.revolut.tracking.COAWebEventBusiness} returns this
 */
proto.revolut.tracking.COAWebEventBusiness.prototype.setCategory = function(value) {
  return jspb.Message.setProto3EnumField(this, 4, value);
};


/**
 * optional string object = 5;
 * @return {string}
 */
proto.revolut.tracking.COAWebEventBusiness.prototype.getObject = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.revolut.tracking.COAWebEventBusiness} returns this
 */
proto.revolut.tracking.COAWebEventBusiness.prototype.setObject = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional Action action = 6;
 * @return {!proto.revolut.tracking.COAWebEventBusiness.Action}
 */
proto.revolut.tracking.COAWebEventBusiness.prototype.getAction = function() {
  return /** @type {!proto.revolut.tracking.COAWebEventBusiness.Action} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/**
 * @param {!proto.revolut.tracking.COAWebEventBusiness.Action} value
 * @return {!proto.revolut.tracking.COAWebEventBusiness} returns this
 */
proto.revolut.tracking.COAWebEventBusiness.prototype.setAction = function(value) {
  return jspb.Message.setProto3EnumField(this, 6, value);
};


/**
 * optional common.User user = 7;
 * @return {?proto.revolut.tracking.common.User}
 */
proto.revolut.tracking.COAWebEventBusiness.prototype.getUser = function() {
  return /** @type{?proto.revolut.tracking.common.User} */ (
    jspb.Message.getWrapperField(this, tracker_common_pb.User, 7));
};


/**
 * @param {?proto.revolut.tracking.common.User|undefined} value
 * @return {!proto.revolut.tracking.COAWebEventBusiness} returns this
*/
proto.revolut.tracking.COAWebEventBusiness.prototype.setUser = function(value) {
  return jspb.Message.setWrapperField(this, 7, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.revolut.tracking.COAWebEventBusiness} returns this
 */
proto.revolut.tracking.COAWebEventBusiness.prototype.clearUser = function() {
  return this.setUser(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.revolut.tracking.COAWebEventBusiness.prototype.hasUser = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional common.Geo geo = 8;
 * @return {?proto.revolut.tracking.common.Geo}
 */
proto.revolut.tracking.COAWebEventBusiness.prototype.getGeo = function() {
  return /** @type{?proto.revolut.tracking.common.Geo} */ (
    jspb.Message.getWrapperField(this, tracker_common_pb.Geo, 8));
};


/**
 * @param {?proto.revolut.tracking.common.Geo|undefined} value
 * @return {!proto.revolut.tracking.COAWebEventBusiness} returns this
*/
proto.revolut.tracking.COAWebEventBusiness.prototype.setGeo = function(value) {
  return jspb.Message.setWrapperField(this, 8, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.revolut.tracking.COAWebEventBusiness} returns this
 */
proto.revolut.tracking.COAWebEventBusiness.prototype.clearGeo = function() {
  return this.setGeo(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.revolut.tracking.COAWebEventBusiness.prototype.hasGeo = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional common.App app = 9;
 * @return {?proto.revolut.tracking.common.App}
 */
proto.revolut.tracking.COAWebEventBusiness.prototype.getApp = function() {
  return /** @type{?proto.revolut.tracking.common.App} */ (
    jspb.Message.getWrapperField(this, tracker_common_pb.App, 9));
};


/**
 * @param {?proto.revolut.tracking.common.App|undefined} value
 * @return {!proto.revolut.tracking.COAWebEventBusiness} returns this
*/
proto.revolut.tracking.COAWebEventBusiness.prototype.setApp = function(value) {
  return jspb.Message.setWrapperField(this, 9, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.revolut.tracking.COAWebEventBusiness} returns this
 */
proto.revolut.tracking.COAWebEventBusiness.prototype.clearApp = function() {
  return this.setApp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.revolut.tracking.COAWebEventBusiness.prototype.hasApp = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * map<string, string> feature_flags = 11;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.revolut.tracking.COAWebEventBusiness.prototype.getFeatureFlagsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 11, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.revolut.tracking.COAWebEventBusiness} returns this
 */
proto.revolut.tracking.COAWebEventBusiness.prototype.clearFeatureFlagsMap = function() {
  this.getFeatureFlagsMap().clear();
  return this;};


/**
 * map<string, string> params = 12;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<string,string>}
 */
proto.revolut.tracking.COAWebEventBusiness.prototype.getParamsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<string,string>} */ (
      jspb.Message.getMapField(this, 12, opt_noLazyCreate,
      null));
};


/**
 * Clears values from the map. The map will be non-null.
 * @return {!proto.revolut.tracking.COAWebEventBusiness} returns this
 */
proto.revolut.tracking.COAWebEventBusiness.prototype.clearParamsMap = function() {
  this.getParamsMap().clear();
  return this;};


/**
 * optional uint32 version = 13;
 * @return {number}
 */
proto.revolut.tracking.COAWebEventBusiness.prototype.getVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/**
 * @param {number} value
 * @return {!proto.revolut.tracking.COAWebEventBusiness} returns this
 */
proto.revolut.tracking.COAWebEventBusiness.prototype.setVersion = function(value) {
  return jspb.Message.setProto3IntField(this, 13, value);
};


/**
 * optional string previous_event_id = 14;
 * @return {string}
 */
proto.revolut.tracking.COAWebEventBusiness.prototype.getPreviousEventId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/**
 * @param {string} value
 * @return {!proto.revolut.tracking.COAWebEventBusiness} returns this
 */
proto.revolut.tracking.COAWebEventBusiness.prototype.setPreviousEventId = function(value) {
  return jspb.Message.setProto3StringField(this, 14, value);
};


/**
 * optional google.protobuf.Timestamp server_timestamp = 15;
 * @return {?proto.google.protobuf.Timestamp}
 */
proto.revolut.tracking.COAWebEventBusiness.prototype.getServerTimestamp = function() {
  return /** @type{?proto.google.protobuf.Timestamp} */ (
    jspb.Message.getWrapperField(this, google_protobuf_timestamp_pb.Timestamp, 15));
};


/**
 * @param {?proto.google.protobuf.Timestamp|undefined} value
 * @return {!proto.revolut.tracking.COAWebEventBusiness} returns this
*/
proto.revolut.tracking.COAWebEventBusiness.prototype.setServerTimestamp = function(value) {
  return jspb.Message.setWrapperField(this, 15, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.revolut.tracking.COAWebEventBusiness} returns this
 */
proto.revolut.tracking.COAWebEventBusiness.prototype.clearServerTimestamp = function() {
  return this.setServerTimestamp(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.revolut.tracking.COAWebEventBusiness.prototype.hasServerTimestamp = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional WebDevice device = 16;
 * @return {?proto.revolut.tracking.WebDevice}
 */
proto.revolut.tracking.COAWebEventBusiness.prototype.getDevice = function() {
  return /** @type{?proto.revolut.tracking.WebDevice} */ (
    jspb.Message.getWrapperField(this, proto.revolut.tracking.WebDevice, 16));
};


/**
 * @param {?proto.revolut.tracking.WebDevice|undefined} value
 * @return {!proto.revolut.tracking.COAWebEventBusiness} returns this
*/
proto.revolut.tracking.COAWebEventBusiness.prototype.setDevice = function(value) {
  return jspb.Message.setWrapperField(this, 16, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.revolut.tracking.COAWebEventBusiness} returns this
 */
proto.revolut.tracking.COAWebEventBusiness.prototype.clearDevice = function() {
  return this.setDevice(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.revolut.tracking.COAWebEventBusiness.prototype.hasDevice = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional string session_id = 17;
 * @return {string}
 */
proto.revolut.tracking.COAWebEventBusiness.prototype.getSessionId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/**
 * @param {string} value
 * @return {!proto.revolut.tracking.COAWebEventBusiness} returns this
 */
proto.revolut.tracking.COAWebEventBusiness.prototype.setSessionId = function(value) {
  return jspb.Message.setProto3StringField(this, 17, value);
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.revolut.tracking.WebDevice.prototype.toObject = function(opt_includeInstance) {
  return proto.revolut.tracking.WebDevice.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.revolut.tracking.WebDevice} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.revolut.tracking.WebDevice.toObject = function(includeInstance, msg) {
  var f, obj = {
    userAgent: jspb.Message.getFieldWithDefault(msg, 1, ""),
    osName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    osVersion: jspb.Message.getFieldWithDefault(msg, 3, ""),
    browserName: jspb.Message.getFieldWithDefault(msg, 4, ""),
    browserVersion: jspb.Message.getFieldWithDefault(msg, 5, ""),
    installationId: jspb.Message.getFieldWithDefault(msg, 6, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.revolut.tracking.WebDevice}
 */
proto.revolut.tracking.WebDevice.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.revolut.tracking.WebDevice;
  return proto.revolut.tracking.WebDevice.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.revolut.tracking.WebDevice} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.revolut.tracking.WebDevice}
 */
proto.revolut.tracking.WebDevice.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setUserAgent(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setOsName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setOsVersion(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setBrowserName(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setBrowserVersion(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setInstallationId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.revolut.tracking.WebDevice.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.revolut.tracking.WebDevice.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.revolut.tracking.WebDevice} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.revolut.tracking.WebDevice.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getUserAgent();
  if (f.length > 0) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getOsName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getOsVersion();
  if (f.length > 0) {
    writer.writeString(
      3,
      f
    );
  }
  f = message.getBrowserName();
  if (f.length > 0) {
    writer.writeString(
      4,
      f
    );
  }
  f = message.getBrowserVersion();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getInstallationId();
  if (f.length > 0) {
    writer.writeString(
      6,
      f
    );
  }
};


/**
 * optional string user_agent = 1;
 * @return {string}
 */
proto.revolut.tracking.WebDevice.prototype.getUserAgent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.revolut.tracking.WebDevice} returns this
 */
proto.revolut.tracking.WebDevice.prototype.setUserAgent = function(value) {
  return jspb.Message.setProto3StringField(this, 1, value);
};


/**
 * optional string os_name = 2;
 * @return {string}
 */
proto.revolut.tracking.WebDevice.prototype.getOsName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/**
 * @param {string} value
 * @return {!proto.revolut.tracking.WebDevice} returns this
 */
proto.revolut.tracking.WebDevice.prototype.setOsName = function(value) {
  return jspb.Message.setProto3StringField(this, 2, value);
};


/**
 * optional string os_version = 3;
 * @return {string}
 */
proto.revolut.tracking.WebDevice.prototype.getOsVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.revolut.tracking.WebDevice} returns this
 */
proto.revolut.tracking.WebDevice.prototype.setOsVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 3, value);
};


/**
 * optional string browser_name = 4;
 * @return {string}
 */
proto.revolut.tracking.WebDevice.prototype.getBrowserName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/**
 * @param {string} value
 * @return {!proto.revolut.tracking.WebDevice} returns this
 */
proto.revolut.tracking.WebDevice.prototype.setBrowserName = function(value) {
  return jspb.Message.setProto3StringField(this, 4, value);
};


/**
 * optional string browser_version = 5;
 * @return {string}
 */
proto.revolut.tracking.WebDevice.prototype.getBrowserVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/**
 * @param {string} value
 * @return {!proto.revolut.tracking.WebDevice} returns this
 */
proto.revolut.tracking.WebDevice.prototype.setBrowserVersion = function(value) {
  return jspb.Message.setProto3StringField(this, 5, value);
};


/**
 * optional string installation_id = 6;
 * @return {string}
 */
proto.revolut.tracking.WebDevice.prototype.getInstallationId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/**
 * @param {string} value
 * @return {!proto.revolut.tracking.WebDevice} returns this
 */
proto.revolut.tracking.WebDevice.prototype.setInstallationId = function(value) {
  return jspb.Message.setProto3StringField(this, 6, value);
};


goog.object.extend(exports, proto.revolut.tracking);
