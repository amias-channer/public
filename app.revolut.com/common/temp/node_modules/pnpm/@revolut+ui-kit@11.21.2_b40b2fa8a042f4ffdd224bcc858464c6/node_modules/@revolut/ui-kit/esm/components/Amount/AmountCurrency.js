/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import * as Icons from '@revolut/icons';
import styled from 'styled-components';
import { Color, Space, TextStyle } from "../../constants";
import { isFunction, themeColor, themeTextStyle } from "../../utils";
import { Box } from "../Box";
import { InputBox } from "../InputBox";
import { ButtonBase } from "../ButtonBase";
import { Text } from "../Text";
import { Area } from "./constants";
import { AmountStatus } from "./AmountStatus";
var AmountCurrencyWrapper = /*#__PURE__*/styled.div.withConfig({
  displayName: "AmountCurrency__AmountCurrencyWrapper",
  componentId: "sc-1qiypsp-0"
})(["grid-area:", ";align-self:center;justify-self:start;", ":not([aria-disabled='true']) &,", "[aria-invalid='true'] &{color:", ";}", ""], Area.A, InputBox, InputBox, themeColor(Color.FOREGROUND), themeTextStyle(TextStyle.H4));
export function AmountCurrency(_ref) {
  var hasError = _ref.hasError,
      message = _ref.message,
      value = _ref.value,
      onClick = _ref.onClick,
      rest = _objectWithoutPropertiesLoose(_ref, ["hasError", "message", "value", "onClick"]);

  var label = /*#__PURE__*/React.createElement(Text, {
    lineClamp: 1
  }, value);
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AmountCurrencyWrapper, null, isFunction(onClick) ? /*#__PURE__*/React.createElement(ButtonBase, _extends({
    display: "flex",
    alignItems: "center",
    onClick: onClick
  }, rest), label, /*#__PURE__*/React.createElement(Box, {
    use: "span",
    ml: Space.S_8,
    flex: "0 0 auto"
  }, /*#__PURE__*/React.createElement(Icons.ShevronDown, {
    size: 16
  }))) : label), message != null && /*#__PURE__*/React.createElement(AmountStatus, {
    hasError: hasError,
    gridArea: Area.C,
    justifySelf: "start"
  }, message));
}