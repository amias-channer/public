/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React, { forwardRef } from 'react';
import { InputBase } from "../InputBase";
import { AmountInputType, Area } from "./constants";
import { AmountInputWrapper } from "./AmountInputWrapper";
import { AmountStatus } from "./AmountStatus";
import { MoneyInput } from "./MoneyInput";
/** @private */

// @ts-expect-error
// Type of `use` prop is getting lost inside React.ForwardRefExoticComponent,
// everything else is working as expected
export var AmountInput = /*#__PURE__*/forwardRef(function (props, ref) {
  var hasError = props.hasError,
      message = props.message,
      placeholder = props.placeholder,
      _props$use = props.use,
      Comp = _props$use === void 0 ? InputBase : _props$use,
      inputProps = _objectWithoutPropertiesLoose(props, ["hasError", "message", "placeholder", "use"]);

  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(AmountInputWrapper, null, inputProps.type === AmountInputType.MONEY || inputProps.type === AmountInputType.MONEY_FRACTIONAL ? /*#__PURE__*/React.createElement(MoneyInput, _extends({
    ref: ref,
    placeholder: placeholder
  }, inputProps)) : /*#__PURE__*/React.createElement(Comp, _extends({
    ref: ref,
    placeholder: placeholder != null ? placeholder : '0'
  }, inputProps))), message != null && /*#__PURE__*/React.createElement(AmountStatus, {
    hasError: hasError,
    gridArea: Area.D,
    justifySelf: "end",
    textAlign: "right"
  }, message));
});