/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

var _LABEL_WIDTHS, _BACKGROUNDS, _COLORS;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React, { forwardRef } from 'react';
import styled from 'styled-components';
import { Color, Space } from "../../constants";
import { AvatarVariant } from "../Avatar";
import { AvatarButton } from "../AvatarButton";
import { Ellipsis } from "../Ellipsis";
import { AppIconVariant } from "./variants";
export var AppIconSize = {
  SIZE_24: 24,
  SIZE_40: 40,
  SIZE_60: 60,
  SIZE_76: 76
};
var LABEL_WIDTHS = (_LABEL_WIDTHS = {}, _LABEL_WIDTHS[AppIconSize.SIZE_24] = 24, _LABEL_WIDTHS[AppIconSize.SIZE_40] = 40, _LABEL_WIDTHS[AppIconSize.SIZE_60] = 80, _LABEL_WIDTHS[AppIconSize.SIZE_76] = 99, _LABEL_WIDTHS);
var BACKGROUNDS = (_BACKGROUNDS = {}, _BACKGROUNDS[AppIconVariant.INTERNAL] = Color.LIGHT_BLUE, _BACKGROUNDS[AppIconVariant.EXTERNAL] = Color.BACKGROUND, _BACKGROUNDS);
var COLORS = (_COLORS = {}, _COLORS[AppIconVariant.INTERNAL] = Color.WHITE, _COLORS[AppIconVariant.EXTERNAL] = Color.FOREGROUND, _COLORS);

var AppIconTitle = function AppIconTitle(_ref) {
  var children = _ref.children,
      rest = _objectWithoutPropertiesLoose(_ref, ["children"]);

  return /*#__PURE__*/React.createElement(AvatarButton.Title, _extends({
    mt: Space.S_4
  }, rest), /*#__PURE__*/React.createElement(Ellipsis, null, children));
};

var AppIconAvatarButton = /*#__PURE__*/styled(AvatarButton).withConfig({
  displayName: "AppIcon__AppIconAvatarButton",
  componentId: "sc-1u3dz6c-0"
})(["filter:", ";"], function (props) {
  return props.notAvailable ? "grayscale(1)" : '';
});
export var RefForwardingAppIcon = /*#__PURE__*/forwardRef(function (_ref2, ref) {
  var _ref2$size = _ref2.size,
      size = _ref2$size === void 0 ? AppIconSize.SIZE_76 : _ref2$size,
      bg = _ref2.bg,
      color = _ref2.color,
      _ref2$variant = _ref2.variant,
      variant = _ref2$variant === void 0 ? AppIconVariant.INTERNAL : _ref2$variant,
      notAvailable = _ref2.notAvailable,
      rest = _objectWithoutPropertiesLoose(_ref2, ["size", "bg", "color", "variant", "notAvailable"]);

  return /*#__PURE__*/React.createElement(AppIconAvatarButton, _extends({
    ref: ref,
    variant: AvatarVariant.APP,
    size: size,
    bg: notAvailable ? Color.GREY_TONE_20 : bg != null ? bg : BACKGROUNDS[variant],
    color: color != null ? color : COLORS[variant],
    notAvailable: notAvailable,
    __outline: variant === AppIconVariant.EXTERNAL,
    __labelWidth: LABEL_WIDTHS[size]
  }, rest));
});
export var AppIcon = Object.assign(RefForwardingAppIcon, {
  Title: AppIconTitle,
  Badge: AvatarButton.Badge,
  Notification: AvatarButton.Notification
});