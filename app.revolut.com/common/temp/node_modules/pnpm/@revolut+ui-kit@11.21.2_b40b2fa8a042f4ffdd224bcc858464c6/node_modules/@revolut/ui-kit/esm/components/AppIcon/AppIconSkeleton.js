/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import styled, { useTheme } from 'styled-components';
import { css } from '@styled-system/css';
import { AppIcon, AppIconSize } from "./AppIcon";
import { Skeleton } from "../Skeleton";
import { Color, Radius, Space } from "../../constants";
import { rgbaSafe, themeColor } from "../../utils";
var AppIconStyled = /*#__PURE__*/styled(AppIcon).withConfig({
  displayName: "AppIconSkeleton__AppIconStyled",
  componentId: "sc-1v2w3lb-0"
})(function (_ref) {
  var theme = _ref.theme;
  return css({
    background: "linear-gradient(218.89deg, #809CB6 0%, " + themeColor(Color.PRIMARY)({
      theme: theme
    }) + " 100%)"
  });
});
export var AppIconSkeleton = function AppIconSkeleton(_ref2) {
  var size = _ref2.size,
      rest = _objectWithoutPropertiesLoose(_ref2, ["size"]);

  var theme = useTheme();
  return /*#__PURE__*/React.createElement(AppIconStyled, _extends({
    bg: rgbaSafe(themeColor(Color.BACKGROUND)({
      theme: theme
    }), 0.7),
    size: size,
    use: "div"
  }, rest), /*#__PURE__*/React.createElement(Skeleton, {
    bg: "transparent",
    size: "100%",
    radius: Radius.APP
  }), size === AppIconSize.SIZE_24 || size === AppIconSize.SIZE_40 ? null : /*#__PURE__*/React.createElement(AppIcon.Title, {
    mt: Space.S_8
  }, /*#__PURE__*/React.createElement(Skeleton, {
    width: 56,
    height: 16
  })));
};