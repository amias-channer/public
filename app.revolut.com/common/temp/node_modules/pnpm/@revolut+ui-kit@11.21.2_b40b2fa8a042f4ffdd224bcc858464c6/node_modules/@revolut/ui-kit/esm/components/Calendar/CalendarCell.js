/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import styled from 'styled-components';
import { rem } from 'polished';
import { themeSpace } from "../../utils";
import { Color, Radius, Size, Space } from "../../constants";
import { Flex } from "../Flex";
import { HStack } from "../HStack";
import { Circle } from "../Circle";
export var CalendarCellInner = /*#__PURE__*/styled(Flex).withConfig({
  displayName: "CalendarCell__CalendarCellInner",
  componentId: "sc-16skvgt-0"
})([""]);
CalendarCellInner.defaultProps = {
  width: rem(28),
  height: rem(28),
  alignItems: 'center',
  justifyContent: 'center',
  radius: Radius.CALENDAR_DAY
};
export var CalendarCellWrapper = /*#__PURE__*/styled(Flex).withConfig({
  displayName: "CalendarCell__CalendarCellWrapper",
  componentId: "sc-16skvgt-1"
})(["cursor:pointer;"]);
CalendarCellWrapper.defaultProps = {
  width: '100%',
  height: Size.S_40,
  padding: Space.S_6,
  alignItems: 'center',
  justifyContent: 'center'
};

var Dot = function Dot(_ref) {
  var _ref$size = _ref.size,
      size = _ref$size === void 0 ? Size.S_4 : _ref$size,
      bg = _ref.bg;
  return /*#__PURE__*/React.createElement(Circle, {
    size: size,
    bg: bg
  });
};

var DotsBase = /*#__PURE__*/styled(HStack).withConfig({
  displayName: "CalendarCell__DotsBase",
  componentId: "sc-16skvgt-2"
})(["position:absolute;justify-content:center;bottom:", ";"], themeSpace(Space.N_2));
DotsBase.defaultProps = {
  align: 'center',
  space: Space.S_2
};

var Dots = function Dots(_ref2) {
  var dots = _ref2.dots;
  var dotsSliced = dots.slice(0, 3);
  var hasMore = dots.length > 3;
  return /*#__PURE__*/React.createElement(DotsBase, null, dotsSliced.map(function (dotColor, index) {
    return (
      /*#__PURE__*/
      // eslint-disable-next-line react/no-array-index-key
      React.createElement(Dot, {
        key: index,
        bg: dotColor
      })
    );
  }), hasMore && /*#__PURE__*/React.createElement(Dot, {
    size: Size.S_2,
    bg: Color.GREY_TONE_50
  }));
};

export var CalendarCell = function CalendarCell(_ref3) {
  var dots = _ref3.dots,
      rest = _objectWithoutPropertiesLoose(_ref3, ["dots"]);

  return /*#__PURE__*/React.createElement(CalendarCellWrapper, null, /*#__PURE__*/React.createElement(CalendarCellInner, rest), dots && /*#__PURE__*/React.createElement(Dots, {
    dots: dots
  }));
};