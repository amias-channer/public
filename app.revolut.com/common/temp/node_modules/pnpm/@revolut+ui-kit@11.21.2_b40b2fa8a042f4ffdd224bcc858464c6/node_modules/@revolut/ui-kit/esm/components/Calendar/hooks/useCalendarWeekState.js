/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

import { useCallback } from 'react';
import { useControlled } from "../../../hooks";

function weekUpdate(firstDayOfWeek, selectedDate) {
  if (!selectedDate) {
    return null;
  }

  var weekDay = selectedDate.getDay();
  var lessDays = weekDay < firstDayOfWeek ? 7 - firstDayOfWeek + weekDay : weekDay - firstDayOfWeek;
  var weekStart = new Date(new Date(selectedDate).setDate(selectedDate.getDate() - lessDays));
  var weekEnd = new Date(new Date(weekStart).setDate(weekStart.getDate() + 6));
  return {
    from: weekStart,
    to: weekEnd
  };
}

export function useCalendarWeekState(_ref) {
  var controlledValue = _ref.controlledValue,
      defaultValue = _ref.defaultValue,
      onChange = _ref.onChange,
      firstDayOfWeek = _ref.firstDayOfWeek;

  var _useControlled = useControlled({
    value: controlledValue,
    defaultValue: defaultValue,
    onChange: onChange
  }),
      value = _useControlled[0],
      setValue = _useControlled[1];

  var update = useCallback(function (selectedDate) {
    return setValue(weekUpdate(firstDayOfWeek, selectedDate));
  }, [firstDayOfWeek, setValue]);
  return [value, update];
}