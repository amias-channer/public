/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import { useMemo } from 'react';
import { LocaleUtils } from 'react-day-picker';
import { createFormatDate } from "../utils";
export var useLocaleUtils = function useLocaleUtils(locale) {
  return useMemo(function () {
    var formatterDay = createFormatDate(locale, {
      weekday: 'short',
      day: '2-digit',
      month: 'short',
      year: 'numeric'
    });
    var formatterWeekdayShort = createFormatDate(locale, {
      weekday: 'narrow'
    });
    var formatterWeekdayLong = createFormatDate(locale, {
      weekday: 'long'
    });
    var formatterMonthTitle = createFormatDate(locale, {
      month: 'long',
      year: 'numeric'
    });

    var formatDay = function formatDay(date) {
      return formatterDay.format(date);
    };

    var formatMonthTitle = function formatMonthTitle(date) {
      return formatterMonthTitle.format(date);
    };

    var formatWeekdayShort = function formatWeekdayShort(weekday) {
      return formatterWeekdayShort.format(new Date(0, 0, weekday));
    };

    var formatWeekdayLong = function formatWeekdayLong(weekday) {
      return formatterWeekdayLong.format(new Date(0, 0, weekday));
    };

    return _extends({}, LocaleUtils, {
      formatDay: formatDay,
      formatMonthTitle: formatMonthTitle,
      formatWeekdayShort: formatWeekdayShort,
      formatWeekdayLong: formatWeekdayLong
    });
  }, [locale]);
};