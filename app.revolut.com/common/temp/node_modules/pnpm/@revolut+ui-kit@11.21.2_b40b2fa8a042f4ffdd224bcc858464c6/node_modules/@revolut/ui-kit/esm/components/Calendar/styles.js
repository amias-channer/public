/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

var _focusVisible;

import styled from 'styled-components';
import css from '@styled-system/css';
import { rem } from 'polished';
import { Box } from "../Box";
import { Color, Radius, Space, TextStyle } from "../../constants";
import { themeColor, themeRadius, themeSpace, themeTextStyle } from "../../utils";
import { scrollbar } from "../../styles";
import { HEADING_HEIGHT, WEEKDAY_HEIGHT, classNames, modifiers } from "./constants";
import { CalendarCellInner, CalendarCellWrapper } from "./CalendarCell";
export var CONTAINER_STYLE = css({
  display: 'block',
  paddingX: Space.S_16,
  paddingBottom: Space.S_16,
  maxWidth: '100%'
});
export var WRAPPER_STYLE = css({
  position: 'relative',
  userSelect: 'none',
  flexDirection: 'row',
  outline: 'none',
  ':focus-visible': {
    boxShadow: 'var(--calendar-shadow-focus)'
  }
});
export var TABLE_STYLE = css({
  display: 'table',
  width: '100%',
  borderCollapse: 'separate',
  userSelect: 'none'
});
export var CAPTION_STYLE = css({
  display: 'table-caption',
  textAlign: 'center',
  verticalAlign: 'middle',
  height: rem(HEADING_HEIGHT),
  marginTop: Space.S_16,
  marginX: 'auto',
  width: 'fit-content',
  '& div': {
    height: '100%',
    display: 'flex',
    alignItems: 'center',
    justifyContent: 'center'
  }
});
export var TABLE_BODY_STYLE = css({
  display: 'table-row-group'
});
export var TABLE_ROW_STYLE = css({
  display: 'table-row',
  boxSizing: 'border-box'
});
export var TABLE_CELL_STYLE = css({
  display: 'table-cell',
  position: 'relative',
  textAlign: 'center',
  verticalAlign: 'middle',
  outline: 'none',
  paddingTop: Space.S_16,
  ':focus-visible': (_focusVisible = {}, _focusVisible[CalendarCellInner] = {
    boxShadow: 'var(--calendar-shadow-focus)'
  }, _focusVisible)
});
export var CalendarWrapper = /*#__PURE__*/styled(Box).withConfig({
  displayName: "styles__CalendarWrapper",
  componentId: "il7k7-0"
})(["--calendar-shadow-focus:0 0 0 2px ", ",0 0 0 4px ", ";position:relative;flex:1;", " .", "{", "}.", "{border-radius:", ";", "}.", "{display:flex;flex-wrap:wrap;justify-content:center;}.", "{", "}.", "{", " ", "}.", "{display:table-header-group;}.", "{display:table-row;", "}.", "{display:table-cell;text-align:center;vertical-align:middle;height:", ";padding-top:", ";position:relative;& abbr[title]{border-bottom:none;text-decoration:none;}}.", "{", "}.", "{", "}.", "{", "}.", " .", "{cursor:default;}.", "{", "{color:", ";}}.", ".", "{", "{color:", ";}}.", "{color:", ";", " ", "{box-shadow:inset 0 0 0 1px ", ",inset 0 0 0 2px ", ";}}.", ",.", "{color:", ";}.", ",.", ".", ".", "{", "{color:", ";", " background-color:", ";}}.", ".", ",.", ".", "{", "{", "}}.", "{", "{background-color:", ";}}.", ".", ",.", ".", ",.", ".", ",.", ".", "{", "{width:fit-content;margin:0 auto;::before{content:'';display:block;position:absolute;background-color:", ";width:50%;top:", ";bottom:0;}}", "{z-index:1;}}.", ".", ".", ",.", ".", ".", ",.", ".", ".", "{", "{::before{display:none;}}}.", ".", ",.", ".", ",.", ".", "{", "{border-bottom-left-radius:", ";border-top-left-radius:", ";::before{right:0;}}}.", ".", ",.", ".", ",.", ".", "{", "{border-bottom-right-radius:", ";border-top-right-radius:", ";::before{left:0;}}}.", ".", ".", ",.", ".", ".", ",.", ".", ".", ",.", ".", ".", "{", "{::before{display:none;}}}"], themeColor(Color.BACKGROUND), themeColor(Color.BLUE_OPAQUE_50), scrollbar(), classNames.container, CONTAINER_STYLE, classNames.wrapper, themeRadius(Radius.WIDGET), WRAPPER_STYLE, classNames.months, classNames.month, TABLE_STYLE, classNames.caption, CAPTION_STYLE, themeTextStyle(TextStyle.PRIMARY), classNames.weekdays, classNames.weekdaysRow, themeTextStyle(TextStyle.PRIMARY), classNames.weekday, rem(WEEKDAY_HEIGHT), themeSpace(Space.S_16), classNames.body, TABLE_BODY_STYLE, classNames.week, TABLE_ROW_STYLE, classNames.day, TABLE_CELL_STYLE, classNames.interactionDisabled, classNames.day, modifiers.RANGE, CalendarCellInner, themeColor(Color.BLUE), modifiers.RANGE, classNames.outside, CalendarCellInner, themeColor(Color.BLUE_50), classNames.today, themeColor(Color.BLUE), themeTextStyle(TextStyle.PRIMARY), CalendarCellInner, themeColor(Color.BLUE), themeColor(Color.BACKGROUND), classNames.disabled, classNames.outside, themeColor(Color.GREY_TONE_20), modifiers.SELECTED_CUSTOM, modifiers.RANGE, classNames.outside, modifiers.SELECTED_CUSTOM, CalendarCellInner, themeColor(Color.BACKGROUND), themeTextStyle(TextStyle.PRIMARY), themeColor(Color.BLUE), modifiers.RANGE, modifiers.RANGE_FROM, modifiers.RANGE, modifiers.RANGE_TO, CalendarCellInner, themeTextStyle(TextStyle.PRIMARY), modifiers.RANGE, CalendarCellWrapper, themeColor(Color.ACTION_BACKGROUND), modifiers.RANGE, modifiers.RANGE_FROM, modifiers.RANGE, modifiers.WEEK_START, modifiers.RANGE, modifiers.RANGE_TO, modifiers.RANGE, modifiers.WEEK_END, CalendarCellWrapper, themeColor(Color.ACTION_BACKGROUND), themeSpace(Space.S_16), CalendarCellInner, modifiers.RANGE, modifiers.RANGE_FROM, modifiers.RANGE_TO, modifiers.RANGE, modifiers.RANGE_FROM, modifiers.WEEK_END, modifiers.RANGE, modifiers.RANGE_TO, modifiers.WEEK_START, CalendarCellWrapper, modifiers.RANGE, modifiers.RANGE_FROM, modifiers.RANGE, modifiers.WEEK_START, modifiers.RANGE, modifiers.MONTH_START, CalendarCellWrapper, themeRadius(Radius.CALENDAR_DAY), themeRadius(Radius.CALENDAR_DAY), modifiers.RANGE, modifiers.RANGE_TO, modifiers.RANGE, modifiers.WEEK_END, modifiers.RANGE, modifiers.MONTH_END, CalendarCellWrapper, themeRadius(Radius.CALENDAR_DAY), themeRadius(Radius.CALENDAR_DAY), modifiers.RANGE, modifiers.RANGE_FROM, modifiers.MONTH_END, modifiers.RANGE, modifiers.RANGE_TO, modifiers.MONTH_START, modifiers.RANGE, modifiers.WEEK_START, modifiers.MONTH_END, modifiers.RANGE, modifiers.WEEK_END, modifiers.MONTH_START, CalendarCellWrapper);
CalendarWrapper.defaultProps = {
  bg: Color.WIDGET_BACKGROUND,
  color: Color.FOREGROUND,
  radius: Radius.WIDGET
};