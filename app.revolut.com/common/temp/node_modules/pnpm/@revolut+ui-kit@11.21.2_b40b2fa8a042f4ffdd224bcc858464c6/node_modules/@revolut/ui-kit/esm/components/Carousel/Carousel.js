/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React, { useRef } from 'react';
import { useTheme } from 'styled-components';
import { Radius, Space } from "../../constants";
import { useElementScroll } from "../../hooks";
import { themeSpace } from "../../utils";
import { SliderBox } from "../SliderBox";
import { CarouselAlignVariant } from "./types";
import { CarouselItem, CarouselItemPlaceholder, CarouselRadiusClip, CarouselScroll, CarouselSpace } from "./styles";

var CarouselBase = function CarouselBase(_ref) {
  var children = _ref.children,
      _ref$align = _ref.align,
      align = _ref$align === void 0 ? CarouselAlignVariant.SIDE : _ref$align,
      labelButtonPrev = _ref.labelButtonPrev,
      labelButtonNext = _ref.labelButtonNext,
      index = _ref.index,
      defaultIndex = _ref.defaultIndex,
      onSlideChange = _ref.onSlideChange,
      _ref$onIndexChange = _ref.onIndexChange,
      onIndexChange = _ref$onIndexChange === void 0 ? onSlideChange : _ref$onIndexChange,
      alignWidth = _ref.alignWidth,
      _ref$radius = _ref.radius,
      radius = _ref$radius === void 0 ? Radius.WIDGET : _ref$radius,
      rest = _objectWithoutPropertiesLoose(_ref, ["children", "align", "labelButtonPrev", "labelButtonNext", "index", "defaultIndex", "onSlideChange", "onIndexChange", "alignWidth", "radius"]);

  var ref = useRef(null);
  var placeholderRef = useRef(null);
  var theme = useTheme();

  var _useElementScroll = useElementScroll({
    ref: ref,
    align: align,
    defaultIndex: defaultIndex,
    index: index,
    onIndexChange: onSlideChange != null ? onSlideChange : onIndexChange,
    placeholderRef: placeholderRef
  }),
      scrollLeft = _useElementScroll.scrollLeft,
      scrollRight = _useElementScroll.scrollRight,
      hasMoreLeft = _useElementScroll.hasMoreLeft,
      hasMoreRight = _useElementScroll.hasMoreRight;

  return /*#__PURE__*/React.createElement(SliderBox, _extends({
    role: "region",
    fillSpace: "layout",
    hasPrev: hasMoreLeft,
    hasNext: hasMoreRight,
    labelButtonPrev: labelButtonPrev,
    labelButtonNext: labelButtonNext,
    onPrevClick: scrollLeft,
    onNextClick: scrollRight,
    py: Space.S_4,
    my: Space.N_4
  }, rest), /*#__PURE__*/React.createElement(CarouselRadiusClip, {
    radius: radius
  }, /*#__PURE__*/React.createElement(CarouselSpace, null, /*#__PURE__*/React.createElement(CarouselScroll, {
    ref: ref,
    align: align,
    alignWidth: alignWidth
  }, children, /*#__PURE__*/React.createElement(CarouselItemPlaceholder, {
    ref: placeholderRef,
    hide: alignWidth ? false : undefined,
    minWidth: alignWidth ? "calc(((100% - " + alignWidth + ") / 2) + " + themeSpace(Space.S_24)({
      theme: theme
    }) + ")" : undefined
  })))));
};

export var Carousel = Object.assign(CarouselBase, {
  Item: CarouselItem
});