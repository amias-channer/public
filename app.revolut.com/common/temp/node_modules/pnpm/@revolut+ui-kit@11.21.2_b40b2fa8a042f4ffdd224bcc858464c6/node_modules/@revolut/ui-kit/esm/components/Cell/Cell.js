/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React, { forwardRef } from 'react';
import styled from 'styled-components';
import * as Icons from '@revolut/icons';
import { themeColor, themeRadius, themeSpace, themeTransition } from "../../utils";
import { Color, Radius, Space, Transition } from "../../constants";
import { Flex } from "../Flex";
import { Box } from "../Box";
export var CellVariant = {
  DEFAULT: 'default',
  DISCLOSURE: 'disclosure',
  CHOICE: 'choice'
};

var selectedSelector = function selectedSelector(props) {
  return props.unsafe__enableSelectedSelector ? '&' : ':not(&)';
};

var CellBase = /*#__PURE__*/styled(Flex).withConfig({
  displayName: "Cell__CellBase",
  componentId: "sc-130gsil-0"
})(["--cell-bg:", ";--cell-shadow-base:inset 0 0 0 ", " var(--cell-bg);--cell-shadow-hover:inset 0 0 0 9999px ", ";--cell-shadow-active:inset 0 0 0 9999px ", ";--cell-shadow-focus:inset 0 0 0 2px ", ";--cell-shadow-collapsed:inset 0 0 0 0 rgba(255,255,255,0);appearance:none;border:0;width:100%;align-items:center;text-align:left;font:inherit;outline:none;justify-content:space-between;background-color:var(--cell-bg);border-radius:", ";color:", ";padding:", ";transition:", ";&[role='option']:not([aria-disabled='true']){cursor:pointer;}:link{text-decoration:none;}:focus-visible{box-shadow:var(--cell-shadow-focus);}&.focus-visible{box-shadow:var(--cell-shadow-focus);}:hover:enabled,:hover:link,&[role='option']:hover{cursor:pointer;color:", ";box-shadow:var(--cell-shadow-collapsed),var(--cell-shadow-base),var(--cell-shadow-hover);:focus-visible{box-shadow:var(--cell-shadow-focus),var(--cell-shadow-base),var(--cell-shadow-hover);}&.focus-visible{box-shadow:var(--cell-shadow-focus),var(--cell-shadow-base),var(--cell-shadow-hover);}}:active:enabled,&[aria-pressed='true'],&[aria-current='page'],", "[aria-selected='true']{box-shadow:var(--cell-shadow-collapsed),var(--cell-shadow-base),var(--cell-shadow-active);:focus-visible{box-shadow:var(--cell-shadow-focus),var(--cell-shadow-base),var(--cell-shadow-active);}&.focus-visible{box-shadow:var(--cell-shadow-focus),var(--cell-shadow-base),var(--cell-shadow-active);}}> *{opacity:", ";}:disabled > *,&[aria-disabled='true'] > *{opacity:0.4;}&[role='button']{cursor:pointer;}"], themeColor(Color.WIDGET_BACKGROUND), themeSpace(Space.S_4), themeColor(Color.GREY_TONE_2), themeColor(Color.BLUE_5), themeColor(Color.BLUE_OPAQUE_50), themeRadius(Radius.CELL), themeColor(Color.FOREGROUND), themeSpace(Space.S_16), themeTransition(Transition.SHADOW), themeColor(Color.FOREGROUND), selectedSelector, function (_ref) {
  var inactive = _ref.inactive;
  return inactive ? 0.4 : undefined;
});

var CellSide = function CellSide(props) {
  return /*#__PURE__*/React.createElement(Box, _extends({}, props, {
    my: Space.N_2,
    ml: Space.S_8 // Some components based on Cell uses order for its children (eg. Item)
    // so that we need to specify "maximum" order to make sure this Box be the last in a row
    ,
    order: 10000
  }));
};
/** @private  */


export var Cell = /*#__PURE__*/forwardRef(function (_ref2, ref) {
  var variant = _ref2.variant,
      children = _ref2.children,
      props = _objectWithoutPropertiesLoose(_ref2, ["variant", "children"]);

  return /*#__PURE__*/React.createElement(CellBase, _extends({
    ref: ref
  }, props), children, variant === CellVariant.DISCLOSURE && /*#__PURE__*/React.createElement(CellSide, null, /*#__PURE__*/React.createElement(Icons.ShevronRight, {
    color: Color.GREY_TONE_20
  })), variant === CellVariant.CHOICE && /*#__PURE__*/React.createElement(CellSide, {
    hide: !props['aria-pressed']
  }, /*#__PURE__*/React.createElement(Icons.Check, {
    color: Color.BLUE
  })));
});