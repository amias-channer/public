/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

import React from 'react';
import styled, { useTheme } from 'styled-components';
import { css } from '@styled-system/css';
import { rgbaSafe, themeColor, themeTextStyle } from "../../utils";
import { ButtonSize, ButtonVariant, Color, Radius, Space, TextStyle } from "../../constants";
import { Box } from "../Box";
import { Flex } from "../Flex";
import { Text } from "../Text";
import { Widget } from "../Widget";
import { Button } from "../Button";
export var BAR_CHART_SECONDARY_COLOR = 'bar-chart-secondary-color';
export var useBarChartSecondaryColor = function useBarChartSecondaryColor() {
  var theme = useTheme();
  var fillColor = themeColor(Color.BLUE)({
    theme: theme
  });
  var secondaryFillColor = themeColor(Color.ACTION_BACKGROUND)({
    theme: theme
  });
  var secondaryFillColorOpacity = rgbaSafe(secondaryFillColor, 0.5);
  return "linear-gradient(" + secondaryFillColorOpacity + ", " + secondaryFillColorOpacity + "), " + fillColor;
};
var LegendItemColorBox = /*#__PURE__*/styled(Box).withConfig({
  displayName: "ChartWidget__LegendItemColorBox",
  componentId: "sc-10l16nr-0"
})(function (_ref) {
  var background = _ref.background;
  return {
    background: background
  };
});

var ChartWidgetLegendItem = function ChartWidgetLegendItem(_ref2) {
  var _ref2$color = _ref2.color,
      color = _ref2$color === void 0 ? Color.GREY_TONE_20 : _ref2$color,
      children = _ref2.children;
  var barChartSecondaryColor = useBarChartSecondaryColor();
  return /*#__PURE__*/React.createElement(Flex, {
    flexDirection: "column",
    mr: Space.S_32,
    minWidth: 0
  }, /*#__PURE__*/React.createElement(LegendItemColorBox, {
    radius: Radius.LEGEND,
    size: Space.S_8,
    background: color === BAR_CHART_SECONDARY_COLOR ? barChartSecondaryColor : undefined,
    bg: color === BAR_CHART_SECONDARY_COLOR ? undefined : color,
    mb: Space.S_4
  }), children);
};

var ChartWidgetBase = /*#__PURE__*/styled(Widget).withConfig({
  displayName: "ChartWidget__ChartWidgetBase",
  componentId: "sc-10l16nr-1"
})(css({
  display: 'grid',
  padding: Space.S_16,
  gridTemplateColumns: '1fr auto'
}));
var ChartWidgetTitle = /*#__PURE__*/styled(Text).withConfig({
  displayName: "ChartWidget__ChartWidgetTitle",
  componentId: "sc-10l16nr-2"
})(themeTextStyle(TextStyle.H2), css({
  alignSelf: 'center',
  gridColumn: '1'
}));
ChartWidgetTitle.defaultProps = {
  /** @todo Remove ellipsis */
  ellipsis: true
};
var ChartWidgetDescription = /*#__PURE__*/styled(Text).withConfig({
  displayName: "ChartWidget__ChartWidgetDescription",
  componentId: "sc-10l16nr-3"
})(themeTextStyle(TextStyle.CAPTION), css({
  color: Color.GREY_TONE_50,
  gridColumn: '1 / span 2'
}));
ChartWidgetDescription.defaultProps = {
  mt: Space.S_4
};
var ChartWidgetActionButton = /*#__PURE__*/styled(Button).withConfig({
  displayName: "ChartWidget__ChartWidgetActionButton",
  componentId: "sc-10l16nr-4"
})(css({
  gridColumn: '2',
  alignSelf: 'start',
  gridRow: '1',
  justifySelf: 'end',
  ml: Space.S_8,
  paddingX: Space.S_8
}));
ChartWidgetActionButton.defaultProps = {
  size: ButtonSize.SM,
  variant: ButtonVariant.SECONDARY
};
var ChartWidgetChartContainer = /*#__PURE__*/styled(Box).withConfig({
  displayName: "ChartWidget__ChartWidgetChartContainer",
  componentId: "sc-10l16nr-5"
})(css({
  mt: Space.S_16,
  gridColumn: '1 / span 2'
}));
var ChartWidgetLegend = /*#__PURE__*/styled(Flex).withConfig({
  displayName: "ChartWidget__ChartWidgetLegend",
  componentId: "sc-10l16nr-6"
})(css({
  mt: Space.S_16,
  gridRow: '4',
  gridColumn: '1 / span 2',
  flexDirection: 'row',
  minWidth: 0
}));
var ChartWidgetLegendItemTitle = /*#__PURE__*/styled(Text).withConfig({
  displayName: "ChartWidget__ChartWidgetLegendItemTitle",
  componentId: "sc-10l16nr-7"
})(themeTextStyle(TextStyle.SMALL));
ChartWidgetLegendItemTitle.defaultProps = {
  /** @todo Remove ellipsis */
  ellipsis: true
};
var ChartWidgetLegendItemDescription = /*#__PURE__*/styled(Text).withConfig({
  displayName: "ChartWidget__ChartWidgetLegendItemDescription",
  componentId: "sc-10l16nr-8"
})(themeTextStyle(TextStyle.SMALL), css({
  color: Color.GREY_TONE_50
}));
ChartWidgetLegendItemDescription.defaultProps = {
  /** @todo Remove ellipsis */
  ellipsis: true
};
var ChartWidgetFooter = /*#__PURE__*/styled(Flex).withConfig({
  displayName: "ChartWidget__ChartWidgetFooter",
  componentId: "sc-10l16nr-9"
})(css({
  mt: Space.S_16,
  gridRow: '5',
  gridColumn: '1 / span 2',
  flexDirection: 'column',
  minWidth: 0
}));
export var ChartWidget = Object.assign(ChartWidgetBase, {
  Title: ChartWidgetTitle,
  Description: ChartWidgetDescription,
  ActionButton: ChartWidgetActionButton,
  Chart: ChartWidgetChartContainer,
  Legend: ChartWidgetLegend,
  LegendItem: ChartWidgetLegendItem,
  LegendItemTitle: ChartWidgetLegendItemTitle,
  LegendItemDescription: ChartWidgetLegendItemDescription,
  Footer: ChartWidgetFooter
});