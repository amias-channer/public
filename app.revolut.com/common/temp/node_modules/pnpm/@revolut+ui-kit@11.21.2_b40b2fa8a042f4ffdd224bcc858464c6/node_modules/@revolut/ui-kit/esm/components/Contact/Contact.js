/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React, { forwardRef } from 'react';
import { Space } from "../../constants";
import { AvatarButton } from "../AvatarButton";
import { LineClamp } from "../LineClamp";
import { WIDTH } from "./constants";

var ContactTitle = function ContactTitle(_ref) {
  var children = _ref.children,
      rest = _objectWithoutPropertiesLoose(_ref, ["children"]);

  return /*#__PURE__*/React.createElement(AvatarButton.Title, _extends({
    mt: Space.S_8
  }, rest), /*#__PURE__*/React.createElement(LineClamp, {
    max: 2
  }, children));
};

export var RefForwardingContact = /*#__PURE__*/forwardRef(function (props, ref) {
  return /*#__PURE__*/React.createElement(AvatarButton, _extends({
    ref: ref,
    size: 56,
    __labelWidth: WIDTH,
    __parentWidth: WIDTH
  }, props));
});
export var Contact = Object.assign(RefForwardingContact, {
  Title: ContactTitle,
  Description: AvatarButton.Description,
  Badge: AvatarButton.Badge
});