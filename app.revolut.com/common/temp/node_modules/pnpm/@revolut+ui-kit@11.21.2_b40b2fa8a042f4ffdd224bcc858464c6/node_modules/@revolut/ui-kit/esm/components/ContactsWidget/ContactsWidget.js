/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/
import _styled2 from "styled-components";
import _styled from "styled-components";

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React, { forwardRef } from 'react';
import { css } from '@styled-system/css';
import { Grid } from "../../future/components/Grid";
import { Space } from "../../constants";
import { Widget } from "../Widget";
import { Spacer } from "../Spacer";
import { WIDTH } from "../Contact/constants";

var _StyledGrid = /*#__PURE__*/_styled(Grid).withConfig({
  displayName: "ContactsWidget___StyledGrid",
  componentId: "nfmcm3-0"
})(["", ""], function (p) {
  return p._css;
});

var _StyledSpacer = /*#__PURE__*/_styled(Spacer).withConfig({
  displayName: "ContactsWidget___StyledSpacer",
  componentId: "nfmcm3-1"
})({
  gridColumn: '1 / -1'
});

export var ContactsWidget = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var limitRows = _ref.limitRows,
      children = _ref.children,
      rest = _objectWithoutPropertiesLoose(_ref, ["limitRows", "children"]);

  return /*#__PURE__*/React.createElement(Widget, {
    p: Space.S_16
  }, /*#__PURE__*/React.createElement(_StyledGrid, _extends({
    ref: ref,
    autoRows: limitRows != null ? 0 : undefined,
    rows: limitRows != null ? "repeat(" + limitRows + ", auto)" : undefined,
    columns: "repeat(auto-fit, " + WIDTH + ")",
    columnGap: Space.S_8,
    placeContent: "space-between",
    overflow: "hidden"
  }, rest, {
    _css: css({
      marginBottom: Space.N_16,
      '& > *': {
        marginBottom: Space.S_16
      }
    })
  }), children, /*#__PURE__*/React.createElement(_StyledSpacer, null)));
});