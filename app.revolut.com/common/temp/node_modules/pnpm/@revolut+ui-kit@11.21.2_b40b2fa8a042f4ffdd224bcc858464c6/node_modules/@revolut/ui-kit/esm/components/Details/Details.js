/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React, { forwardRef } from 'react';
import { css } from '@styled-system/css';
import styled from 'styled-components';
import { AccessibleId, useAccessibleId } from "../AccessibleId";
import { Color, Size, Space, TextStyle } from "../../constants";
import { Box } from "../Box";
import { Cell } from "../Cell";
import { Text } from "../Text";

var getLabelId = function getLabelId(id) {
  return id ? "details-label-" + id : undefined;
};

var getDescriptionId = function getDescriptionId(id) {
  return id ? "details-desc-" + id : undefined;
};

var detailsStyle = css({
  display: 'grid',
  alignItems: 'normal',
  columnGap: Space.S_16,
  rowGap: Space.S_8,
  gridTemplateColumns: 'auto auto',
  gridTemplateRows: 'auto',
  minHeight: Size.DETAILS,
  minWidth: 0,
  paddingY: Space.S_12
});
var DetailsTitleBase = /*#__PURE__*/styled(Text).withConfig({
  displayName: "Details__DetailsTitleBase",
  componentId: "pbrodz-0"
})(css({
  gridColumn: 1,
  gridRow: 1
}));
DetailsTitleBase.defaultProps = {
  variant: TextStyle.H6,
  color: Color.GREY_TONE_50
};
/** @private  */

var DetailsTitle = /*#__PURE__*/forwardRef(function (props, ref) {
  var id = useAccessibleId();
  return /*#__PURE__*/React.createElement(DetailsTitleBase, _extends({
    ref: ref,
    id: getLabelId(id)
  }, props));
});
var DetailsContentBase = /*#__PURE__*/styled(Text).withConfig({
  displayName: "Details__DetailsContentBase",
  componentId: "pbrodz-1"
})(css({
  gridColumn: 2,
  gridRow: 1,
  justifySelf: 'end',
  textAlign: 'right',
  overflowWrap: 'anywhere',
  minWidth: 0,
  maxWidth: '100%'
}));
DetailsContentBase.defaultProps = {
  variant: TextStyle.CAPTION,
  color: Color.FOREGROUND
};
var DetailsContent = /*#__PURE__*/forwardRef(function (props, ref) {
  var id = useAccessibleId();
  return /*#__PURE__*/React.createElement(DetailsContentBase, _extends({
    ref: ref,
    id: getDescriptionId(id)
  }, props));
});
var DetailsNote = /*#__PURE__*/styled(Text).withConfig({
  displayName: "Details__DetailsNote",
  componentId: "pbrodz-2"
})(css({
  overflowWrap: 'anywhere',
  gridColumn: '1 / span 2',
  gridRow: 2
}));
DetailsNote.defaultProps = {
  variant: TextStyle.CAPTION,
  color: Color.FOREGROUND
};
var DetailsBase = /*#__PURE__*/forwardRef(function (props, ref) {
  return /*#__PURE__*/React.createElement(AccessibleId, null, function (_ref) {
    var id = _ref.id;
    return /*#__PURE__*/React.createElement(Box, _extends({
      ref: ref,
      role: props.use ? undefined : 'group',
      "aria-labelledby": getLabelId(id),
      "aria-describedby": getDescriptionId(id)
    }, props));
  });
});
var DetailsContainer = /*#__PURE__*/styled(DetailsBase).withConfig({
  displayName: "Details__DetailsContainer",
  componentId: "pbrodz-3"
})(detailsStyle);
export var Details = Object.assign(DetailsContainer, {
  Content: DetailsContent,
  Note: DetailsNote,
  Title: DetailsTitle
});
var DetailsCellBase = /*#__PURE__*/forwardRef(function (props, ref) {
  return /*#__PURE__*/React.createElement(AccessibleId, null, function (_ref2) {
    var id = _ref2.id;
    return /*#__PURE__*/React.createElement(Cell, _extends({
      ref: ref,
      role: "group",
      "aria-labelledby": getLabelId(id),
      "aria-describedby": getDescriptionId(id)
    }, props));
  });
});
var DetailsCellContainer = /*#__PURE__*/styled(DetailsCellBase).withConfig({
  displayName: "Details__DetailsCellContainer",
  componentId: "pbrodz-4"
})(detailsStyle);
export var DetailsCell = Object.assign(DetailsCellContainer, {
  Content: DetailsContent,
  Note: DetailsNote,
  Title: DetailsTitle
});