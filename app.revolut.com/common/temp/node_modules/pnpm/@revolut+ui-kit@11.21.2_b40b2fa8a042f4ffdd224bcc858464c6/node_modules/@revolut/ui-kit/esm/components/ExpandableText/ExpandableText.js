/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/
import _styled from "styled-components";

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React, { useState } from 'react';
import { Space } from "../../constants";
import { useMessage } from "../../hooks";
import { TextButton } from "../TextButton";
import { Text } from "../Text";
import { Ellipsis } from "../Ellipsis";

var _StyledTextButton = /*#__PURE__*/_styled(TextButton).withConfig({
  displayName: "ExpandableText___StyledTextButton",
  componentId: "sc-1gok3o-0"
})({
  flex: '0 0 auto'
});

export var ExpandableText = function ExpandableText(_ref) {
  var children = _ref.children,
      labelShowLess = _ref.labelShowLess,
      labelShowMore = _ref.labelShowMore,
      _ref$prefersShowMore = _ref.prefersShowMore,
      prefersShowMore = _ref$prefersShowMore === void 0 ? false : _ref$prefersShowMore,
      rest = _objectWithoutPropertiesLoose(_ref, ["children", "labelShowLess", "labelShowMore", "prefersShowMore"]);

  var m = useMessage();

  var _useState = useState(prefersShowMore),
      isShownMore = _useState[0],
      setIsShownMore = _useState[1];

  return /*#__PURE__*/React.createElement(Text, _extends({
    display: isShownMore ? undefined : 'flex'
  }, rest), isShownMore ? children : /*#__PURE__*/React.createElement(Ellipsis, null, children), /*#__PURE__*/React.createElement(_StyledTextButton, {
    onClick: function onClick() {
      return setIsShownMore(function (state) {
        return !state;
      });
    },
    marginLeft: Space.S_8
  }, isShownMore ? labelShowLess != null ? labelShowLess : m('action.show-less') : labelShowMore != null ? labelShowMore : m('action.show-more')));
};