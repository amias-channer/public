/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React, { forwardRef } from 'react';
import { css } from '@styled-system/css';
import styled from 'styled-components';
import { buttonElevation, variant } from "../../styles";
import { ButtonBase } from "../ButtonBase";
import { ButtonVariant, Radius, Size } from "../../constants";
var FABBase = /*#__PURE__*/styled(ButtonBase).withConfig({
  displayName: "FAB__FABBase",
  componentId: "sc-1skuvj9-0"
})(variant({
  scale: 'buttonStyles'
}), buttonElevation, css({
  display: 'flex',
  alignItems: 'center',
  justifyContent: 'center',
  width: Size.S_56,
  height: Size.S_56,
  borderRadius: Radius.ROUND
}));
FABBase.defaultProps = {
  variant: ButtonVariant.DEFAULT,
  elevated: true
};
export var FAB = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var Icon = _ref.useIcon,
      rest = _objectWithoutPropertiesLoose(_ref, ["useIcon"]);

  return /*#__PURE__*/React.createElement(FABBase, _extends({
    ref: ref
  }, rest), /*#__PURE__*/React.createElement(Icon, {
    size: 24
  }));
});