/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React, { forwardRef } from 'react';
import styled from 'styled-components';
import { themeSpace } from "../../utils";
import { Space } from "../../constants";
import { ColorModeSwitchProvider } from "../ColorModeSwitchProvider";
import { Absolute, Relative } from "../Position";
import { Toast } from "../Toast";
import { TransitionFade } from "../Transitions";
var FlagContainer = /*#__PURE__*/styled(Absolute).withConfig({
  displayName: "Flag__FlagContainer",
  componentId: "s6rwtj-0"
})(["width:max-content;left:50%;transform:translateX(-50%);margin-top:", ";pointer-events:none;"], themeSpace(Space.S_8));
export var Flag = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
      message = _ref.message,
      visible = _ref.visible,
      rest = _objectWithoutPropertiesLoose(_ref, ["children", "message", "visible"]);

  return /*#__PURE__*/React.createElement(Relative, _extends({
    width: "fit-content",
    ref: ref
  }, rest), children, /*#__PURE__*/React.createElement(ColorModeSwitchProvider, null, /*#__PURE__*/React.createElement(TransitionFade, {
    "in": visible
  }, /*#__PURE__*/React.createElement(FlagContainer, null, /*#__PURE__*/React.createElement(Toast, null, /*#__PURE__*/React.createElement(Toast.Label, null, message))))));
});