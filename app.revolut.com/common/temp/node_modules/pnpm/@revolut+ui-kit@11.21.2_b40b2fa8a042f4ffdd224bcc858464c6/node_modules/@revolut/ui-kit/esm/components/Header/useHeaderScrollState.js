/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

import { useState } from 'react';
import { getScrollEventTarget, getScrollingParent } from "../../utils";
import { useDocument, useUniversalLayoutEffect } from "../../hooks";
export var useHeaderScrollState = function useHeaderScrollState(state, headerRef, titleRef) {
  var doc = useDocument();

  var _useState = useState(false),
      headerScrollState = _useState[0],
      setHeaderState = _useState[1];

  useUniversalLayoutEffect(function () {
    if (doc && state) {
      var target = getScrollEventTarget(getScrollingParent(headerRef.current, doc));

      var handleScroll = function handleScroll() {
        if (titleRef.current && headerRef.current) {
          setHeaderState(titleRef.current.getBoundingClientRect().bottom < headerRef.current.getBoundingClientRect().bottom);
        } else {
          setHeaderState(false);
        }
      };

      handleScroll();
      target.addEventListener('scroll', handleScroll, {
        passive: true
      });
      return function () {
        return target.removeEventListener('scroll', handleScroll);
      };
    }
  }, [doc, state, headerRef, titleRef]);
  return headerScrollState;
};