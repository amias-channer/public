/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import { Color, Space, TextStyle } from "../../constants";
import { NavBarItem } from "../NavBar";
import { Text } from "../Text";
import { useHeaderBaseContext } from "./HeaderBaseContext";
import { HeaderBaseVariant } from "./variants";
export var SUBTITLE_GRID_AREA = 'subtitle';

var getMarginTop = function getMarginTop(variant) {
  switch (variant) {
    case HeaderBaseVariant.FORM:
      return Space.S_8;

    case HeaderBaseVariant.ITEM:
      return Space.S_8;

    case HeaderBaseVariant.MAIN:
      return Space.S_8;

    default:
      return Space.NONE;
  }
};

var getVariant = function getVariant(variant) {
  switch (variant) {
    case HeaderBaseVariant.MAIN:
      return TextStyle.PRIMARY;

    case HeaderBaseVariant.ITEM:
      return TextStyle.PRIMARY;

    default:
      return TextStyle.CAPTION;
  }
};

var getColor = function getColor(variant) {
  switch (variant) {
    case HeaderBaseVariant.MAIN:
      return undefined;

    case HeaderBaseVariant.ITEM:
      return undefined;

    default:
      return Color.GREY_TONE_50;
  }
};
/** @private */


export function HeaderBaseSubtitle(props) {
  var variant = useHeaderBaseContext();

  if (variant === HeaderBaseVariant.MODAL) {
    return null;
  }

  return /*#__PURE__*/React.createElement(NavBarItem, {
    gridArea: SUBTITLE_GRID_AREA
  }, /*#__PURE__*/React.createElement(Text, _extends({
    mt: getMarginTop(variant),
    variant: getVariant(variant),
    color: getColor(variant)
  }, props)));
}