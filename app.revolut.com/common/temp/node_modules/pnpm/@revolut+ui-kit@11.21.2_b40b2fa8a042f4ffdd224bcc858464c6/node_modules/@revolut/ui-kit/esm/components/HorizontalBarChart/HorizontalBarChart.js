/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React, { useEffect, useMemo, useRef, useState } from 'react';
import { ParentSizeModern } from '@visx/responsive';
import { BarRounded, Line } from '@visx/shape';
import { Group } from '@visx/group';
import { scaleLinear } from '@visx/scale';
import { Text } from '@visx/text';
import { Color } from "../../constants";
import { themeColor } from "../../utils";
import { useTheme } from "../../hooks";
import { AXIS_LEFT_MARGIN, AXIS_RIGHT_MARGIN, BAR_HEIGHT, HORIZONTAL_BAR_CHART_MARGIN, ITEMS_MARGIN, ITEM_HEIGHT, ITEM_TOP_MARGIN } from "./constants";
import { GraphContainer } from "./styled";
export var HorizontalBarChart = function HorizontalBarChart(props) {
  return /*#__PURE__*/React.createElement(ParentSizeModern, null, function (_ref) {
    var width = _ref.width;
    return /*#__PURE__*/React.createElement(HorizontalBarChartInner, _extends({
      width: width
    }, props));
  });
};

var HorizontalBarChartInner = function HorizontalBarChartInner(_ref2) {
  var width = _ref2.width,
      data = _ref2.data,
      rest = _objectWithoutPropertiesLoose(_ref2, ["width", "data"]);

  var theme = useTheme();
  var textColor = themeColor(Color.GREY_TONE_50)({
    theme: theme
  });
  var barBackgroundColor = themeColor(Color.GREY_TONE_2)({
    theme: theme
  });
  var axisLeftRef = useRef(null);

  var _useState = useState(0),
      axisLeftWidth = _useState[0],
      setAxisLeftWidth = _useState[1];

  var axisRightRef = useRef(null);

  var _useState2 = useState(0),
      axisRightWidth = _useState2[0],
      setAxisRightWidth = _useState2[1];

  useEffect(function () {
    if (axisLeftRef.current) {
      var rect = axisLeftRef.current.getBoundingClientRect();
      setAxisLeftWidth(rect.width);
    }

    if (axisRightRef.current) {
      var _rect = axisRightRef.current.getBoundingClientRect();

      setAxisRightWidth(_rect.width);
    }
  }, []);
  var hasLeftAxis = data.some(function (item) {
    return typeof item.labelLeft === 'string';
  });
  var hasRightAxis = data.some(function (item) {
    return typeof item.labelRight === 'string';
  });
  var height = data.length * ITEM_HEIGHT + (data.length - 1) * ITEMS_MARGIN + HORIZONTAL_BAR_CHART_MARGIN.top + HORIZONTAL_BAR_CHART_MARGIN.bottom;
  var graphHeight = height - HORIZONTAL_BAR_CHART_MARGIN.top - HORIZONTAL_BAR_CHART_MARGIN.bottom;
  var graphWidth = width - HORIZONTAL_BAR_CHART_MARGIN.left - HORIZONTAL_BAR_CHART_MARGIN.right;
  var barWidth = graphWidth - (hasLeftAxis ? axisLeftWidth + AXIS_LEFT_MARGIN : 0) - (hasRightAxis ? axisRightWidth + AXIS_RIGHT_MARGIN : 0);
  var barLeft = hasLeftAxis ? axisLeftWidth + AXIS_LEFT_MARGIN : 0;
  var xScale = useMemo(function () {
    return scaleLinear({
      domain: [0, 100],
      range: [0, barWidth]
    });
  }, [barWidth]);
  return /*#__PURE__*/React.createElement(GraphContainer, _extends({
    width: width,
    height: height
  }, rest), /*#__PURE__*/React.createElement(Group, {
    top: HORIZONTAL_BAR_CHART_MARGIN.top,
    left: HORIZONTAL_BAR_CHART_MARGIN.left
  }, /*#__PURE__*/React.createElement(Group, {
    innerRef: axisLeftRef
  }, data.map(function (_ref3, index) {
    var labelLeft = _ref3.labelLeft;
    return /*#__PURE__*/React.createElement(Text // eslint-disable-next-line react/no-array-index-key
    , {
      key: "asix-left-" + index + "-" + labelLeft,
      y: ITEM_HEIGHT / 2 + (ITEM_HEIGHT + ITEMS_MARGIN) * index,
      fill: textColor,
      fontSize: 12,
      fontFamily: theme.fonts["default"],
      verticalAnchor: "middle"
    }, labelLeft);
  })), /*#__PURE__*/React.createElement(Line, {
    from: {
      x: barLeft,
      y: 0
    },
    to: {
      x: barLeft,
      y: graphHeight
    },
    stroke: textColor,
    strokeDasharray: "2,3"
  }), /*#__PURE__*/React.createElement(Group, {
    left: barLeft
  }, data.map(function (item, index) {
    return /*#__PURE__*/React.createElement(Group // eslint-disable-next-line react/no-array-index-key
    , {
      key: "bar-rounded-" + index + "-" + item.labelLeft + "-" + item.labelRight
    }, /*#__PURE__*/React.createElement(BarRounded, {
      x: 0,
      y: ITEM_TOP_MARGIN + index * (ITEM_HEIGHT + ITEMS_MARGIN),
      width: xScale(100),
      height: BAR_HEIGHT,
      fill: barBackgroundColor,
      radius: 2,
      topLeft: true,
      topRight: true,
      bottomLeft: true,
      bottomRight: true
    }), /*#__PURE__*/React.createElement(BarRounded, {
      x: 0,
      y: ITEM_TOP_MARGIN + index * (ITEM_HEIGHT + ITEMS_MARGIN),
      width: xScale(item.value),
      height: BAR_HEIGHT,
      fill: themeColor(item.color)({
        theme: theme
      }),
      radius: 2,
      topLeft: true,
      topRight: true,
      bottomLeft: true,
      bottomRight: true
    }));
  })), /*#__PURE__*/React.createElement(Group, {
    left: graphWidth - axisRightWidth,
    innerRef: axisRightRef
  }, data.map(function (_ref4, index) {
    var labelRight = _ref4.labelRight;
    return /*#__PURE__*/React.createElement(Text // eslint-disable-next-line react/no-array-index-key
    , {
      key: "asix-right-" + index + "-" + labelRight,
      y: ITEM_HEIGHT / 2 + (ITEM_HEIGHT + ITEMS_MARGIN) * index,
      fill: textColor,
      fontSize: 12,
      fontFamily: theme.fonts["default"],
      verticalAnchor: "middle"
    }, labelRight);
  }))));
};