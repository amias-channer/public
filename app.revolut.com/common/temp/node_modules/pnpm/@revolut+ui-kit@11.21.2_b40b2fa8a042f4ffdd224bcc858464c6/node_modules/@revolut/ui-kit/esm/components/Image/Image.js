/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/
import _styled2 from "styled-components";
import _styled from "styled-components";

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React, { forwardRef } from 'react';
import { Absolute, Relative } from "../Position";
import { Box } from "../Box";
export var ImageVariant = {
  BACKGROUND: 'background',
  ELEMENT: 'element'
};

var _StyledBox = /*#__PURE__*/_styled(Box).withConfig({
  displayName: "Image___StyledBox",
  componentId: "sc-16f9f6n-0"
})(function (p) {
  return {
    backgroundImage: p._css,
    backgroundRepeat: 'no-repeat',
    backgroundPosition: 'center',
    backgroundSize: 'contain'
  };
});

var _StyledAbsolute = /*#__PURE__*/_styled(Absolute).withConfig({
  displayName: "Image___StyledAbsolute",
  componentId: "sc-16f9f6n-1"
})({
  objectFit: 'contain'
});

export var Image = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var alt = _ref.alt,
      aspectRatio = _ref.aspectRatio,
      sizes = _ref.sizes,
      src = _ref.src,
      srcSet = _ref.srcSet,
      variant = _ref.variant,
      role = _ref.role,
      rest = _objectWithoutPropertiesLoose(_ref, ["alt", "aspectRatio", "sizes", "src", "srcSet", "variant", "role"]);

  if (variant === ImageVariant.BACKGROUND) {
    return /*#__PURE__*/React.createElement(_StyledBox, _extends({
      "aria-label": alt,
      aspectRatio: aspectRatio != null ? aspectRatio : 1,
      ref: ref,
      role: role != null ? role : 'img'
    }, rest, {
      _css: "url(" + src + ")"
    }));
  }

  if (aspectRatio != null) {
    return /*#__PURE__*/React.createElement(Relative, _extends({
      aspectRatio: aspectRatio,
      zIndex: 0
    }, rest), /*#__PURE__*/React.createElement(_StyledAbsolute, {
      alt: alt,
      height: "100%",
      sizes: sizes,
      src: src,
      srcSet: srcSet,
      width: "100%",
      use: "img",
      ref: ref,
      role: role
    }));
  }

  return /*#__PURE__*/React.createElement(Box, _extends({
    alt: alt,
    height: "auto",
    sizes: sizes,
    src: src,
    srcSet: srcSet,
    use: "img",
    width: "100%",
    display: "block",
    ref: ref,
    role: role
  }, rest));
});