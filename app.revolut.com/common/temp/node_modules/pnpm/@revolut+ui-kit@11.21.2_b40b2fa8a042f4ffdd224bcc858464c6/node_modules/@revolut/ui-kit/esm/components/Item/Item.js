/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React, { forwardRef } from 'react';
import styled from 'styled-components';
import { css } from '@styled-system/css';
import { variant } from 'styled-system';
import { rem } from 'polished';
import { Color, Size, Space, TextStyle } from "../../constants";
import { themeTextStyle } from "../../utils";
import { Box } from "../Box";
import { Cell } from "../Cell";
import { Text } from "../Text";
import { Flex } from "../Flex";
var ItemBase = /*#__PURE__*/forwardRef(function (_ref, ref) {
  var children = _ref.children,
      _ref$iconColor = _ref.iconColor,
      iconColor = _ref$iconColor === void 0 ? Color.BLUE : _ref$iconColor,
      Icon = _ref.useIcon,
      props = _objectWithoutPropertiesLoose(_ref, ["children", "iconColor", "useIcon"]);

  return /*#__PURE__*/React.createElement(Cell, _extends({
    ref: ref
  }, props), Icon && /*#__PURE__*/React.createElement(ItemPrefix, {
    alignItems: "flex-start"
  }, /*#__PURE__*/React.createElement(Icon, {
    size: 24,
    color: iconColor
  })), children);
});
var ItemPrefix = /*#__PURE__*/styled(Flex).withConfig({
  displayName: "Item__ItemPrefix",
  componentId: "wz0cfy-0"
})({
  maxHeight: rem(44)
});
ItemPrefix.defaultProps = {
  alignItems: 'center',
  alignSelf: 'stretch',
  mr: Space.S_16
};
var ItemAvatar = /*#__PURE__*/styled(Box).withConfig({
  displayName: "Item__ItemAvatar",
  componentId: "wz0cfy-1"
})(css({
  marginY: Space.S_2,
  marginRight: Space.S_16,
  order: 2,
  alignSelf: 'flex-start'
}));
ItemAvatar.defaultProps = {
  size: Size.S_40
};
var ItemContent = /*#__PURE__*/styled(Text).withConfig({
  displayName: "Item__ItemContent",
  componentId: "wz0cfy-2"
})(themeTextStyle(TextStyle.PRIMARY), css({
  alignSelf: 'stretch',
  display: 'flex',
  flex: '1 1 auto',
  flexFlow: 'column',
  justifyContent: 'center',
  marginRight: Space.S_8,
  order: 3,
  overflow: 'hidden'
}));
var ItemSide = /*#__PURE__*/styled(Text).withConfig({
  displayName: "Item__ItemSide",
  componentId: "wz0cfy-3"
})(themeTextStyle(TextStyle.SECONDARY), css({
  alignSelf: 'stretch',
  display: 'flex',
  flex: '0 0 auto',
  flexFlow: 'column',
  justifyContent: 'center',
  order: 4,
  overflow: 'hidden',
  textAlign: 'right',
  // room for focus styles ~4px
  marginX: Space.N_4,
  paddingX: Space.S_4
}));
ItemSide.defaultProps = {
  maxWidth: '75%'
};
var ItemTitle = /*#__PURE__*/styled(Text).withConfig({
  displayName: "Item__ItemTitle",
  componentId: "wz0cfy-4"
})(themeTextStyle(TextStyle.PRIMARY), {
  display: 'block'
});
ItemTitle.defaultProps = {
  whiteSpace: 'normal',
  ellipsis: true
};
var ItemDescription = /*#__PURE__*/styled(Text).withConfig({
  displayName: "Item__ItemDescription",
  componentId: "wz0cfy-5"
})(themeTextStyle(TextStyle.CAPTION), {
  display: 'block',
  marginBottom: 'auto'
});
ItemDescription.defaultProps = {
  whiteSpace: 'normal',
  ellipsis: true,
  color: Color.GREY_TONE_50
};
var ItemValue = /*#__PURE__*/styled(Text).withConfig({
  displayName: "Item__ItemValue",
  componentId: "wz0cfy-6"
})({
  display: 'block',
  marginBottom: 'auto',
  marginLeft: 'auto'
}, function (_ref2) {
  var _ref2$color = _ref2.color,
      color = _ref2$color === void 0 ? Color.GREY_TONE_50 : _ref2$color;
  return variant({
    variants: {
      secondary: {
        color: color,
        flexGrow: 1,
        variant: "textStyles." + TextStyle.CAPTION
      }
    }
  });
});
ItemValue.defaultProps = {
  whiteSpace: 'normal',
  ellipsis: true
};
export var Item = Object.assign(ItemBase, {
  Prefix: ItemPrefix,
  Avatar: ItemAvatar,
  Content: ItemContent,
  Description: ItemDescription,
  Side: ItemSide,
  Title: ItemTitle,
  Value: ItemValue
});