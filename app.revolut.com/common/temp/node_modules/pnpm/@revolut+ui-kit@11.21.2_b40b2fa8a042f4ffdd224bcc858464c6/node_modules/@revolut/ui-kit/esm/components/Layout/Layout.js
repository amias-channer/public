/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React, { useRef } from 'react';
import { Color } from "../../constants";
import { Relative } from "../Position";
import { ToastProvider } from "../ToastProvider";
import { ToastContainer } from "../ToastContainer";
import { SlotName, Z_INDICES } from "./constants";
import { LayoutActions } from "./LayoutActions";
import { LayoutSide } from "./LayoutSide";
import { LayoutMenu } from "./LayoutMenu";
import { LayoutMain } from "./LayoutMain";
import { LayoutBase } from "./LayoutBase";
import { useFloatingMenuVisibility } from "./useFloatingMenuVisibility";
import { LayoutSlotsContext } from "./LayoutSlotsContext";
import { FloatingMenuContext } from "./FloatingMenuContext";
import { LayoutToasts } from "./LayoutToasts";
export function Layout(_ref) {
  var children = _ref.children,
      rest = _objectWithoutPropertiesLoose(_ref, ["children"]);

  var ref = useRef(null);
  var floatingMenuVisibilityState = useFloatingMenuVisibility(ref);
  return /*#__PURE__*/React.createElement(LayoutSlotsContext.Provider, null, /*#__PURE__*/React.createElement(Relative, {
    bg: Color.LAYOUT_BACKGROUND,
    color: Color.FOREGROUND,
    zIndex: Z_INDICES.CONTAINER
  }, /*#__PURE__*/React.createElement(FloatingMenuContext.Provider, {
    value: floatingMenuVisibilityState
  }, /*#__PURE__*/React.createElement(ToastProvider, null, /*#__PURE__*/React.createElement(LayoutBase, _extends({
    ref: ref,
    minHeight: "100vh"
  }, rest), children, /*#__PURE__*/React.createElement(LayoutToasts, null, /*#__PURE__*/React.createElement(ToastContainer, null)))))));
}

var LayoutMenuFill = function LayoutMenuFill(props) {
  return /*#__PURE__*/React.createElement(LayoutSlotsContext.Fill, _extends({
    name: SlotName.MENU
  }, props));
};

var LayoutSideFill = function LayoutSideFill(props) {
  return /*#__PURE__*/React.createElement(LayoutSlotsContext.Fill, _extends({
    name: SlotName.SIDE
  }, props));
};

var LayoutActionsFill = function LayoutActionsFill(props) {
  return /*#__PURE__*/React.createElement(LayoutSlotsContext.Fill, _extends({
    name: SlotName.ACTS
  }, props));
};

Layout.Menu = LayoutMenu;
Layout.Side = LayoutSide;
Layout.Main = LayoutMain;
Layout.Actions = LayoutActions;
Layout.MenuFill = LayoutMenuFill;
Layout.SideFill = LayoutSideFill;
Layout.ActionsFill = LayoutActionsFill;
export { ContainerSize as LayoutContainerSize, SideSize as LayoutSideSize, MainSize as LayoutMainSize } from "./constants";