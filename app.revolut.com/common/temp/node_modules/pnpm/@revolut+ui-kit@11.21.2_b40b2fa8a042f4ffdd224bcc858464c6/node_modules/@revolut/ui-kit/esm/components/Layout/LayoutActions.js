/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import styled from 'styled-components';
import { css } from '@styled-system/css';
import { Size, Space } from "../../constants";
import { Box } from "../Box";
import { Area, SlotName, Z_INDICES } from "./constants";
import { LayoutSlotsContext } from "./LayoutSlotsContext";
export var LayoutActionsBase = /*#__PURE__*/styled(Box).withConfig({
  displayName: "LayoutActions__LayoutActionsBase",
  componentId: "sc-43h151-0"
})(css({
  display: 'grid',
  gridArea: Area.ACTS,
  justifyContent: 'start',
  position: 'sticky',
  bottom: Space.S_24,
  zIndex: Z_INDICES.ACTS,
  maxWidth: Size.LAYOUT_ACTIONS,
  width: '100%',
  rowGap: Space.S_16,
  gridAutoColumns: '1fr',
  gridAutoFlow: 'row',
  pt: Space.S_24,
  mt: 'auto',
  mx: 'auto'
}));
export function LayoutActions(_ref) {
  var children = _ref.children,
      rest = _objectWithoutPropertiesLoose(_ref, ["children"]);

  return /*#__PURE__*/React.createElement(LayoutActionsBase, rest, children != null ? children : /*#__PURE__*/React.createElement(LayoutSlotsContext.Slot, {
    name: SlotName.ACTS
  }));
}