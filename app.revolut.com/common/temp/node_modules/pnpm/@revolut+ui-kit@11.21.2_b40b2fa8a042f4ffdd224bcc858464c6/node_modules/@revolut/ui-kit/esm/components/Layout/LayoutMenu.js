/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import styled from 'styled-components';
import { css } from '@styled-system/css';
import { rem } from 'polished';
import { Space } from "../../constants";
import { Box } from "../Box";
import { Area, SlotName, Z_INDICES } from "./constants";
import { LayoutSlotsContext } from "./LayoutSlotsContext";
import { scrollbar } from "../../styles";
export var LayoutMenuBase = /*#__PURE__*/styled(Box).withConfig({
  displayName: "LayoutMenu__LayoutMenuBase",
  componentId: "vg062l-0"
})(css({
  gridArea: Area.MENU,
  position: 'sticky',
  top: ['auto', null, 0],
  bottom: [0, null, 'auto'],
  maxHeight: [null, null, '100vh'],
  zIndex: Z_INDICES.MENU,
  px: [null, null, Space.S_16, Space.S_24, null, null, rem(160)],
  py: [null, null, Space.S_32],
  pointerEvents: ['none', null, 'auto'],
  '> *': {
    pointerEvents: 'auto'
  }
}), scrollbar(Space.S_4), // Overwrite overflowY because scrollbar() sets it to 'overlay'
css({
  '&&': {
    overflowY: ['hidden', null, 'overlay']
  }
}));
export function LayoutMenu(_ref) {
  var children = _ref.children,
      rest = _objectWithoutPropertiesLoose(_ref, ["children"]);

  return /*#__PURE__*/React.createElement(LayoutMenuBase, _extends({
    use: "nav",
    "aria-label": "Main"
  }, rest), children != null ? children : /*#__PURE__*/React.createElement(LayoutSlotsContext.Slot, {
    name: SlotName.MENU
  }));
}