/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

import { useRef, useState } from 'react';
import { getScrollEventTarget, getScrollingParent } from "../../utils";
import { useDocument, useUniversalLayoutEffect } from "../../hooks";
export var useFloatingMenuVisibility = function useFloatingMenuVisibility(ref) {
  var doc = useDocument();
  var refLastScrollPosition = useRef();

  var _useState = useState(true),
      floatingMenuVisibilityState = _useState[0],
      setFloatingMenuState = _useState[1];

  useUniversalLayoutEffect(function () {
    if (doc) {
      var scrollParent = getScrollingParent(ref.current, doc);

      var updateScrolled = function updateScrolled(position, scrollHeight, height) {
        var prevPosition = refLastScrollPosition.current;
        setFloatingMenuState(position <= 0 || prevPosition != null && prevPosition > position || position >= scrollHeight - height);
        refLastScrollPosition.current = position;
      };

      var handleScroll = function handleScroll() {
        updateScrolled(scrollParent.scrollTop, scrollParent.scrollHeight, scrollParent.clientHeight);
      };

      var target = getScrollEventTarget(scrollParent);
      handleScroll();
      target.addEventListener('scroll', handleScroll, {
        passive: true
      });
      return function () {
        return target.removeEventListener('scroll', handleScroll);
      };
    }
  }, [doc, ref]);
  return floatingMenuVisibilityState;
};