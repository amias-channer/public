/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React, { createContext, useContext } from 'react';
import { rem } from 'polished';
import { Space } from "../../constants";
import { Box } from "../Box";
import { Flex } from "../Flex";
import { ListVariant } from "./variants";
var ListContext = /*#__PURE__*/createContext(ListVariant.DEFAULT);

function ListBase(_ref) {
  var _ref$variant = _ref.variant,
      variant = _ref$variant === void 0 ? ListVariant.DEFAULT : _ref$variant,
      rest = _objectWithoutPropertiesLoose(_ref, ["variant"]);

  return /*#__PURE__*/React.createElement(ListContext.Provider, {
    value: variant
  }, /*#__PURE__*/React.createElement(Box, _extends({
    use: "ul",
    variant: variant,
    variantKey: "listStyles"
  }, rest)));
}

function Item(_ref2) {
  var Icon = _ref2.useIcon,
      children = _ref2.children,
      rest = _objectWithoutPropertiesLoose(_ref2, ["useIcon", "children"]);

  var variant = useContext(ListContext);
  return /*#__PURE__*/React.createElement(Box, {
    use: "li"
  }, /*#__PURE__*/React.createElement(Flex, _extends({
    alignItems: "center"
  }, rest), Icon && /*#__PURE__*/React.createElement(Flex, {
    alignSelf: "flex-start",
    minHeight: rem(22),
    alignItems: "center",
    mr: variant === ListVariant.COMPACT ? Space.S_12 : Space.S_16
  }, /*#__PURE__*/React.createElement(Icon, {
    size: variant === ListVariant.COMPACT ? 16 : 24
  })), children));
}

export var List = Object.assign(ListBase, {
  Item: Item
});