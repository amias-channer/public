/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }

function _wrapNativeSuper(Class) { var _cache = typeof Map === "function" ? new Map() : undefined; _wrapNativeSuper = function _wrapNativeSuper(Class) { if (Class === null || !_isNativeFunction(Class)) return Class; if (typeof Class !== "function") { throw new TypeError("Super expression must either be null or a function"); } if (typeof _cache !== "undefined") { if (_cache.has(Class)) return _cache.get(Class); _cache.set(Class, Wrapper); } function Wrapper() { return _construct(Class, arguments, _getPrototypeOf(this).constructor); } Wrapper.prototype = Object.create(Class.prototype, { constructor: { value: Wrapper, enumerable: false, writable: true, configurable: true } }); return _setPrototypeOf(Wrapper, Class); }; return _wrapNativeSuper(Class); }

function _construct(Parent, args, Class) { if (_isNativeReflectConstruct()) { _construct = Reflect.construct; } else { _construct = function _construct(Parent, args, Class) { var a = [null]; a.push.apply(a, args); var Constructor = Function.bind.apply(Parent, a); var instance = new Constructor(); if (Class) _setPrototypeOf(instance, Class.prototype); return instance; }; } return _construct.apply(null, arguments); }

function _isNativeReflectConstruct() { if (typeof Reflect === "undefined" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === "function") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }

function _isNativeFunction(fn) { return Function.toString.call(fn).indexOf("[native code]") !== -1; }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

function _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }

var IndexedMap = /*#__PURE__*/function (_Map) {
  _inheritsLoose(IndexedMap, _Map);

  function IndexedMap() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _Map.call.apply(_Map, [this].concat(args)) || this;
    _this.list = [];
    return _this;
  }

  var _proto = IndexedMap.prototype;

  _proto.set = function set(key, value) {
    var index = this.list.indexOf(key);
    if (index !== -1) this.list.splice(index, 1);
    this.list.push(key);
    return _Map.prototype.set.call(this, key, value);
  };

  _proto.getByIndex = function getByIndex(index) {
    var key = this.list[index];
    return key != null ? _Map.prototype.get.call(this, key) : undefined;
  };

  _proto.indexOf = function indexOf(key) {
    return this.list.indexOf(key);
  };

  _proto["delete"] = function _delete(key) {
    var index = this.list.indexOf(key);
    if (index !== -1) this.list.splice(index, 1);
    return _Map.prototype["delete"].call(this, key);
  };

  _createClass(IndexedMap, [{
    key: "length",
    get: function get() {
      return this.list.length;
    }
  }]);

  return IndexedMap;
}( /*#__PURE__*/_wrapNativeSuper(Map));

var ModalLayerManager = /*#__PURE__*/function (_IndexedMap) {
  _inheritsLoose(ModalLayerManager, _IndexedMap);

  function ModalLayerManager() {
    return _IndexedMap.apply(this, arguments) || this;
  }

  var _proto2 = ModalLayerManager.prototype;

  _proto2.set = function set(key, value) {
    _IndexedMap.prototype.set.call(this, key, value);

    this.forEach(function (_, cb) {
      return render(cb);
    });
    return this;
  };

  _proto2["delete"] = function _delete(key) {
    var result = _IndexedMap.prototype["delete"].call(this, key);

    this.forEach(function (_, cb) {
      return render(cb);
    });
    render(key);
    return result;
  };

  return ModalLayerManager;
}(IndexedMap);

function render(cb) {
  return cb(function (count) {
    return count + 1;
  });
}
/** @private */


export var modalLayerManager = new ModalLayerManager();