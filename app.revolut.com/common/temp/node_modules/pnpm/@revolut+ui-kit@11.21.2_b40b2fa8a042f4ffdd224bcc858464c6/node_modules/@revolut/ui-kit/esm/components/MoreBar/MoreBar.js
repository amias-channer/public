/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); }

function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }

function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }

import React, { createContext, forwardRef, useContext, useState } from 'react';
import { ButtonSize, ButtonVariant, Space } from "../../constants";
import { getNodeChildren } from "../../utils";
import { useUniversalLayoutEffect, useWindow } from "../../hooks";
import { MoreButton } from "../MoreButton";
import { Button } from "../Button";
import { Bar } from "../Bar";

function applyOrder(parent, win) {
  var children = getNodeChildren(parent, win);

  for (var _iterator = _createForOfIteratorHelperLoose(children.entries()), _step; !(_step = _iterator()).done;) {
    var _step$value = _step.value,
        _index = _step$value[0],
        element = _step$value[1];
    element.style.order = String(_index);
  }
}

function handleResize(parent, gap, update, win) {
  var children = getNodeChildren(parent, win);
  if (children.length <= 1) return;
  var moreIndex = children.length - 1;
  var more = children[moreIndex];
  var parentRect = parent.getBoundingClientRect();
  var moreRect = more.getBoundingClientRect();
  var parentRight = parentRect.right;
  var parentRightWithOverflow = parentRight - moreRect.width - gap;
  var lastItemIndex = children.length - 2;
  var childRight = 0;
  var visibleIndex = lastItemIndex;
  var visibleIndexWithOverflow = lastItemIndex - 1;
  var childrenWithoutMore = children.slice(0, -1);

  for (var _iterator2 = _createForOfIteratorHelperLoose(childrenWithoutMore.entries()), _step2; !(_step2 = _iterator2()).done;) {
    var _step2$value = _step2.value,
        _index2 = _step2$value[0],
        element = _step2$value[1];
    var childRect = element.getBoundingClientRect();
    childRight += _index2 === 0 ? parentRect.left + childRect.width : childRect.width + gap;

    if (childRight > parentRight && visibleIndex === lastItemIndex) {
      visibleIndex = _index2 - 1;
    }

    if (childRight > parentRightWithOverflow && visibleIndexWithOverflow === lastItemIndex - 1) {
      visibleIndexWithOverflow = _index2 - 1;
    }
  }

  var hasOverflow = visibleIndex < lastItemIndex;
  childrenWithoutMore.forEach(function (element, index) {
    if (index > (hasOverflow ? visibleIndexWithOverflow : visibleIndex)) {
      element.style.visibility = 'hidden';
    } else {
      element.style.visibility = '';
    }
  });
  more.style.order = String(hasOverflow ? visibleIndexWithOverflow : visibleIndex);
  more.style.visibility = visibleIndex === lastItemIndex ? 'hidden' : '';
  update(hasOverflow ? visibleIndexWithOverflow : visibleIndex);
}
/** @private */


export var MoreBarVisibleIndexContext = /*#__PURE__*/createContext(null);

/** @private */
export function MoreBarProvider(_ref) {
  var barElement = _ref.barElement,
      _ref$fallbackGap = _ref.fallbackGap,
      fallbackGap = _ref$fallbackGap === void 0 ? 0 : _ref$fallbackGap,
      children = _ref.children;
  var win = useWindow();

  var _useState = useState(-1),
      visibleIndex = _useState[0],
      setVisibleIndex = _useState[1];

  useUniversalLayoutEffect(function () {
    if (barElement && win && win.ResizeObserver) {
      var _styles$columnGap;

      var styles = win.getComputedStyle(barElement);
      var gap = parseFloat(((_styles$columnGap = styles.columnGap) != null ? _styles$columnGap : '').replace(/px$/, '')) || fallbackGap;
      var observer = new win.ResizeObserver(function (_ref2) {
        var entry = _ref2[0];

        if (entry.target instanceof win.HTMLElement) {
          handleResize(entry.target, gap, setVisibleIndex, win);
        }
      });
      applyOrder(barElement, win);
      observer.observe(barElement);
      return function () {
        return observer.disconnect();
      };
    }
  }, [win, barElement, fallbackGap, children]);
  return visibleIndex !== null ? /*#__PURE__*/React.createElement(MoreBarVisibleIndexContext.Provider, {
    value: visibleIndex
  }, children) : null;
}
export var MoreBarAction = /*#__PURE__*/forwardRef(function (props, ref) {
  var popupVisibleIndex = useContext(MoreBarVisibleIndexContext);

  if (popupVisibleIndex !== null) {
    var _ref3;

    return /*#__PURE__*/React.createElement(MoreButton.Action, _extends({
      ref: ref,
      __css: (_ref3 = {}, _ref3[":nth-child(-n + " + (popupVisibleIndex + 1) + ")"] = {
        display: 'none'
      }, _ref3)
    }, props));
  }

  return /*#__PURE__*/React.createElement(Button, _extends({
    ref: ref
  }, props));
});
MoreBarAction.defaultProps = {
  variant: ButtonVariant.SECONDARY,
  size: ButtonSize.SM
};
export function MoreBar(_ref4) {
  var children = _ref4.children,
      labelDialog = _ref4.labelDialog,
      labelMoreButton = _ref4.labelMoreButton,
      fallbackGap = _ref4.fallbackGap,
      rest = _objectWithoutPropertiesLoose(_ref4, ["children", "labelDialog", "labelMoreButton", "fallbackGap"]);

  var _useState2 = useState(null),
      barElement = _useState2[0],
      setBarElement = _useState2[1];

  return /*#__PURE__*/React.createElement(Bar, _extends({
    ref: setBarElement
  }, rest, {
    maxWidth: "100%",
    overflow: "hidden" // room for focus styles ~4px
    ,
    p: Space.S_4,
    m: Space.N_4
  }), children, /*#__PURE__*/React.createElement(MoreBarProvider, {
    barElement: barElement,
    fallbackGap: fallbackGap
  }, /*#__PURE__*/React.createElement(MoreButton, {
    "aria-label": labelMoreButton,
    labelDialog: labelDialog
  }, children)));
}
MoreBar.Action = MoreBarAction;