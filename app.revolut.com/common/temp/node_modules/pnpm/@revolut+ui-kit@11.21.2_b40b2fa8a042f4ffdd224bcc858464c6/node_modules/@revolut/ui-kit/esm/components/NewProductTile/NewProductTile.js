/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

var _variants;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import { css } from '@styled-system/css';
import { variant } from 'styled-system';
import styled from 'styled-components';
import { rem } from 'polished';
import { Color, Space, TextStyle } from "../../constants";
import { themeTextStyle } from "../../utils";
import { Box } from "../Box";
import { Widget } from "../Widget";
import { TextBox } from "../Text";
import { Image, ImageVariant } from "../Image";
import { AccessibleId, useAccessibleId } from "../AccessibleId";

var getLabelId = function getLabelId(id) {
  return id ? "new-product-tile-label-" + id : undefined;
};

var getDescriptionId = function getDescriptionId(id) {
  return id ? "new-product-tile-desc-" + id : undefined;
};

var IMAGE_WIDTH = rem(96);
export var NewProductTileVariant = {
  SMALL: 'small',
  LARGE: 'large'
};
var NewProductTileAvatar = /*#__PURE__*/styled(Box).withConfig({
  displayName: "NewProductTile__NewProductTileAvatar",
  componentId: "cjudsg-0"
})(css({
  gridRow: 'avatar',
  gridColumn: '1',
  marginBottom: Space.S_16
}));
var NewProductTileTitleBase = /*#__PURE__*/styled(TextBox).withConfig({
  displayName: "NewProductTile__NewProductTileTitleBase",
  componentId: "cjudsg-1"
})(themeTextStyle(TextStyle.TILE), css({
  gridColumn: '1',
  gridRow: 'title',
  alignSelf: 'end',
  maxWidth: rem(215)
}));

var NewProductTileTitle = function NewProductTileTitle(props) {
  var id = useAccessibleId();
  return /*#__PURE__*/React.createElement(NewProductTileTitleBase, _extends({
    id: getLabelId(id)
  }, props));
};

var NewProductTileDescriptionBase = /*#__PURE__*/styled(Box).withConfig({
  displayName: "NewProductTile__NewProductTileDescriptionBase",
  componentId: "cjudsg-2"
})(themeTextStyle(TextStyle.SMALL), css({
  color: Color.GREY_TONE_50,
  gridColumn: '1',
  gridRow: 'description',
  marginTop: Space.S_4,
  maxWidth: rem(215)
}));

var NewProductTileDescription = function NewProductTileDescription(props) {
  var id = useAccessibleId();
  return /*#__PURE__*/React.createElement(NewProductTileDescriptionBase, _extends({
    id: getDescriptionId(id)
  }, props));
};

var NewProductTileImage = /*#__PURE__*/styled(Image).withConfig({
  displayName: "NewProductTile__NewProductTileImage",
  componentId: "cjudsg-3"
})(css({
  gridColumn: 'image',
  gridRow: '1 / last-line',
  backgroundPosition: 'right center'
}));
NewProductTileImage.defaultProps = {
  role: 'presentation',
  variant: ImageVariant.BACKGROUND
};
var StyledWidget = /*#__PURE__*/styled(Widget).withConfig({
  displayName: "NewProductTile__StyledWidget",
  componentId: "cjudsg-4"
})(function (_ref) {
  var disabled = _ref.disabled;
  return css({
    position: 'relative',
    display: 'grid',
    paddingLeft: Space.S_16,
    gridTemplateColumns: "minmax(0, 1fr) [image] " + IMAGE_WIDTH,
    gridTemplateRows: '16px [avatar] auto [title] 1fr [description] auto 16px [last-line]',
    gridAutoFlow: 'column',
    columnGap: Space.S_8,
    bg: Color.WIDGET_BACKGROUND,
    '> *': {
      opacity: disabled ? 0.5 : 1
    }
  });
}, variant({
  variants: (_variants = {}, _variants[NewProductTileVariant.LARGE] = {
    minHeight: rem(180)
  }, _variants[NewProductTileVariant.SMALL] = {
    minHeight: rem(98)
  }, _variants)
}));

var NewProductTileBase = function NewProductTileBase(props) {
  return /*#__PURE__*/React.createElement(AccessibleId, null, function (_ref2) {
    var id = _ref2.id;
    return /*#__PURE__*/React.createElement(StyledWidget, _extends({
      "aria-labelledby": getLabelId(id),
      "aria-describedby": getDescriptionId(id)
    }, props));
  });
};

NewProductTileBase.defaultProps = {
  role: 'group',
  variant: NewProductTileVariant.LARGE
};
export var NewProductTile = Object.assign(NewProductTileBase, {
  Avatar: NewProductTileAvatar,
  Description: NewProductTileDescription,
  Image: NewProductTileImage,
  Title: NewProductTileTitle
});