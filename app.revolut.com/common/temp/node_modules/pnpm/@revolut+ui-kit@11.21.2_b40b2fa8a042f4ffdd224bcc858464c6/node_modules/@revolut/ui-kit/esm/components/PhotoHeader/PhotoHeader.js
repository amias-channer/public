/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

var _Object$assign;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React, { createContext, useContext } from 'react';
import createSlots from 'nano-slots';
import styled, { ThemeProvider } from 'styled-components';
import { Color, Radius, Space, TextStyle } from "../../constants";
import { Box } from "../Box";
import { Flex } from "../Flex";
import { Text } from "../Text";
import { Status } from "../Status";
import { NavBar } from "../NavBar";
import { getColorFromString } from "../../utils/getColorFromString";
import { useContainsChildWithTag } from "../../hooks";
var AVATAR_TAG = '__photo__header__avatar__tag__';
export var PhotoHeaderSlot = {
  BACK_BUTTON: 'photo-header-back-button',
  ACTIONS: 'photo-header-actions',
  FOOTER: 'photo-header-footer'
};
var PhotoHeaderSlotsContext = createSlots();
var PhotoHeaderContext = /*#__PURE__*/createContext(false);
var Wrapper = /*#__PURE__*/styled(Flex).withConfig({
  displayName: "PhotoHeader__Wrapper",
  componentId: "sc-1ay69yp-0"
})(function (_ref) {
  var image = _ref.image,
      theme = _ref.theme;
  return {
    background: "\n    linear-gradient(180deg, rgba(0,0,0,0) 0%, rgba(0,0,0,0.5) 100%),\n    " + (image ? "url(" + image + ")," : '') + "\n    linear-gradient(rgba(255,255,255,0.8), rgba(255,255,255,0.8))",
    backgroundColor: theme.colors[getColorFromString(image)],
    backgroundPosition: 'center',
    backgroundSize: 'cover'
  };
});
export var PhotoHeaderBase = function PhotoHeaderBase(_ref2) {
  var children = _ref2.children,
      rest = _objectWithoutPropertiesLoose(_ref2, ["children"]);

  var hasAvatar = useContainsChildWithTag(children, AVATAR_TAG);
  return /*#__PURE__*/React.createElement(PhotoHeaderContext.Provider, {
    value: hasAvatar
  }, /*#__PURE__*/React.createElement(ThemeProvider, {
    theme: {
      isPhotoHeader: true
    }
  }, /*#__PURE__*/React.createElement(PhotoHeaderSlotsContext.Provider, null, /*#__PURE__*/React.createElement(Wrapper, _extends({
    px: Space.S_16,
    pb: Space.S_24,
    pt: [Space.NONE, null, Space.S_20],
    width: "100%",
    height: "321px",
    flexDirection: "column",
    justifyContent: "space-between",
    radius: [null, null, Radius.WIDGET]
  }, rest), /*#__PURE__*/React.createElement(NavBar, {
    color: Color.WHITE
  }, /*#__PURE__*/React.createElement(PhotoHeaderSlotsContext.Slot, {
    name: PhotoHeaderSlot.BACK_BUTTON
  }), /*#__PURE__*/React.createElement(PhotoHeaderSlotsContext.Slot, {
    name: PhotoHeaderSlot.ACTIONS
  })), /*#__PURE__*/React.createElement(Box, null, /*#__PURE__*/React.createElement(Box, {
    px: Space.S_8
  }, children), /*#__PURE__*/React.createElement(PhotoHeaderSlotsContext.Slot, {
    name: PhotoHeaderSlot.FOOTER
  }))))));
};

var PhotoHeaderAvatar = function PhotoHeaderAvatar(_ref3) {
  var children = _ref3.children;
  return /*#__PURE__*/React.createElement(React.Fragment, null, children);
};

var PhotoHeaderStatus = function PhotoHeaderStatus(props) {
  return /*#__PURE__*/React.createElement(Box, {
    mt: Space.S_20
  }, /*#__PURE__*/React.createElement(Status, _extends({
    color: Color.WHITE_80
  }, props)));
};

var PhotoHeaderTitle = function PhotoHeaderTitle(props) {
  var hasAvatar = useContext(PhotoHeaderContext);
  return /*#__PURE__*/React.createElement(Text, _extends({
    mt: Space.S_8,
    lineClamp: hasAvatar ? 2 : 3,
    variant: TextStyle.H1,
    color: Color.WHITE,
    use: "div"
  }, props));
};

var PhotoHeaderBackButton = function PhotoHeaderBackButton(props) {
  return /*#__PURE__*/React.createElement(PhotoHeaderSlotsContext.Fill, {
    name: PhotoHeaderSlot.BACK_BUTTON
  }, /*#__PURE__*/React.createElement(NavBar.BackButton, props));
};

var PhotoHeaderActions = function PhotoHeaderActions(props) {
  return /*#__PURE__*/React.createElement(PhotoHeaderSlotsContext.Fill, {
    name: PhotoHeaderSlot.ACTIONS
  }, /*#__PURE__*/React.createElement(NavBar.Actions, props));
};

var PhotoHeaderFooter = function PhotoHeaderFooter(_ref4) {
  var children = _ref4.children;
  return /*#__PURE__*/React.createElement(PhotoHeaderSlotsContext.Fill, {
    name: PhotoHeaderSlot.FOOTER
  }, children && /*#__PURE__*/React.createElement(Box, {
    mt: Space.S_16
  }, children));
};

var TaggedPhotoHeaderAvatar = Object.assign(PhotoHeaderAvatar, (_Object$assign = {}, _Object$assign[AVATAR_TAG] = true, _Object$assign));
export var PhotoHeader = Object.assign(PhotoHeaderBase, {
  Avatar: TaggedPhotoHeaderAvatar,
  Status: PhotoHeaderStatus,
  Title: PhotoHeaderTitle,
  BackButton: PhotoHeaderBackButton,
  Actions: PhotoHeaderActions,
  Footer: PhotoHeaderFooter
});