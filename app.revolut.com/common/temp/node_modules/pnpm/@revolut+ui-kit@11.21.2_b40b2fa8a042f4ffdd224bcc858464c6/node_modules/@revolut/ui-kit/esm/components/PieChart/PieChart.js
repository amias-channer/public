/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

var _marginX;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import { useTheme } from 'styled-components';
import { Pie, arc as arcPath } from '@visx/shape';
import { Group } from '@visx/group';
import { themeColor } from "../../utils";
import { Color } from "../../constants";
import { Box } from "../Box";
import { EMPTY_SPACE_SIZE, GRAPH_HEIGHT, GRAPH_WIDTH, INNER_PIE_SIZE, PIE_OPACITY, PIE_SIZE } from "./constants";
import { Label } from "./Label";
import { Title } from "./Title";
import { PieChartVariant } from "./variants";
var marginX = (_marginX = {}, _marginX[PieChartVariant.LARGE] = 'auto', _marginX[PieChartVariant.SMALL] = undefined, _marginX);

var pieValue = function pieValue(_ref) {
  var value = _ref.value;
  return value;
};

export var PieChart = function PieChart(_ref2) {
  var data = _ref2.data,
      _ref2$variant = _ref2.variant,
      variant = _ref2$variant === void 0 ? PieChartVariant.LARGE : _ref2$variant,
      rest = _objectWithoutPropertiesLoose(_ref2, ["data", "variant"]);

  var theme = useTheme();
  var width = GRAPH_WIDTH[variant];
  var height = GRAPH_HEIGHT[variant];
  var largePieRadius = PIE_SIZE[variant] / 2;
  var largePieInnerRadius = INNER_PIE_SIZE[variant] / 2;
  var smallPieRadius = INNER_PIE_SIZE[variant] / 2 + 1;
  var smallPieInnerRadius = EMPTY_SPACE_SIZE[variant] / 2;
  var centerX = width / 2;
  var centerY = height / 2;
  var labelColor = themeColor(Color.BACKGROUND)({
    theme: theme
  });
  var titleColor = themeColor(Color.GREY_TONE_50)({
    theme: theme
  });
  var smallPiePath = arcPath({
    outerRadius: smallPieRadius,
    innerRadius: smallPieInnerRadius
  });
  var labelPath = arcPath({
    outerRadius: 20 + height / 2,
    innerRadius: largePieRadius
  });
  var showLabels = variant === PieChartVariant.LARGE;
  return /*#__PURE__*/React.createElement(Box, _extends({
    use: "svg",
    display: "block",
    mx: marginX[variant],
    width: width,
    height: height
  }, rest), /*#__PURE__*/React.createElement(Group, {
    top: centerY,
    left: centerX
  }, /*#__PURE__*/React.createElement(Pie, {
    data: data,
    pieSort: null,
    pieValue: pieValue,
    outerRadius: largePieRadius,
    innerRadius: largePieInnerRadius
  }, function (pie) {
    return pie.arcs.map(function (arc, index) {
      var _pie$path, _smallPiePath;

      var _arc$data = arc.data,
          title = _arc$data.title,
          color = _arc$data.color,
          label = _arc$data.label;
      var hasSpaceForLabel = arc.endAngle - arc.startAngle >= 0.1;

      var _pie$path$centroid = pie.path.centroid(arc),
          valueX = _pie$path$centroid[0],
          valueY = _pie$path$centroid[1];

      var _labelPath$centroid = labelPath.centroid(arc),
          labelX = _labelPath$centroid[0],
          labelY = _labelPath$centroid[1];

      var pieColor = themeColor(color)({
        theme: theme
      });
      return (
        /*#__PURE__*/
        // eslint-disable-next-line react/no-array-index-key
        React.createElement("g", {
          key: "arc-" + title + "-" + index
        }, /*#__PURE__*/React.createElement("path", {
          d: (_pie$path = pie.path(arc)) != null ? _pie$path : undefined,
          fill: pieColor,
          opacity: PIE_OPACITY
        }), /*#__PURE__*/React.createElement("path", {
          d: (_smallPiePath = smallPiePath(arc)) != null ? _smallPiePath : undefined,
          fill: pieColor
        }), showLabels && hasSpaceForLabel && label && /*#__PURE__*/React.createElement(Label, {
          x: valueX,
          y: valueY,
          fill: labelColor
        }, label), showLabels && title && /*#__PURE__*/React.createElement(Title, {
          x: labelX,
          y: labelY,
          fill: titleColor
        }, title))
      );
    });
  })));
};