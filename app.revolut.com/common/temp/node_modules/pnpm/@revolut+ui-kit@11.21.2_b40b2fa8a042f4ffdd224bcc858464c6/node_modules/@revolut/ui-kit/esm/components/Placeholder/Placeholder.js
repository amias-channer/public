/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

var _css;

import styled from 'styled-components';
import { css } from '@styled-system/css';
import { Color, Space, TextStyle } from "../../constants";
import { hasPaddingProps } from "../../utils";
import { Image } from "../Image";
import { Box } from "../Box";
import { Text } from "../Text";
import { Action } from "../Action";
var PlaceholderImage = /*#__PURE__*/styled(Image).withConfig({
  displayName: "Placeholder__PlaceholderImage",
  componentId: "sc-6giw82-0"
})({
  order: 1
});
PlaceholderImage.defaultProps = {
  role: 'presentation',
  maxWidth: 104,
  width: '100%'
};
var PlaceholderTitle = /*#__PURE__*/styled(Text).withConfig({
  displayName: "Placeholder__PlaceholderTitle",
  componentId: "sc-6giw82-1"
})({
  order: 2
});
PlaceholderTitle.defaultProps = {
  variant: TextStyle.TILE,
  color: Color.FOREGROUND
};
var PlaceholderDescription = /*#__PURE__*/styled(Text).withConfig({
  displayName: "Placeholder__PlaceholderDescription",
  componentId: "sc-6giw82-2"
})({
  order: 3
});
PlaceholderDescription.defaultProps = {
  variant: TextStyle.CAPTION,
  color: Color.GREY_TONE_50
};
var PlaceholderAction = /*#__PURE__*/styled(Action).withConfig({
  displayName: "Placeholder__PlaceholderAction",
  componentId: "sc-6giw82-3"
})({
  order: 4
});

var paddingAttrs = function paddingAttrs(props) {
  return hasPaddingProps(props) ? {} : {
    pt: Space.S_8,
    pb: Space.S_24,
    px: Space.S_16
  };
};

var PlaceholderContainer = /*#__PURE__*/styled(Box).attrs(paddingAttrs).withConfig({
  displayName: "Placeholder__PlaceholderContainer",
  componentId: "sc-6giw82-4"
})(css({
  display: 'grid',
  gridAutoFlow: 'row',
  placeItems: 'center',
  textAlign: 'center'
}), css((_css = {
  '& > *': {
    marginTop: Space.S_16
  },
  '*:first-child': {
    marginTop: Space.NONE
  }
}, _css[PlaceholderTitle + " + " + PlaceholderDescription] = {
  marginTop: Space.S_8
}, _css)));
export var Placeholder = Object.assign(PlaceholderContainer, {
  Action: PlaceholderAction,
  Description: PlaceholderDescription,
  Image: PlaceholderImage,
  Title: PlaceholderTitle
});