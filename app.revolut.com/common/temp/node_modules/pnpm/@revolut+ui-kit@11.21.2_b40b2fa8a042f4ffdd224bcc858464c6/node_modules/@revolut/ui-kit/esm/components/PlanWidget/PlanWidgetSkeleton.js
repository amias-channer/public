/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

var _PlanWidgetVariant$SM, _variants;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import { rem, rgba } from 'polished';
import React from 'react';
import styled from 'styled-components';
import { variant } from 'styled-system';
import { themeColor } from "../../utils";
import { Color, Space } from "../../constants";
import { Skeleton } from "../Skeleton";
import { PlanWidget } from "./PlanWidget";
import { PlanWidgetVariant } from "./variants";
var GRADIENT = 'linear-gradient(220deg, rgba(128,156,182,0.2) 0%, rgba(128,92,245, 0.2) 100%)';
var TextSkeleton = /*#__PURE__*/styled(Skeleton).withConfig({
  displayName: "PlanWidgetSkeleton__TextSkeleton",
  componentId: "sc-175icui-0"
})(function (_ref) {
  var theme = _ref.theme;
  return {
    backgroundColor: rgba(themeColor(Color.BACKGROUND)({
      theme: theme
    }), 0.5)
  };
});
var PlanWidgetTitleSkeletonInner = /*#__PURE__*/styled(TextSkeleton).withConfig({
  displayName: "PlanWidgetSkeleton__PlanWidgetTitleSkeletonInner",
  componentId: "sc-175icui-1"
})([""]);

var PlanWidgetTitleSkeleton = function PlanWidgetTitleSkeleton() {
  return /*#__PURE__*/React.createElement(PlanWidget.Title, null, /*#__PURE__*/React.createElement(PlanWidgetTitleSkeletonInner, {
    height: rem(24),
    width: rem(160)
  }));
};

var PlanWidgetDescriptionSkeletonInner = /*#__PURE__*/styled(TextSkeleton).withConfig({
  displayName: "PlanWidgetSkeleton__PlanWidgetDescriptionSkeletonInner",
  componentId: "sc-175icui-2"
})([""]);

var PlanWidgetDescriptionSkeleton = function PlanWidgetDescriptionSkeleton() {
  return /*#__PURE__*/React.createElement(PlanWidget.Description, null, /*#__PURE__*/React.createElement(PlanWidgetDescriptionSkeletonInner, {
    height: rem(16),
    width: rem(88)
  }), /*#__PURE__*/React.createElement(PlanWidgetDescriptionSkeletonInner, {
    mt: Space.S_8,
    height: rem(16),
    width: rem(136)
  }));
};

var PlanWidgetActionSkeletonInner = /*#__PURE__*/styled(TextSkeleton).withConfig({
  displayName: "PlanWidgetSkeleton__PlanWidgetActionSkeletonInner",
  componentId: "sc-175icui-3"
})([""]);

var PlanWidgetActionSkeleton = function PlanWidgetActionSkeleton() {
  return /*#__PURE__*/React.createElement(PlanWidget.Action, null, /*#__PURE__*/React.createElement(PlanWidgetActionSkeletonInner, {
    height: rem(24),
    width: rem(80)
  }));
};

export var PlanWidgetSkeletonLayout = function PlanWidgetSkeletonLayout(_ref2) {
  var children = _ref2.children,
      rest = _objectWithoutPropertiesLoose(_ref2, ["children"]);

  return /*#__PURE__*/React.createElement(PlanWidget, _extends({
    role: "presentation"
  }, rest), children != null ? children : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(PlanWidgetSkeleton.Title, null), /*#__PURE__*/React.createElement(PlanWidgetSkeleton.Description, null), /*#__PURE__*/React.createElement(PlanWidgetSkeleton.Action, null)));
};
export var PlanWidgetSkeleton = Object.assign(styled(PlanWidgetSkeletonLayout).withConfig({
  displayName: "PlanWidgetSkeleton",
  componentId: "sc-175icui-4"
})(variant({
  variants: (_variants = {}, _variants[PlanWidgetVariant.LARGE] = {
    background: GRADIENT
  }, _variants[PlanWidgetVariant.SMALL] = (_PlanWidgetVariant$SM = {}, _PlanWidgetVariant$SM[PlanWidgetActionSkeletonInner] = {
    backgroundColor: Color.BLUE_10
  }, _PlanWidgetVariant$SM[PlanWidgetTitleSkeletonInner] = {
    backgroundColor: Color.GREY_TONE_5
  }, _PlanWidgetVariant$SM[PlanWidgetDescriptionSkeletonInner] = {
    backgroundColor: Color.GREY_TONE_5,
    '&:last-child': {
      display: 'none'
    }
  }, _PlanWidgetVariant$SM), _variants)
})), {
  Title: PlanWidgetTitleSkeleton,
  Description: PlanWidgetDescriptionSkeleton,
  Action: PlanWidgetActionSkeleton
});
PlanWidgetSkeleton.defaultProps = {
  variant: PlanWidgetVariant.LARGE
};