/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

import { color, variant } from 'styled-system';
import styled from 'styled-components';
import { css } from '@styled-system/css';
import { rem } from 'polished';
import { Color, Radius } from "../../constants";
import { themeColor } from "../../utils";
import { ButtonBase } from "../ButtonBase";
import { PlanWidgetTitleBase } from "./PlanWidgetTitle";
import { PlanWidgetDescriptionBase } from "./PlanWidgetDescription";
import { PlanWidgetVariant } from "./variants";
// Component is generic and it's assignable to button
// We set element to `div` in default props
// @ts-expect-error
export var PlanWidgetWrapper = /*#__PURE__*/styled(ButtonBase).withConfig({
  displayName: "PlanWidgetWrapper",
  componentId: "i0xfyy-0"
})(css({
  position: 'relative',
  display: 'block',
  overflow: 'hidden',
  width: '100%',
  borderRadius: Radius.WIDGET
}), color, function (props) {
  var _variants;

  return variant({
    variants: (_variants = {}, _variants[PlanWidgetVariant.LARGE] = {
      height: rem(240)
    }, _variants[PlanWidgetVariant.SMALL] = {
      height: rem(126)
    }, _variants)
  })(props);
}, function (props) {
  var _ref;

  return props.hasMediaContent ? (_ref = {}, _ref[PlanWidgetTitleBase] = {
    color: themeColor(Color.WHITE)(props)
  }, _ref[PlanWidgetDescriptionBase] = {
    color: themeColor(Color.WHITE)(props),
    opacity: 0.8
  }, _ref) : {};
});