/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

var _HEADER_VARIANTS_MAP;

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import React from 'react';
import { Color, Space } from "../../constants";
import { useMessage } from "../../hooks";
import { Header } from "../Header";
import { HeaderVariant } from "../Header/variants";
import { getDescriptionId, getLabelId } from "../Header/utils";
import { useAccessibleId } from "../AccessibleId";
import { usePopupContext } from "./PopupContext";
import { PopupVariant } from "./variants";
var HEADER_VARIANTS_MAP = (_HEADER_VARIANTS_MAP = {}, _HEADER_VARIANTS_MAP[PopupVariant.MODAL_VIEW] = HeaderVariant.FORM, _HEADER_VARIANTS_MAP[PopupVariant.BOTTOM_SHEET] = HeaderVariant.BOTTOM_SHEET, _HEADER_VARIANTS_MAP[PopupVariant.RESULT] = null, _HEADER_VARIANTS_MAP[PopupVariant.DIALOG] = HeaderVariant.BOTTOM_SHEET, _HEADER_VARIANTS_MAP[PopupVariant.COLORFUL] = HeaderVariant.FORM, _HEADER_VARIANTS_MAP);
/** @deprecated use `HeaderProps` */

/** @deprecated use `Header` */
export function PopupHeader(props) {
  var popupVariant = usePopupContext();
  var headerVariant = popupVariant && HEADER_VARIANTS_MAP[popupVariant];

  if (headerVariant == null) {
    return null;
  }

  return /*#__PURE__*/React.createElement(Header, _extends({
    variant: headerVariant,
    top: {
      all: Space.N_16,
      md: Space.N_24
    },
    mt: {
      all: Space.N_16,
      md: Space.N_24
    },
    bg: "inherit"
  }, props));
}
/** @deprecated use `HeaderTitleProps` */

/** @deprecated use `Header.Title` */
export function PopupHeaderTitle(props) {
  var id = useAccessibleId();
  var popupVariant = usePopupContext();

  if (popupVariant === PopupVariant.RESULT) {
    return null;
  }

  return /*#__PURE__*/React.createElement(Header.Title, _extends({
    id: getLabelId(id)
  }, props));
}
/** @deprecated use `HeaderDescriptionProps` */

/** @deprecated use `Header.Description` */
export function PopupHeaderDescription(props) {
  var id = useAccessibleId();
  var popupVariant = usePopupContext();

  if (popupVariant === PopupVariant.RESULT) {
    return null;
  }

  return /*#__PURE__*/React.createElement(Header.Description, _extends({
    id: getDescriptionId(id),
    color: popupVariant === PopupVariant.COLORFUL ? null : Color.GREY_TONE_50
  }, props));
}

function useShouldRenderNavigation() {
  var variant = usePopupContext();
  return variant === PopupVariant.MODAL_VIEW || variant === PopupVariant.COLORFUL;
}
/** @deprecated use `HeaderCloseButtonProps` */


/** @deprecated use `Header.CloseButton` */
export function PopupHeaderCloseButton(_ref) {
  var ariaLabel = _ref['aria-label'],
      rest = _objectWithoutPropertiesLoose(_ref, ["aria-label"]);

  var m = useMessage();
  var shouldRender = useShouldRenderNavigation();
  return shouldRender ? /*#__PURE__*/React.createElement(Header.CloseButton, _extends({
    "aria-label": ariaLabel != null ? ariaLabel : m('action.close')
  }, rest)) : null;
}
/** @deprecated use `HeaderBackButtonProps` */

/** @deprecated use `Header.BackButton` */
export function PopupHeaderBackButton(_ref2) {
  var ariaLabel = _ref2['aria-label'],
      rest = _objectWithoutPropertiesLoose(_ref2, ["aria-label"]);

  var m = useMessage();
  var shouldRender = useShouldRenderNavigation();
  return shouldRender ? /*#__PURE__*/React.createElement(Header.BackButton, _extends({
    "aria-label": ariaLabel != null ? ariaLabel : m('action.back')
  }, rest)) : null;
}