/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/
import _styled2 from "styled-components";
import _styled from "styled-components";

var _css3;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import { css } from '@styled-system/css';
import styled from 'styled-components';
import * as Icons from '@revolut/icons';
import { Color, Space, TextStyle } from "../../constants";
import { isFunction, themeTextStyle } from "../../utils";
import { Box } from "../Box";
import { Bar } from "../Bar";
import { ButtonBase } from "../ButtonBase";
import { Ellipsis } from "../Ellipsis";
import { SubheaderBase } from "../Subheader";
import { Widget } from "../Widget";
import { Avatar } from "../Avatar";
var ProductWidgetHeader = /*#__PURE__*/styled(Box).withConfig({
  displayName: "ProductWidget__ProductWidgetHeader",
  componentId: "sc-8jib9z-0"
})(css({
  columnGap: Space.S_16,
  display: 'grid',
  gridAutoFlow: 'column',
  gridTemplateColumns: '1fr auto',
  paddingBottom: Space.S_16,
  paddingX: Space.S_16,
  position: 'relative'
}));
var ProductWidgetAvatar = /*#__PURE__*/styled(Box).withConfig({
  displayName: "ProductWidget__ProductWidgetAvatar",
  componentId: "sc-8jib9z-1"
})(css({
  display: 'flex',
  justifyContent: 'flex-end',
  paddingTop: Space.S_16
}));
var ProductWidgetTitleContainer = /*#__PURE__*/styled(Box).withConfig({
  displayName: "ProductWidget__ProductWidgetTitleContainer",
  componentId: "sc-8jib9z-2"
})(themeTextStyle(TextStyle.H2), css({
  gridColumn: 1,
  overflow: 'hidden',
  paddingTop: Space.S_16,
  // room for focus styles ~4px
  marginX: Space.N_4,
  paddingX: Space.S_4,
  marginBottom: Space.N_4,
  paddingBottom: Space.N_4
}));
var ProductWidgetTitleButton = /*#__PURE__*/styled(ButtonBase).withConfig({
  displayName: "ProductWidget__ProductWidgetTitleButton",
  componentId: "sc-8jib9z-3"
})({
  display: 'flex',
  alignItems: 'center',
  width: '100%'
});

var ProductWidgetTitle = function ProductWidgetTitle(_ref) {
  var _onClick = _ref.onClick,
      children = _ref.children,
      _ref$ellipsis = _ref.ellipsis,
      ellipsis = _ref$ellipsis === void 0 ? true : _ref$ellipsis,
      rest = _objectWithoutPropertiesLoose(_ref, ["onClick", "children", "ellipsis"]);

  var label = ellipsis ? /*#__PURE__*/React.createElement(Ellipsis, null, children) : children;
  return /*#__PURE__*/React.createElement(ProductWidgetTitleContainer, rest, isFunction(_onClick) ? /*#__PURE__*/React.createElement(ProductWidgetTitleButton, {
    onClick: function onClick(event) {
      _onClick(event);

      if (!event.defaultPrevented) event.stopPropagation();
    }
  }, label, /*#__PURE__*/React.createElement(Box, {
    use: "span",
    ml: Space.S_8
  }, /*#__PURE__*/React.createElement(Avatar, {
    size: 24,
    useIcon: Icons.ShevronDown
  }))) : label);
};

var ProductWidgetDescription = /*#__PURE__*/styled(Box).withConfig({
  displayName: "ProductWidget__ProductWidgetDescription",
  componentId: "sc-8jib9z-4"
})(themeTextStyle(TextStyle.CAPTION), css({
  color: Color.GREY_TONE_50,
  gridColumn: 1,
  overflow: 'hidden',
  textOverflow: 'ellipsis',
  whiteSpace: 'nowrap'
}));
/** @deprecated */

var _StyledBar = /*#__PURE__*/styled(Bar).withConfig({
  displayName: "ProductWidget___StyledBar",
  componentId: "sc-8jib9z-5"
})(["", ""], function (p) {
  return p._css;
});

/** @deprecated use `ProductWidget.Bar` */
var ProductWidgetActionBar = function ProductWidgetActionBar(props) {
  return /*#__PURE__*/React.createElement(_StyledBar, _extends({
    onClick: function onClick(event) {
      props.onClick == null ? void 0 : props.onClick(event);

      if (event.target !== event.currentTarget && !event.defaultPrevented) {
        event.stopPropagation();
      }
    }
  }, props, {
    _css: css({
      gridColumn: '1 / span 2',
      overflow: 'auto',
      paddingTop: Space.S_16
    })
  }));
};

var _StyledBox = /*#__PURE__*/styled(Box).withConfig({
  displayName: "ProductWidget___StyledBox",
  componentId: "sc-8jib9z-6"
})(["", ""], function (p) {
  return p._css2;
});

var ProductWidgetBar = function ProductWidgetBar(props) {
  return /*#__PURE__*/React.createElement(_StyledBox, _extends({
    onClick: function onClick(event) {
      props.onClick == null ? void 0 : props.onClick(event);

      if (event.target !== event.currentTarget && !event.defaultPrevented) {
        event.stopPropagation();
      }
    }
  }, props, {
    _css2: css({
      gridColumn: '1 / span 2',
      // room for focus styles ~4px
      marginX: Space.N_4,
      marginBottom: Space.N_4,
      paddingX: Space.S_4,
      paddingTop: Space.S_16,
      paddingBottom: Space.S_4,
      overflow: 'hidden'
    })
  }));
};

var ProductWidgetBase = /*#__PURE__*/styled(Widget).withConfig({
  displayName: "ProductWidget__ProductWidgetBase",
  componentId: "sc-8jib9z-7"
})(css((_css3 = {}, _css3[SubheaderBase] = {
  paddingX: Space.S_16
}, _css3)));
export var ProductWidget = Object.assign(ProductWidgetBase, {
  Bar: ProductWidgetBar,
  Avatar: ProductWidgetAvatar,
  Description: ProductWidgetDescription,
  Header: ProductWidgetHeader,
  Title: ProductWidgetTitle,

  /** @deprecated  use `ProductWidget.Bar` */
  ActionBar: ProductWidgetActionBar
});