/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import styled from 'styled-components';
import { css } from '@styled-system/css';
import { Color, Radius, Size, Space, TextStyle } from "../../constants";
import { Box } from "../Box";
import { Text } from "../Text";
var ProgressStyled = /*#__PURE__*/styled(Box).withConfig({
  displayName: "Progress__ProgressStyled",
  componentId: "sc-1rsmbko-0"
})(function (_ref) {
  var _css;

  var _ref$bg = _ref.bg,
      bg = _ref$bg === void 0 ? Color.GREY_TONE_20 : _ref$bg,
      _ref$color = _ref.color,
      color = _ref$color === void 0 ? Color.PRIMARY : _ref$color,
      _ref$value = _ref.value,
      value = _ref$value === void 0 ? 0 : _ref$value;
  return css((_css = {
    backgroundColor: 'transparent',
    display: 'grid',
    gap: Space.S_8,
    gridTemplateColumns: '1fr auto',
    position: 'relative',
    '::before': {
      backgroundColor: bg,
      borderRadius: Radius.ROUND,
      content: "''",
      display: 'block',
      gridColumn: '1 / span 2',
      gridRow: 1,
      height: Size.S_4,
      width: '100%'
    },
    '::after': {
      backgroundColor: color,
      borderRadius: Radius.ROUND,
      content: "''",
      display: 'block',
      height: Size.S_4,
      left: 0,
      position: 'absolute',
      top: 0,
      width: 100 * value + "%"
    }
  }, _css[ProgressLabel + ":nth-of-type(even)"] = {
    textAlign: 'right'
  }, _css[ProgressLabel + ":last-of-type:not(:nth-of-type(even))"] = {
    gridColumn: '1 / span 2'
  }, _css));
});
export var Progress = function Progress(_ref2) {
  var _ref2$value = _ref2.value,
      value = _ref2$value === void 0 ? 0 : _ref2$value,
      rest = _objectWithoutPropertiesLoose(_ref2, ["value"]);

  return /*#__PURE__*/React.createElement(ProgressStyled, _extends({
    "aria-valuemax": 1,
    "aria-valuemin": 0,
    "aria-valuenow": value,
    "aria-valuetext": 100 * value + "%",
    role: "progressbar",
    value: value
  }, rest));
};
// Converts the component to styled to be able select it in parent CSS
var ProgressLabel = /*#__PURE__*/styled(Text).withConfig({
  displayName: "Progress__ProgressLabel",
  componentId: "sc-1rsmbko-1"
})([""]);
ProgressLabel.defaultProps = {
  variant: TextStyle.SMALL,
  color: Color.GREY_TONE_50
};
Progress.Label = ProgressLabel;