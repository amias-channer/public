/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

var _variants, _variants2, _variants3, _variants4, _variants5;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import styled from 'styled-components';
import { css } from '@styled-system/css';
import { variant as styledSystemVariant } from 'styled-system';
import { Color, Radius, Space, TextStyle } from "../../constants";
import { themeTextStyle } from "../../utils";
import { Box } from "../Box";
import { ProgressStepContext, ProgressStepsContext, useProgressStepContext, useProgressStepsContext } from "./ProgressStepsContext";
import { ProgressStepsVariant } from "./variants";
var ProgressStepsContainer = /*#__PURE__*/styled(Box).withConfig({
  displayName: "ProgressSteps__ProgressStepsContainer",
  componentId: "sc-6hfpxm-0"
})({
  display: 'grid'
}, styledSystemVariant({
  variants: (_variants = {}, _variants[ProgressStepsVariant.DEFAULT] = {
    columnGap: Space.S_6,
    gridAutoColumns: '1fr',
    gridAutoFlow: 'column'
  }, _variants[ProgressStepsVariant.VERTICAL] = {
    gridAutoFlow: 'row',
    rowGap: Space.S_8
  }, _variants)
}));
export var ProgressSteps = function ProgressSteps(_ref) {
  var _ref$variant = _ref.variant,
      variant = _ref$variant === void 0 ? ProgressStepsVariant.DEFAULT : _ref$variant,
      rest = _objectWithoutPropertiesLoose(_ref, ["variant"]);

  return /*#__PURE__*/React.createElement(ProgressStepsContext.Provider, {
    value: variant
  }, /*#__PURE__*/React.createElement(ProgressStepsContainer, _extends({}, rest, {
    variant: variant
  })));
};
var ProgressStepContainer = /*#__PURE__*/styled(Box).withConfig({
  displayName: "ProgressSteps__ProgressStepContainer",
  componentId: "sc-6hfpxm-1"
})(function (_ref2) {
  var _ref2$color = _ref2.color,
      color = _ref2$color === void 0 ? Color.PRIMARY : _ref2$color,
      done = _ref2.done;
  return css({
    position: 'relative',
    '::before': {
      backgroundColor: done ? color : Color.GREY_TONE_10,
      borderRadius: Radius.ROUND,
      content: '""',
      display: 'block'
    }
  });
}, styledSystemVariant({
  variants: (_variants2 = {}, _variants2[ProgressStepsVariant.DEFAULT] = {
    display: 'flex',
    flexFlow: 'column',
    minWidth: 0,
    textAlign: 'center',
    '::before': {
      height: Space.S_4,
      marginBottom: Space.S_16,
      width: '100%'
    }
  }, _variants2[ProgressStepsVariant.VERTICAL] = {
    columnGap: Space.S_20,
    display: 'grid',
    gridTemplateColumns: 'minmax(80px, 15%) auto 1fr',
    paddingY: Space.S_16,
    '::before': {
      bottom: Space.N_16,
      gridColumn: 2,
      gridRow: '1 / span 2',
      left: Space.N_2,
      position: 'absolute',
      top: Space.N_16,
      width: Space.S_4
    }
  }, _variants2)
}));
export var ProgressStep = function ProgressStep(_ref3) {
  var _ref3$done = _ref3.done,
      done = _ref3$done === void 0 ? false : _ref3$done,
      rest = _objectWithoutPropertiesLoose(_ref3, ["done"]);

  var variant = useProgressStepsContext();
  return /*#__PURE__*/React.createElement(ProgressStepContext.Provider, {
    value: done
  }, /*#__PURE__*/React.createElement(ProgressStepContainer, _extends({}, rest, {
    done: done,
    variant: variant
  })));
};
var ProgressStepCaptionContainer = /*#__PURE__*/styled(Box).withConfig({
  displayName: "ProgressSteps__ProgressStepCaptionContainer",
  componentId: "sc-6hfpxm-2"
})(themeTextStyle(TextStyle.CAPTION), css({
  color: Color.GREY_TONE_50,
  minWidth: 0,
  overflow: 'hidden',
  textAlign: 'center',
  textOverflow: 'ellipsis'
}), styledSystemVariant({
  variants: (_variants3 = {}, _variants3[ProgressStepsVariant.DEFAULT] = {
    order: 3
  }, _variants3[ProgressStepsVariant.VERTICAL] = {
    alignSelf: 'center',
    gridColumn: 1,
    gridRow: '1 / span 2'
  }, _variants3)
}));

var ProgressStepCaption = function ProgressStepCaption(props) {
  var variant = useProgressStepsContext();
  return /*#__PURE__*/React.createElement(ProgressStepCaptionContainer, _extends({}, props, {
    variant: variant
  }));
};

ProgressStep.Caption = ProgressStepCaption;
var ProgressStepTitleContainer = /*#__PURE__*/styled(Box).withConfig({
  displayName: "ProgressSteps__ProgressStepTitleContainer",
  componentId: "sc-6hfpxm-3"
})(themeTextStyle(TextStyle.H6), function (_ref4) {
  var done = _ref4.done;
  return css({
    color: done ? Color.FOREGROUND : Color.GREY_TONE_50,
    minWidth: 0,
    overflow: 'hidden',
    textOverflow: 'ellipsis'
  });
}, styledSystemVariant({
  variants: (_variants4 = {}, _variants4[ProgressStepsVariant.DEFAULT] = {
    order: 1
  }, _variants4[ProgressStepsVariant.VERTICAL] = {
    alignSelf: 'center',
    gridColumn: 3,
    gridRow: '1'
  }, _variants4)
}));

var ProgressStepTitle = function ProgressStepTitle(props) {
  var variant = useProgressStepsContext();
  var done = useProgressStepContext();
  return /*#__PURE__*/React.createElement(ProgressStepTitleContainer, _extends({}, props, {
    variant: variant,
    done: done
  }));
};

ProgressStep.Title = ProgressStepTitle;
var ProgressStepDescriptionContainer = /*#__PURE__*/styled(Box).withConfig({
  displayName: "ProgressSteps__ProgressStepDescriptionContainer",
  componentId: "sc-6hfpxm-4"
})(themeTextStyle(TextStyle.CAPTION), css({
  color: Color.GREY_TONE_50,
  minWidth: 0,
  overflow: 'hidden',
  textOverflow: 'ellipsis'
}), styledSystemVariant({
  variants: (_variants5 = {}, _variants5[ProgressStepsVariant.DEFAULT] = {
    order: 2
  }, _variants5[ProgressStepsVariant.VERTICAL] = {
    alignSelf: 'center',
    gridColumn: 3,
    gridRow: 2
  }, _variants5)
}));

var ProgressStepDescription = function ProgressStepDescription(props) {
  var variant = useProgressStepsContext();
  return /*#__PURE__*/React.createElement(ProgressStepDescriptionContainer, _extends({}, props, {
    variant: variant
  }));
};

ProgressStep.Description = ProgressStepDescription;