/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

var _css;

import styled from 'styled-components';
import { css } from '@styled-system/css';
import { Space } from "../../constants";
import { scrollbar } from "../../styles";
import { themeSpace } from "../../utils";
import { Flex } from "../Flex";
import { CarouselItemPlaceholder, CarouselRadiusClip, CarouselScroll, CarouselSpace } from "../Carousel/styles";
import { ScrollButtonPlaceholder, ScrollLeftButton, ScrollRightButton } from "../SliderBox/styles";
import { StickyHeader } from "../Header/StickyHeader";
import { HeaderStickyWrapper } from "../Header/HeaderStickyWrapper";
import { ScrollActions } from "./ScrollActions";
var ScrollBase = /*#__PURE__*/styled(Flex).withConfig({
  displayName: "Scroll__ScrollBase",
  componentId: "e49ue5-0"
})(css((_css = {
  '> *': {
    flex: '0 0 auto'
  }
}, _css[CarouselRadiusClip] = {
  borderRadius: 'unset',
  marginX: [Space.N_16, null, Space.N_24],
  paddingX: [Space.S_16, null, Space.S_24]
}, _css[CarouselSpace] = {
  marginX: [Space.N_16, null, Space.N_24]
}, _css[CarouselScroll] = {
  paddingX: [Space.S_12, null, Space.S_16],
  scrollPaddingLeft: function scrollPaddingLeft(theme) {
    return [themeSpace(Space.S_12)({
      theme: theme
    }), null, themeSpace(Space.S_16)({
      theme: theme
    })];
  }
}, _css[ScrollButtonPlaceholder] = {
  width: Space.NONE
}, _css[CarouselItemPlaceholder] = {
  display: 'block'
}, _css[ScrollLeftButton] = {
  transform: ['translate(-50%, -50%)', null, 'translate(-75%, -50%)']
}, _css[ScrollRightButton] = {
  transform: ['translate(50%, -50%)', null, 'translate(75%, -50%)']
}, _css[StickyHeader] = {
  top: [Space.N_16, null, Space.N_24],
  mt: [Space.N_16, null, Space.N_24],
  mx: [Space.N_16, null, Space.N_24],
  px: [Space.S_16, null, Space.S_24],
  order: -1
}, _css[HeaderStickyWrapper] = {
  top: [Space.S_40, null, Space.S_32],
  mx: [Space.N_16, null, Space.N_24],
  px: [Space.S_16, null, Space.S_24]
}, _css)), scrollbar(Space.S_16));
ScrollBase.defaultProps = {
  flexDirection: 'column',
  overflow: 'auto'
};

/** @private */
export var Scroll = Object.assign(ScrollBase, {
  Actions: ScrollActions
});