/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

import React from 'react';
import styled from 'styled-components';
import { css } from '@styled-system/css';
import { themeColor, themeRadius, themeTransition } from "../../utils";
import { Color, Radius, Space, Transition } from "../../constants";
import { AccessibleId } from "../AccessibleId";
import { Absolute } from "../Position";
import { SideNavItemLayout } from "./SideNavItemLayout";
var DropAreaContainer = /*#__PURE__*/styled(Absolute).withConfig({
  displayName: "SideNavDropArea__DropAreaContainer",
  componentId: "sc-123vd01-0"
})(["top:0;right:0;bottom:0;left:0;color:", ";transition:", ";opacity:", ";pointer-events:", ";"], themeColor(Color.BLUE), themeTransition(Transition.OPACITY), function (props) {
  return props.active ? 1 : 0;
}, function (props) {
  return props.active ? 'auto' : 'none';
});
var hoverStyles = css({
  opacity: 0.5,
  top: Space.N_4,
  right: Space.N_4,
  bottom: Space.N_4,
  left: Space.N_4
});
var DropAreaBase = /*#__PURE__*/styled(DropAreaContainer).withConfig({
  displayName: "SideNavDropArea__DropAreaBase",
  componentId: "sc-123vd01-1"
})(["border:1px dashed ", ";border-radius:", ";transition:", ",", ";", ":hover{", "}"], themeColor(Color.BLUE), themeRadius(Radius.MENU_TAB), themeTransition(Transition.POSITION), themeTransition(Transition.OPACITY), function (props) {
  return props.over ? hoverStyles : undefined;
}, hoverStyles);
export var SideNavDropArea = function SideNavDropArea(_ref) {
  var active = _ref.active,
      over = _ref.over,
      useIcon = _ref.useIcon,
      children = _ref.children;
  var hasContent = useIcon || children;
  return /*#__PURE__*/React.createElement(AccessibleId, null, /*#__PURE__*/React.createElement(DropAreaContainer, {
    active: active,
    bg: hasContent ? Color.LAYOUT_BACKGROUND : undefined
  }, hasContent && /*#__PURE__*/React.createElement(SideNavItemLayout, {
    useIcon: useIcon
  }, children), /*#__PURE__*/React.createElement(DropAreaBase, {
    active: active,
    over: over
  })));
};