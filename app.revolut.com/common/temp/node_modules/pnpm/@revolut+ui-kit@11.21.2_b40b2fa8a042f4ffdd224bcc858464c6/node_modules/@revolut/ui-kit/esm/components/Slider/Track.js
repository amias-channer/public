/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import styled from 'styled-components';
import { rem } from 'polished';
import { Color } from "../../constants";
import { Flex } from '..';
import { THUMB_SIZE, TRACK_SIZE } from "./constants";
var Wrapper = /*#__PURE__*/styled(Flex).attrs(function (_ref) {
  var _ref$left = _ref.left,
      left = _ref$left === void 0 ? '0%' : _ref$left,
      _ref$right = _ref.right,
      right = _ref$right === void 0 ? '0%' : _ref$right;
  return {
    style: {
      left: left,
      right: right
    }
  };
}).withConfig({
  displayName: "Track__Wrapper",
  componentId: "sc-18ya07t-0"
})(["align-items:center;position:absolute;height:", ";cursor:pointer;"], rem(THUMB_SIZE));
var Inner = /*#__PURE__*/styled(Flex).withConfig({
  displayName: "Track__Inner",
  componentId: "sc-18ya07t-1"
})(["border-radius:", ";width:100%;height:", ";"], function (_ref2) {
  var borderRadius = _ref2.borderRadius;
  return borderRadius;
}, rem(TRACK_SIZE));
export var Track = function Track(_ref3) {
  var rounded = _ref3.rounded,
      _ref3$bg = _ref3.bg,
      bg = _ref3$bg === void 0 ? Color.GREY_TONE_10 : _ref3$bg,
      rest = _objectWithoutPropertiesLoose(_ref3, ["rounded", "bg"]);

  var circular = "" + rem(TRACK_SIZE / 2);
  var left = rounded === 'left' ? circular : '0';
  var right = rounded === 'right' ? circular : '0';
  var borderRadius = left + " " + right + " " + right + " " + left;
  return /*#__PURE__*/React.createElement(Wrapper, rest, /*#__PURE__*/React.createElement(Inner, {
    bg: bg,
    borderRadius: borderRadius
  }));
};