/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import * as Icons from '@revolut/icons';
import { useMessage } from "../../hooks";
import { TransitionFade } from "../Transitions";
import { ScrollButtonPlaceholders } from "./ScrollButtonPlaceholders";
import { GradientLeft, GradientRight, ScrollLeftButton, ScrollRightButton, Wrapper } from "./styles";
/** @private */

/** @private */
export var SliderBox = function SliderBox(_ref) {
  var children = _ref.children,
      hasPrev = _ref.hasPrev,
      hasNext = _ref.hasNext,
      labelButtonPrev = _ref.labelButtonPrev,
      labelButtonNext = _ref.labelButtonNext,
      onPrevClick = _ref.onPrevClick,
      onNextClick = _ref.onNextClick,
      hideButtons = _ref.hideButtons,
      hideButtonsPreview = _ref.hideButtonsPreview,
      _ref$showGradient = _ref.showGradient,
      showGradient = _ref$showGradient === void 0 ? false : _ref$showGradient,
      _ref$showPlaceholders = _ref.showPlaceholders,
      showPlaceholders = _ref$showPlaceholders === void 0 ? true : _ref$showPlaceholders,
      rest = _objectWithoutPropertiesLoose(_ref, ["children", "hasPrev", "hasNext", "labelButtonPrev", "labelButtonNext", "onPrevClick", "onNextClick", "hideButtons", "hideButtonsPreview", "showGradient", "showPlaceholders"]);

  var m = useMessage();
  return /*#__PURE__*/React.createElement(Wrapper, rest, showPlaceholders && /*#__PURE__*/React.createElement(ScrollButtonPlaceholders, null), children, /*#__PURE__*/React.createElement(TransitionFade, {
    "in": hasPrev
  }, /*#__PURE__*/React.createElement("span", null, showGradient && /*#__PURE__*/React.createElement(GradientLeft, {
    hide: hideButtons
  }), /*#__PURE__*/React.createElement(ScrollLeftButton, {
    "aria-label": labelButtonPrev != null ? labelButtonPrev : m('action.prev'),
    onClick: onPrevClick,
    hide: hideButtons,
    hidePreview: hideButtonsPreview
  }, /*#__PURE__*/React.createElement(Icons.ShevronLeft, {
    size: 16
  })))), /*#__PURE__*/React.createElement(TransitionFade, {
    "in": hasNext
  }, /*#__PURE__*/React.createElement("span", null, showGradient && /*#__PURE__*/React.createElement(GradientRight, {
    hide: hideButtons
  }), /*#__PURE__*/React.createElement(ScrollRightButton, {
    "aria-label": labelButtonNext != null ? labelButtonNext : m('action.next'),
    onClick: onNextClick,
    hide: hideButtons,
    hidePreview: hideButtonsPreview
  }, /*#__PURE__*/React.createElement(Icons.ShevronRight, {
    size: 16
  })))));
};