/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import { Transition } from 'react-transition-group';
import styled, { keyframes } from 'styled-components';
import { Radius } from "../../constants";
import { addAnimationEndListener, animate } from "../Transitions/utils";
import { Absolute, Relative } from "../Position";
import { prop } from "../../styles";
var APPEAR_DURATION = 300;
var BLINK_DURATION = 2000;
var moveGradient = /*#__PURE__*/keyframes(["0%{transform:translate(-50%,-50%);}100%{transform:translate(50%,50%);}"]);
var Blink = /*#__PURE__*/styled(Absolute).withConfig({
  displayName: "TransitionSticker__Blink",
  componentId: "e30lc8-0"
})(["top:0;left:0;height:200%;width:200%;background-image:linear-gradient( -45deg,rgba(255,255,255,0) 35%,rgba(255,255,255,0.5) 50%,rgba(255,255,255,0) 65% );transform:translate(50%,50%);animation-name:", ";animation-duration:", ";animation-delay:", ";"], moveGradient, prop('duration', 0, 'ms'), prop('delay', 0, 'ms'));
export var TransitionSticker = function TransitionSticker(_ref) {
  var _ref$delay = _ref.delay,
      delay = _ref$delay === void 0 ? 0 : _ref$delay,
      _ref$duration = _ref.duration,
      duration = _ref$duration === void 0 ? APPEAR_DURATION : _ref$duration,
      _ref$easing = _ref.easing,
      easing = _ref$easing === void 0 ? 'linear' : _ref$easing,
      enterAnimation = _ref.enterAnimation,
      exitAnimation = _ref.exitAnimation,
      _ref$unmountOnExit = _ref.unmountOnExit,
      unmountOnExit = _ref$unmountOnExit === void 0 ? true : _ref$unmountOnExit,
      _ref$appear = _ref.appear,
      appear = _ref$appear === void 0 ? true : _ref$appear,
      children = _ref.children,
      inProp = _ref["in"],
      rest = _objectWithoutPropertiesLoose(_ref, ["delay", "duration", "easing", "enterAnimation", "exitAnimation", "unmountOnExit", "appear", "children", "in"]);

  return /*#__PURE__*/React.createElement(Transition, _extends({
    addEndListener: addAnimationEndListener,
    unmountOnExit: unmountOnExit,
    appear: appear,
    duration: APPEAR_DURATION,
    onEnter: function onEnter(node) {
      node.style.opacity = '0';
      node.style.scale = '0.9';
      return animate(_extends({
        targets: node,
        opacity: [0, 1],
        scale: [0.9, 1],
        duration: APPEAR_DURATION,
        delay: delay,
        easing: easing
      }, enterAnimation));
    },
    onExit: function onExit(node) {
      return animate(_extends({
        targets: node,
        opacity: [1, 0],
        scale: [1, 0.9],
        duration: APPEAR_DURATION,
        delay: delay,
        easing: easing
      }, exitAnimation));
    },
    "in": inProp
  }, rest), /*#__PURE__*/React.createElement(Relative, {
    width: "fit-content",
    overflow: "hidden",
    radius: Radius.WIDGET
  }, children, /*#__PURE__*/React.createElement(Blink, {
    duration: BLINK_DURATION
  })));
};