/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import styled from 'styled-components';
import * as Icons from '@revolut/icons';
import { Color, Space, UnifiedColorMode } from "../../constants";
import { ThemeProvider } from "../ThemeProvider";
import { Relative } from "../Position";
import { Video } from "../Video";
import { Text } from "../Text";
import { Flex } from "../Flex";
import { useSlidesContext } from "../StorySwitcher/SlidesContext";
import { StoryTitle } from "./StoryTitle";
import { StoryDescription } from "./StoryDescription";
import { StoryActions } from "./StoryActions";
import { StoryContent } from "./StoryContent";
import { StoryHeaderWrapper } from "./StoryHeaderWrapper";
import { StoryLayoutWrapper } from "./StoryLayoutWrapper";
import { StorySlots } from "./constants";
import { StoryVariant } from "./variants";
import { useStorySwitcherContext } from "../StorySwitcher/StorySwitcherContext";
import { getLabelId as getLabelIdStorySwitcher } from "../StorySwitcher/utils";
import { AccessibleId } from "../AccessibleId";
import { getDescriptionId, getLabelId } from "./utils";
import { StorySlotsContext } from "./StorySlotsContext";
export var Story = function Story(_ref) {
  var video = _ref.video,
      image = _ref.image,
      bg = _ref.bg,
      _ref$variant = _ref.variant,
      variant = _ref$variant === void 0 ? StoryVariant.DEFAULT : _ref$variant,
      children = _ref.children,
      name = _ref.name,
      rest = _objectWithoutPropertiesLoose(_ref, ["video", "image", "bg", "variant", "children", "name"]);

  var paused = useSlidesContext();
  return /*#__PURE__*/React.createElement(ThemeProvider, {
    mode: UnifiedColorMode.LIGHT
  }, /*#__PURE__*/React.createElement(StorySlotsContext.Provider, null, /*#__PURE__*/React.createElement(AccessibleId, null, function (_ref2) {
    var id = _ref2.id;
    return /*#__PURE__*/React.createElement(StoryBody, _extends({
      image: image,
      bg: bg,
      variant: variant,
      "aria-labelledby": getLabelId(id),
      "aria-describedby": getDescriptionId(id),
      role: "group"
    }, rest), video && /*#__PURE__*/React.createElement(Video, {
      video: video,
      paused: paused != null ? paused : undefined
    }), /*#__PURE__*/React.createElement(StoryLayout, {
      name: name
    }, children));
  })));
};
Story.defaultProps = {
  bg: Color.BLACK,
  variant: StoryVariant.DEFAULT
};
var StoryBody = /*#__PURE__*/styled(Relative).withConfig({
  displayName: "Story__StoryBody",
  componentId: "sc-1c05idm-0"
})(["flex-grow:1;background-image:", ";"], function (_ref3) {
  var image = _ref3.image;
  return image ? "url(" + image + ")" : undefined;
});
StoryBody.defaultProps = {
  variantKey: 'storyStyles'
};

var StoryHeader = function StoryHeader(_ref4) {
  var name = _ref4.name;

  var _useStorySwitcherCont = useStorySwitcherContext(),
      id = _useStorySwitcherCont.id;

  return /*#__PURE__*/React.createElement(Flex, {
    alignItems: "center",
    px: Space.S_24,
    pt: Space.S_32,
    pb: Space.S_8,
    color: Color.WHITE_80
  }, /*#__PURE__*/React.createElement(Icons.Revolut, {
    size: 16
  }), /*#__PURE__*/React.createElement(Text, {
    ml: Space.S_8,
    mr: Space.S_32,
    ellipsis: true,
    id: getLabelIdStorySwitcher(id)
  }, name));
};

var StoryLayout = function StoryLayout(_ref5) {
  var children = _ref5.children,
      rest = _objectWithoutPropertiesLoose(_ref5, ["children"]);

  return /*#__PURE__*/React.createElement(StoryLayoutWrapper, {
    color: Color.WHITE,
    top: 0,
    right: 0,
    bottom: 0,
    left: 0
  }, /*#__PURE__*/React.createElement(StoryHeaderWrapper, null, /*#__PURE__*/React.createElement(StoryHeader, rest), /*#__PURE__*/React.createElement(Flex, {
    flexDirection: "column",
    flex: "1",
    overflow: "auto"
  }, children)), /*#__PURE__*/React.createElement(StorySlotsContext.Slot, {
    name: StorySlots.ACTIONS
  }));
};

Story.Title = StoryTitle;
Story.Description = StoryDescription;
Story.Actions = StoryActions;
Story.Content = StoryContent;