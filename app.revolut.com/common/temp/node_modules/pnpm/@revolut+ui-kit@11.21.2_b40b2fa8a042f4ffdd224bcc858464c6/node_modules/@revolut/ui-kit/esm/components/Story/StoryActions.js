/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import styled from 'styled-components';
import css from '@styled-system/css';
import { StorySlots } from "./constants";
import { Space } from "../../constants";
import { Box } from "../Box";
import { StorySlotsContext } from "./StorySlotsContext";
var StoryActionsBase = /*#__PURE__*/styled(Box).withConfig({
  displayName: "StoryActions__StoryActionsBase",
  componentId: "sc-49ll12-0"
})(css({
  paddingY: Space.S_24,
  paddingX: Space.S_16,
  display: 'grid',
  gap: Space.S_16,
  position: 'absolute',
  bottom: 0,
  left: 0,
  right: 0,
  '&[aria-orientation=horizontal]': {
    gridAutoFlow: 'column'
  },
  '&[aria-orientation=vertical]': {
    gridAutoFlow: 'row'
  }
}));
StoryActionsBase.defaultProps = {
  onClick: function onClick(event) {
    return event.stopPropagation();
  },
  horizontal: false
};
export var StoryActions = function StoryActions(_ref) {
  var horizontal = _ref.horizontal,
      rest = _objectWithoutPropertiesLoose(_ref, ["horizontal"]);

  return /*#__PURE__*/React.createElement(StorySlotsContext.Fill, {
    name: StorySlots.ACTIONS
  }, /*#__PURE__*/React.createElement(StoryActionsBase, _extends({
    "aria-orientation": horizontal ? 'horizontal' : 'vertical'
  }, rest)));
};