/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

var _LEVEL_COLORS;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import { Color } from "../..";
import { Cell } from "./Cell";
export var StatusCellLevels = {
  DISABLED: 'disabled',
  ALERT: 'alert',
  WARNING: 'warning',
  MODERATE: 'moderate',
  SUCCESS: 'success'
};
var LEVEL_COLORS = (_LEVEL_COLORS = {}, _LEVEL_COLORS[StatusCellLevels.SUCCESS] = Color.GREEN, _LEVEL_COLORS[StatusCellLevels.MODERATE] = Color.YELLOW, _LEVEL_COLORS[StatusCellLevels.WARNING] = Color.ORANGE, _LEVEL_COLORS[StatusCellLevels.ALERT] = Color.RED, _LEVEL_COLORS[StatusCellLevels.DISABLED] = Color.GREY_50, _LEVEL_COLORS);
export var StatusCell = function StatusCell(_ref) {
  var level = _ref.level,
      children = _ref.children,
      rest = _objectWithoutPropertiesLoose(_ref, ["level", "children"]);

  return /*#__PURE__*/React.createElement(Cell, _extends({
    color: LEVEL_COLORS[level]
  }, rest), children);
};