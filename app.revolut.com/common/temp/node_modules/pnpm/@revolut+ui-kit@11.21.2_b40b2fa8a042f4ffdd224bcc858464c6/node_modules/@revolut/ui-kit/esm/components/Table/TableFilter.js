/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import * as Icons from '@revolut/icons';
import { hasValue } from "../../utils";
import { IconButton } from "../IconButton";
import { Spinner } from "../Spinner";
import { useTableFilter } from "./useTableFilter";
import { HeaderCellAction } from "./HeaderCellAction";
export function TableFilter(_ref) {
  var column = _ref.column,
      pending = _ref.pending,
      children = _ref.children,
      onToggleChange = _ref.onToggleChange,
      title = _ref.title,
      rest = _objectWithoutPropertiesLoose(_ref, ["column", "pending", "children", "onToggleChange", "title"]);

  var filter = useTableFilter(column, onToggleChange);
  return /*#__PURE__*/React.createElement(HeaderCellAction, {
    enabled: hasValue(column.filterValue) || filter.isOpen
  }, /*#__PURE__*/React.createElement(IconButton, _extends({
    ref: filter.anchorRef,
    size: 16,
    tapArea: 24,
    useIcon: pending ? Spinner : Icons.Filter,
    onClick: function onClick() {
      return filter.setOpen(!filter.isOpen);
    },
    "aria-pressed": filter.isEnabled,
    "aria-expanded": filter.isOpen,
    title: title != null ? title : rest['aria-label']
  }, rest)), children(filter));
}