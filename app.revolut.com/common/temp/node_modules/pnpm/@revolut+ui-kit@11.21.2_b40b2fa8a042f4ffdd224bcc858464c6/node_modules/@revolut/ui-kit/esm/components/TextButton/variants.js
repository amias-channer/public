/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

var _extends2;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import { Color, TextStyle, Transition } from "../../constants";
import { createColorVariants } from "../../styles";
export var TextButtonVariant = _extends({
  DEFAULT: 'default'
}, Color);
var COLOR_STYLES = createColorVariants(function (color) {
  return {
    variant: "textStyles." + TextStyle.TEXT_BUTTON,
    color: color,
    transition: function transition(theme) {
      var _theme$transitions;

      return (_theme$transitions = theme.transitions) == null ? void 0 : _theme$transitions[Transition.BUTTON];
    },
    '&:disabled, &[aria-disabled=true]': {
      opacity: 0.5
    }
  };
});
export var TEXT_BUTTON_STYLES = _extends((_extends2 = {}, _extends2[TextButtonVariant.DEFAULT] = {
  variant: "textButtonStyles." + Color.BLUE
}, _extends2), COLOR_STYLES);