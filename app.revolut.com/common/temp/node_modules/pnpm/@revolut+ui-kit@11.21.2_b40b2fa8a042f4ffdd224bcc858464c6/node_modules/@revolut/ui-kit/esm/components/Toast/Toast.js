/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import styled from 'styled-components';
import { css } from '@styled-system/css';
import { rem } from 'polished';
import { Color, Radius, Space, TextStyle } from "../../constants";
import { rgbaSafe, themeColor } from "../../utils";
import { Box } from "../Box";
import { Flex } from "../Flex";
import { Text } from "../Text";
import { AccessibleId, useAccessibleId } from "../AccessibleId";
import { Action } from "../Action";
import { Ellipsis } from "../Ellipsis";

function getLabelId(id) {
  return id ? "toast-" + id + "-label" : undefined;
}

var Divider = /*#__PURE__*/styled.span.withConfig({
  displayName: "Toast__Divider",
  componentId: "fbdb8c-0"
})(css({
  backgroundColor: Color.GREY_TONE_20,
  width: 1,
  height: rem(22),
  opacity: 0.5
}));
var ToastBase = /*#__PURE__*/styled(Box).withConfig({
  displayName: "Toast__ToastBase",
  componentId: "fbdb8c-1"
})(function (props) {
  return css({
    height: rem(46),
    width: 'fit-content',
    maxWidth: '100%',
    display: 'grid',
    alignItems: 'center',
    gridAutoFlow: 'column',
    gridAutoColumns: 'auto',
    columnGap: Space.S_8,
    px: Space.S_24,
    borderRadius: Radius.ROUND,
    backgroundColor: rgbaSafe(themeColor(Color.WIDGET_BACKGROUND)(props), 0.8),
    color: Color.FOREGROUND,
    backdropFilter: 'blur(16px)'
  });
});

function ToastLabel(_ref) {
  var children = _ref.children,
      rest = _objectWithoutPropertiesLoose(_ref, ["children"]);

  var accessibleId = useAccessibleId();
  return /*#__PURE__*/React.createElement(Text, _extends({
    id: getLabelId(accessibleId),
    variant: TextStyle.CAPTION,
    minWidth: 0
  }, rest), /*#__PURE__*/React.createElement(Ellipsis, null, children));
}

var ToastIndicator = /*#__PURE__*/styled(Flex).withConfig({
  displayName: "Toast__ToastIndicator",
  componentId: "fbdb8c-2"
})(["align-items:center;"]);

var ToastAction = function ToastAction(props) {
  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Divider, null), /*#__PURE__*/React.createElement(Action, _extends({
    color: Color.LIGHT_BLUE
  }, props)));
};

export var Toast = function Toast(props) {
  return /*#__PURE__*/React.createElement(AccessibleId, null, function (_ref2) {
    var id = _ref2.id;
    return /*#__PURE__*/React.createElement(ToastBase, _extends({
      role: "alert",
      "aria-labelledby": getLabelId(id)
    }, props));
  });
};
Toast.Label = ToastLabel;
Toast.Indicator = ToastIndicator;
Toast.Action = ToastAction;