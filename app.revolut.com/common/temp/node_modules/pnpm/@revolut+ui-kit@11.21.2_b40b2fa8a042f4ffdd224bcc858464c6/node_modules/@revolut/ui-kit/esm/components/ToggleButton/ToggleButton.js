/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

import React from 'react';
import styled from 'styled-components';
import { ButtonSize, ButtonVariant } from "../../constants";
import { useCheckbox } from "../../hooks";
import { CheckboxInput } from "../Checkbox/CheckboxInput";
import { Button } from "../Button";
var ToggleButtonWrapper = /*#__PURE__*/styled(Button).withConfig({
  displayName: "ToggleButton__ToggleButtonWrapper",
  componentId: "azevfc-0"
})(["position:relative;"]);
export var ToggleButton = function ToggleButton(_ref) {
  var checked = _ref.checked,
      defaultChecked = _ref.defaultChecked,
      _ref$disabled = _ref.disabled,
      disabled = _ref$disabled === void 0 ? false : _ref$disabled,
      children = _ref.children,
      onChange = _ref.onChange,
      value = _ref.value,
      name = _ref.name,
      useIcon = _ref.useIcon;

  var _useCheckbox = useCheckbox({
    isActive: checked,
    defaultIsActive: defaultChecked,
    onChange: onChange,
    isDisabled: disabled
  }),
      state = _useCheckbox[0],
      getProps = _useCheckbox[1];

  return /*#__PURE__*/React.createElement(ToggleButtonWrapper, {
    use: "label",
    size: ButtonSize.TAG,
    disabled: disabled,
    variant: state.isActive ? ButtonVariant.PRIMARY : ButtonVariant.SECONDARY,
    useIcon: useIcon
  }, children, /*#__PURE__*/React.createElement(CheckboxInput, getProps({
    type: 'checkbox',
    name: name,
    value: value
  })));
};