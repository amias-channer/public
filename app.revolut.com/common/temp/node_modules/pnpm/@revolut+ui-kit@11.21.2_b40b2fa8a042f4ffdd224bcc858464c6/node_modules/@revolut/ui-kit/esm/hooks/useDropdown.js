/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

import { useMemo, useRef, useState } from 'react';
import { noop } from "../utils";
export function useDropdown(defaultState, onChange) {
  if (defaultState === void 0) {
    defaultState = false;
  }

  if (onChange === void 0) {
    onChange = noop;
  }

  var _useState = useState(defaultState),
      state = _useState[0],
      setState = _useState[1];

  var toggleRef = useRef(null);
  return useMemo(function () {
    var toggleProps = {
      ref: toggleRef,
      onClick: function onClick() {
        return setState(!state);
      }
    };
    var dropdownProps = {
      anchorRef: toggleRef,
      isOpen: state,
      onClickAway: function onClickAway() {
        return setState(false);
      }
    };

    var setOpen = function setOpen(nextState) {
      setState(nextState);
      onChange(nextState);
    };

    return {
      toggleRef: toggleRef,
      toggleProps: toggleProps,
      dropdownProps: dropdownProps,
      isOpen: state,
      setOpen: setOpen
    };
  }, [state, setState, onChange]);
}