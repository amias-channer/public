/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

import { useEffect, useRef } from 'react';
import { useDocument } from "./useDocument";
import { isString, noop } from "../utils";
export var DEFAULT_PORTAL_TARGET = 'body';

var defaultCreateElement = function defaultCreateElement(doc) {
  if (doc == null) {
    return null;
  }

  return doc.createElement('div');
};

var insertElement = function insertElement(target, element, doc) {
  if (doc == null || element === null) {
    return noop;
  }

  var targetElement = isString(target) ? doc.querySelector(target) : target;

  if (targetElement === null) {
    return noop;
  }

  if (!targetElement.contains(element)) {
    targetElement.appendChild(element);
  }

  return function () {
    targetElement.removeChild(element);
  };
};

export var usePortalRef = function usePortalRef(target, createElement) {
  if (target === void 0) {
    target = DEFAULT_PORTAL_TARGET;
  }

  if (createElement === void 0) {
    createElement = defaultCreateElement;
  }

  var portalRef = useRef(null);
  var doc = useDocument();

  if (portalRef.current === null) {
    portalRef.current = createElement(doc); // optimistically try to insert element as soon as possible

    insertElement(target, portalRef.current, doc);
  } // otherwise do it after first render and on 'target' update


  useEffect(function () {
    var cleanupElement = insertElement(target, portalRef.current, doc);
    return cleanupElement;
  }, [portalRef, target, doc]);
  return portalRef;
};