/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

import { useEffect, useState } from 'react';
import { useWindow } from "./useWindow";
export function useResizeObserver(ref, state) {
  if (state === void 0) {
    state = true;
  }

  var win = useWindow();

  var _useState = useState({
    width: 0,
    height: 0
  }),
      rect = _useState[0],
      setRect = _useState[1];

  useEffect(function () {
    var element = ref.current;

    if (win && win.ResizeObserver && element && state) {
      var observer = new win.ResizeObserver(function (_ref) {
        var entry = _ref[0];

        if (entry.target instanceof win.HTMLElement) {
          var boundingClientRect = entry.target.getBoundingClientRect();
          setRect(function (prev) {
            if (boundingClientRect.width === prev.width && boundingClientRect.height === prev.height) return prev;
            return {
              width: boundingClientRect.width,
              height: boundingClientRect.height
            };
          });
        }
      });
      observer.observe(element);
      return function () {
        return observer.disconnect();
      };
    }
  }, [ref, win, state]);
  return rect;
}