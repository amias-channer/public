/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

import { useEffect } from 'react';
import { useLatestRef } from "./useLatestRef";
/** @private */

export function useSizeOnMouseEnter(ref, state, callback) {
  var callbackRef = useLatestRef(callback);
  useEffect(function () {
    if (ref.current && state) {
      var outer = ref.current;

      var updateFor = function updateFor(wrapper) {
        var outerRect = outer.getBoundingClientRect();
        var innerRect = wrapper.getBoundingClientRect();
        callbackRef.current == null ? void 0 : callbackRef.current(outerRect, innerRect);
      };

      var handleMouseEnter = function handleMouseEnter() {
        if (outer.firstElementChild) {
          updateFor(outer.firstElementChild);
        } else {
          var span = outer.ownerDocument.createElement('span');

          while (outer.firstChild) {
            span.appendChild(outer.firstChild);
          }

          outer.appendChild(span);
          updateFor(span);

          while (span.firstChild) {
            outer.appendChild(span.firstChild);
          }

          span.remove();
        }
      };

      outer.addEventListener('mouseenter', handleMouseEnter, {
        passive: true
      });
      return function () {
        return outer.removeEventListener('mouseenter', handleMouseEnter);
      };
    }
  }, [ref, state, callbackRef]);
}