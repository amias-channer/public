/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import React from 'react';
import { Box } from "../../../components/Box";
import { LegacyCard } from "./LegacyCard";

/** @deprecated Use `Cell`, or `Item` */
export var Card = /*#__PURE__*/React.forwardRef(function (_ref, ref) {
  var _ref$variantKey = _ref.variantKey,
      variantKey = _ref$variantKey === void 0 ? 'cardStyles' : _ref$variantKey,
      _ref$variant = _ref.variant,
      variant = _ref$variant === void 0 ? null : _ref$variant,
      props = _objectWithoutPropertiesLoose(_ref, ["variantKey", "variant"]);

  if (variant !== null) {
    return /*#__PURE__*/React.createElement(Box, _extends({
      ref: ref,
      display: "block",
      tabIndex: props.role === 'button' ? 0 : undefined,
      "aria-disabled": props.disabled || undefined,
      variant: variant,
      variantKey: variantKey
    }, props));
  }

  return /*#__PURE__*/React.createElement(LegacyCard, _extends({
    ref: ref
  }, props));
});