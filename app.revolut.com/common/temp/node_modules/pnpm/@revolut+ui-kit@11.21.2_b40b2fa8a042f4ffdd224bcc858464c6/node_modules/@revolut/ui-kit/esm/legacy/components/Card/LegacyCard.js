/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

import styled, { css } from 'styled-components';
import { ElevationLevel } from "../../../constants";
import { Box } from "../../../components/Box";

// COMPAT remove `shadow`, `shadowOnHover` props
var compatProps = function compatProps(_ref) {
  var isDisabled = _ref.isDisabled,
      isFlat = _ref.isFlat,
      isInteractive = _ref.isInteractive,
      shadow = _ref.shadow,
      _ref$shadowOnHover = _ref.shadowOnHover,
      shadowOnHover = _ref$shadowOnHover === void 0 ? ElevationLevel.MEDIUM : _ref$shadowOnHover,
      _ref$elevationOnHover = _ref.elevationOnHover,
      elevationOnHover = _ref$elevationOnHover === void 0 ? isInteractive ? shadowOnHover : undefined : _ref$elevationOnHover,
      rest = _objectWithoutPropertiesLoose(_ref, ["isDisabled", "isFlat", "isInteractive", "shadow", "shadowOnHover", "elevationOnHover"]);

  return _extends({
    textStyle: 'default',
    color: 'black',
    radius: 'card',
    elevation: ElevationLevel.LEVEL
  }, isFlat && {
    elevation: ElevationLevel.NONE
  }, shadow && {
    elevation: shadow
  }, !isDisabled && {
    elevationOnHover: elevationOnHover
  }, rest);
};
/** @deprecated use `Card` */


export var LegacyCard = /*#__PURE__*/styled(Box).attrs(compatProps).withConfig({
  displayName: "LegacyCard",
  componentId: "iw7ndk-0"
})(["position:relative;cursor:", ";", ""], function (props) {
  return props.isInteractive && 'pointer';
}, function (props) {
  return props.isDisabled && css(["cursor:default;& > *{opacity:0.3;}"]);
});
LegacyCard.displayName = 'LegacyCard';
LegacyCard.defaultProps = {
  isInteractive: false,
  isDisabled: false,
  isFlat: false
};