/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

var _extends2;

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

import { darken, hsl, lighten, parseToHsl } from 'polished';
import { px, rgbaSafe } from "../../../utils";
import { Color } from "../../../constants";
import { createColorVariants } from "../../../styles";
export var CircleButtonVariant = _extends({
  DEFAULT: 'default',
  OUTLINE: 'outline'
}, Color);
var WHITE_CIRCLE_BUTTON_STYLE = {
  color: Color.BLACK,
  backgroundColor: Color.WHITE,
  '&[disabled], &:disabled, &[aria-disabled=true]': {
    color: function color(theme) {
      return rgbaSafe(theme.colors[Color.BLACK], 0.5);
    }
  }
};
var OUTLINE_CIRCLE_BUTTON_STYLE = {
  color: Color.GREY_TONE_50,
  borderWidth: px(1),
  borderStyle: 'solid',
  borderColor: Color.TRANSPARENT_GREY_90
};
var CIRCLE_BUTTON_COLOR_STYLES = createColorVariants(function (name) {
  if (name === Color.WHITE) {
    return WHITE_CIRCLE_BUTTON_STYLE;
  }

  return {
    color: Color.WHITE,
    backgroundColor: name,
    '&:hover': {
      backgroundColor: function backgroundColor(theme) {
        return lighten(0.03, theme.colors[name]);
      }
    },
    '&:active': {
      backgroundColor: function backgroundColor(theme) {
        return darken(0.02, theme.colors[name]);
      }
    },
    '&[disabled], &:disabled, &[aria-disabled=true]': {
      backgroundColor: function backgroundColor(theme) {
        return Color.BLACK === name ? rgbaSafe(theme.colors[name], 0.5) : hsl(_extends({}, parseToHsl(theme.colors[name]), {
          saturation: 0.85,
          lightness: 0.73
        }));
      },
      color: function color(theme) {
        return rgbaSafe(theme.colors[Color.WHITE], 0.5);
      }
    }
  };
});
export var CIRCLE_BUTTON_STYLES = _extends({}, CIRCLE_BUTTON_COLOR_STYLES, (_extends2 = {}, _extends2[CircleButtonVariant.DEFAULT] = WHITE_CIRCLE_BUTTON_STYLE, _extends2[CircleButtonVariant.OUTLINE] = OUTLINE_CIRCLE_BUTTON_STYLE, _extends2));