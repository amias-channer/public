/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/
import _styled from "styled-components";

function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }

function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }

function _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; _setPrototypeOf(subClass, superClass); }

function _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }

import { setDay } from 'date-fns';
import * as Icons from '@revolut/icons';
import React, { Component } from 'react';
import ReactDayPicker from 'react-day-picker';
import { noop, renderNothing } from "../../../utils";
import { Box } from "../../../components/Box";
import { Flex } from "../../../components/Flex";
import { DropdownItem } from "../../../components/Dropdown";
import { createFormatDate } from "./utils";
import { DatePickerState } from "./DatePickerState";
import { DatePickerContainer, DatePickerDay, DatePickerMonth, DatePickerNavBarButton, DatePickerWeekDay } from "./styles";
var getWeekDay = createFormatDate('E');

var defaultFormatWeekDay = function defaultFormatWeekDay(input) {
  return getWeekDay(input).slice(0, 1);
};
/** @deprecated use `Calendar` */


var _StyledFlex = /*#__PURE__*/_styled(Flex).withConfig({
  displayName: "DatePicker___StyledFlex",
  componentId: "l0wiaa-0"
})({
  position: 'absolute',
  right: 0,
  top: 0
});

export var DatePicker = /*#__PURE__*/function (_Component) {
  _inheritsLoose(DatePicker, _Component);

  function DatePicker() {
    var _this;

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _Component.call.apply(_Component, [this].concat(args)) || this;

    _this.renderWeekDay = function (_ref) {
      var weekday = _ref.weekday;
      var formatWeekDay = _this.props.formatWeekDay;
      var date = setDay(new Date(), weekday);
      return /*#__PURE__*/React.createElement(DatePickerWeekDay, {
        variant: "caption"
      }, formatWeekDay(date));
    };

    _this.renderDay = function (date, modifiers) {
      var formatDay = _this.props.formatDay;
      return /*#__PURE__*/React.createElement(Box, {
        p: "s-8"
      }, /*#__PURE__*/React.createElement(DatePickerDay, _extends({
        m: "auto"
      }, modifiers), formatDay(date)));
    };

    _this.renderMonth = function (_ref2) {
      var date = _ref2.date,
          onClick = _ref2.onClick;
      var formatMonth = _this.props.formatMonth;
      return /*#__PURE__*/React.createElement(DatePickerMonth, {
        mb: "s-24",
        mx: "s-8",
        onClick: onClick
      }, formatMonth(date));
    };

    _this.renderNavbar = function (_ref3) {
      var onPreviousClick = _ref3.onPreviousClick,
          onNextClick = _ref3.onNextClick,
          className = _ref3.className;
      return /*#__PURE__*/React.createElement(_StyledFlex, {
        mr: "s-8",
        color: "grey-50",
        className: className
      }, /*#__PURE__*/React.createElement(DatePickerNavBarButton, {
        ml: "s-8",
        mr: "s-16",
        onClick: function onClick() {
          return onPreviousClick();
        }
      }, /*#__PURE__*/React.createElement(Icons.ShevronLeft, {
        size: 24
      })), /*#__PURE__*/React.createElement(DatePickerNavBarButton, {
        mx: "s-8",
        onClick: function onClick() {
          return onNextClick();
        }
      }, /*#__PURE__*/React.createElement(Icons.ShevronRight, {
        size: 24
      })));
    };

    _this.renderClearButton = function (_ref4) {
      var changeDay = _ref4.changeDay,
          _ref4$onClearClick = _ref4.onClearClick,
          onClearClick = _ref4$onClearClick === void 0 ? noop : _ref4$onClearClick;
      var _this$props = _this.props,
          clearLabel = _this$props.clearLabel,
          clearToDate = _this$props.clearToDate;
      return /*#__PURE__*/React.createElement(DropdownItem, {
        mb: "-s-8",
        mx: "-s-16",
        color: "primary",
        onClick: function onClick() {
          changeDay(clearToDate);
          onClearClick();
        }
      }, /*#__PURE__*/React.createElement(Flex, {
        alignItems: "center"
      }, /*#__PURE__*/React.createElement(Box, {
        mr: "s-16"
      }, /*#__PURE__*/React.createElement(Icons.Cross, {
        size: 16
      })), /*#__PURE__*/React.createElement(Box, null, clearLabel)));
    };

    return _this;
  }

  var _proto = DatePicker.prototype;

  _proto.render = function render() {
    var _this2 = this;

    var _this$props2 = this.props,
        width = _this$props2.width,
        textStyle = _this$props2.textStyle,
        clearable = _this$props2.clearable,
        renderAction = _this$props2.renderAction,
        renderWrapper = _this$props2.renderWrapper,
        rest = _objectWithoutPropertiesLoose(_this$props2, ["width", "textStyle", "clearable", "renderAction", "renderWrapper"]);

    return /*#__PURE__*/React.createElement(DatePickerState, _extends({
      captionElement: this.renderMonth,
      weekdayElement: this.renderWeekDay,
      navbarElement: this.renderNavbar,
      renderDay: this.renderDay
    }, rest), function (_ref5) {
      var setPickerRef = _ref5.setPickerRef,
          pickerState = _objectWithoutPropertiesLoose(_ref5, ["setPickerRef"]);

      return renderWrapper(_extends({}, pickerState, {
        picker: /*#__PURE__*/React.createElement(DatePickerContainer, {
          width: width
        }, /*#__PURE__*/React.createElement(Box, {
          textStyle: textStyle
        }, /*#__PURE__*/React.createElement(ReactDayPicker, _extends({
          ref: setPickerRef
        }, pickerState)), clearable && _this2.renderClearButton(pickerState), renderAction(pickerState)))
      }));
    });
  };

  return DatePicker;
}(Component);
DatePicker.defaultProps = {
  textStyle: 'default',
  width: null,
  formatDay: createFormatDate('d'),
  formatWeekDay: defaultFormatWeekDay,
  formatMonth: createFormatDate('MMMM y'),
  renderWrapper: function renderWrapper(item) {
    return item == null ? void 0 : item.picker;
  },
  renderAction: renderNothing,
  clearLabel: 'Clear date',
  clearable: true,
  clearToDate: null
};