/**
* Copyright 2018-present Revolut LTD
* 
* Licensed under the Apache License, Version 2.0 (the "License");
* you may not use this file except in compliance with the License.
* You may obtain a copy of the License at
* 
*     http://www.apache.org/licenses/LICENSE-2.0
* 
* Unless required by applicable law or agreed to in writing, software
* distributed under the License is distributed on an "AS IS" BASIS,
* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
* See the License for the specific language governing permissions and
* limitations under the License.
* 
**/

function _await(value, then, direct) {
  if (direct) {
    return then ? then(value) : value;
  }

  if (!value || !value.then) {
    value = Promise.resolve(value);
  }

  return then ? value.then(then) : value;
}

function _async(f) {
  return function () {
    for (var args = [], i = 0; i < arguments.length; i++) {
      args[i] = arguments[i];
    }

    try {
      return Promise.resolve(f.apply(this, args));
    } catch (e) {
      return Promise.reject(e);
    }
  };
}

function _call(body, then, direct) {
  if (direct) {
    return then ? then(body()) : body();
  }

  try {
    var result = Promise.resolve(body());
    return then ? result.then(then) : result;
  } catch (e) {
    return Promise.reject(e);
  }
}

export var finishLottieAnimations = function finishLottieAnimations() {
  return _call(getRegisteredLottieAnimations, function (animations) {
    animations.forEach(advanceLottieAnimation);
  });
};
export var advanceFirstLottieAnimation = function advanceFirstLottieAnimation(frame) {
  return _call(getRegisteredLottieAnimations, function (_ref) {
    var animation = _ref[0];

    if (animation) {
      advanceLottieAnimation(animation, frame);
    }
  });
};
export var getRegisteredLottieAnimations = _async(function () {
  return _await(import('lottie-web/build/player/lottie_light'), function (_import) {
    var LottiePlayer = _import["default"];
    // @ts-expect-error wrong typings in Lottie. No typings for getRegisteredAnimations method.
    return LottiePlayer.getRegisteredAnimations();
  });
});

function advanceLottieAnimation(animation, frame) {
  if (!frame) {
    frame = animation.getDuration(true);
  }

  animation.goToAndStop(frame, true);
}