// tslint:disable
/**
 * Source of Transaction
 * # Overview  Source of Transaction flow is used for allowing our users to verify flagged payers along with related transactions. The flow is triggered when AML models decide so.  # Api Workflow  ## What should happen when user has not submitted anything    1. `GET /user/current/submissions/states` returns `REQUIRED` for `sourceOfTransaction` flow therefore user should be presented with the submission.   1. `GET /user/current/submissions/sot/v6/config` returns payer names & transaction ids.   1. `GET /user/current/submissions/sot/v6/latest` return `404` code meaning that user has not submitted anything yet.   1. `GET /user/current/submissions/sot/v6/evidences/types` for fetching available income sources for the list & other metadata via this endpoint.   1. `POST /user/current/submissions/sot/v6/evidences` for creating evidence with user defined `type` and other parameters   1. `POST /user/current/submissions/sot/v6/evidences/{evidenceId}/documents` which uploads all the pages for documents  ## What should happen when user has submitted something but didn\'t finish    The same as in previous point but 2. step will have different outcome:   2. `GET /user/current/submissions/sot/v6/latest` returns submission state with previously created evidences & uploaded pages.
 *
 * The version of the OpenAPI document: V6
 *
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { SOTActionToDo } from './sotaction-to-do'
import { SOTLatestSubmissionEvidences } from './sotlatest-submission-evidences'
import { SOTQuestionResponse } from './sotquestion-response'
import { SOTReviewState } from './sotreview-state'

/**
 * Review states of all the entities are dependant on each other, it means that if document level has `UPDATE_REQUIRED` then evidence and submission `reviewState` will also be `UPDATE_REQUIRED`
 * @export
 * @interface SOTLatestSubmission
 */
export interface SOTLatestSubmission {
  /**
   *
   * @type {string}
   * @memberof SOTLatestSubmission
   */
  id?: string
  /**
   *
   * @type {string}
   * @memberof SOTLatestSubmission
   */
  state?: SOTLatestSubmissionStateEnum
  /**
   *
   * @type {SOTReviewState}
   * @memberof SOTLatestSubmission
   */
  reviewState?: SOTReviewState
  /**
   *
   * @type {number}
   * @memberof SOTLatestSubmission
   */
  submittedDate?: number
  /**
   *
   * @type {number}
   * @memberof SOTLatestSubmission
   */
  reviewStartedDate?: number
  /**
   *
   * @type {number}
   * @memberof SOTLatestSubmission
   */
  approvedDate?: number
  /**
   *
   * @type {SOTActionToDo}
   * @memberof SOTLatestSubmission
   */
  actionToDo?: SOTActionToDo
  /**
   * It is set to true only at 1st submission, during reask/request its set to False as user is not able to add any type of evidence that they want
   * @type {boolean}
   * @memberof SOTLatestSubmission
   */
  canAddSource?: boolean
  /**
   *
   * @type {Array<SOTQuestionResponse>}
   * @memberof SOTLatestSubmission
   */
  questions?: Array<SOTQuestionResponse>
  /**
   *
   * @type {Array<SOTLatestSubmissionEvidences>}
   * @memberof SOTLatestSubmission
   */
  evidences?: Array<SOTLatestSubmissionEvidences>
}

/**
 * @export
 * @enum {string}
 */
export enum SOTLatestSubmissionStateEnum {
  PENDING_USER = 'PENDING_USER',
  PENDING_APPROVAL = 'PENDING_APPROVAL',
  UNDER_REVIEW = 'UNDER_REVIEW',
  REJECTED = 'REJECTED',
  APPROVED = 'APPROVED',
}
